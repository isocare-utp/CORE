//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Saving.Applications._global.w_dlg_dp_slip_recppaytype_ctrl {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DataSet1")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DataSet1 : global::System.Data.DataSet {
        
        private DPUCFRECPPAYTYPEDataTable tableDPUCFRECPPAYTYPE;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DataSet1() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected DataSet1(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["DPUCFRECPPAYTYPE"] != null)) {
                    base.Tables.Add(new DPUCFRECPPAYTYPEDataTable(ds.Tables["DPUCFRECPPAYTYPE"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DPUCFRECPPAYTYPEDataTable DPUCFRECPPAYTYPE {
            get {
                return this.tableDPUCFRECPPAYTYPE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            DataSet1 cln = ((DataSet1)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["DPUCFRECPPAYTYPE"] != null)) {
                    base.Tables.Add(new DPUCFRECPPAYTYPEDataTable(ds.Tables["DPUCFRECPPAYTYPE"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableDPUCFRECPPAYTYPE = ((DPUCFRECPPAYTYPEDataTable)(base.Tables["DPUCFRECPPAYTYPE"]));
            if ((initTable == true)) {
                if ((this.tableDPUCFRECPPAYTYPE != null)) {
                    this.tableDPUCFRECPPAYTYPE.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "DataSet1";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DataSet1.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableDPUCFRECPPAYTYPE = new DPUCFRECPPAYTYPEDataTable();
            base.Tables.Add(this.tableDPUCFRECPPAYTYPE);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeDPUCFRECPPAYTYPE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DataSet1 ds = new DataSet1();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void DPUCFRECPPAYTYPERowChangeEventHandler(object sender, DPUCFRECPPAYTYPERowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DPUCFRECPPAYTYPEDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnCOOP_ID;
            
            private global::System.Data.DataColumn columnRECPPAYTYPE_CODE;
            
            private global::System.Data.DataColumn columnRECPPAYTYPE_DESC;
            
            private global::System.Data.DataColumn columnRECPPAYTYPE_SORT;
            
            private global::System.Data.DataColumn columnRECPPAYTYPE_FLAG;
            
            private global::System.Data.DataColumn columnSTM_ITEMTYPE;
            
            private global::System.Data.DataColumn columnCSTM_ITEMTYPE;
            
            private global::System.Data.DataColumn columnMONEYTYPE_SUPPORT;
            
            private global::System.Data.DataColumn columnINT_ITEMTYPE;
            
            private global::System.Data.DataColumn columnCINT_ITEMTYPE;
            
            private global::System.Data.DataColumn columnINT_FIXEDITEMTYPE;
            
            private global::System.Data.DataColumn columnGROUP_ITEMTPE;
            
            private global::System.Data.DataColumn columnACCNATURE_FLAG;
            
            private global::System.Data.DataColumn columnACCMAP_CODE;
            
            private global::System.Data.DataColumn columnGENVC_FLAG;
            
            private global::System.Data.DataColumn columnACTIVE_FLAG;
            
            private global::System.Data.DataColumn columnORDER_SORT;
            
            private global::System.Data.DataColumn columnDEFAULT_ACCID;
            
            private global::System.Data.DataColumn columnDEPTWITH_FLAG;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DPUCFRECPPAYTYPEDataTable() {
                this.TableName = "DPUCFRECPPAYTYPE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DPUCFRECPPAYTYPEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected DPUCFRECPPAYTYPEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn COOP_IDColumn {
                get {
                    return this.columnCOOP_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RECPPAYTYPE_CODEColumn {
                get {
                    return this.columnRECPPAYTYPE_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RECPPAYTYPE_DESCColumn {
                get {
                    return this.columnRECPPAYTYPE_DESC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RECPPAYTYPE_SORTColumn {
                get {
                    return this.columnRECPPAYTYPE_SORT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RECPPAYTYPE_FLAGColumn {
                get {
                    return this.columnRECPPAYTYPE_FLAG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn STM_ITEMTYPEColumn {
                get {
                    return this.columnSTM_ITEMTYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CSTM_ITEMTYPEColumn {
                get {
                    return this.columnCSTM_ITEMTYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MONEYTYPE_SUPPORTColumn {
                get {
                    return this.columnMONEYTYPE_SUPPORT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn INT_ITEMTYPEColumn {
                get {
                    return this.columnINT_ITEMTYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CINT_ITEMTYPEColumn {
                get {
                    return this.columnCINT_ITEMTYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn INT_FIXEDITEMTYPEColumn {
                get {
                    return this.columnINT_FIXEDITEMTYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GROUP_ITEMTPEColumn {
                get {
                    return this.columnGROUP_ITEMTPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ACCNATURE_FLAGColumn {
                get {
                    return this.columnACCNATURE_FLAG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ACCMAP_CODEColumn {
                get {
                    return this.columnACCMAP_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GENVC_FLAGColumn {
                get {
                    return this.columnGENVC_FLAG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ACTIVE_FLAGColumn {
                get {
                    return this.columnACTIVE_FLAG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ORDER_SORTColumn {
                get {
                    return this.columnORDER_SORT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DEFAULT_ACCIDColumn {
                get {
                    return this.columnDEFAULT_ACCID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DEPTWITH_FLAGColumn {
                get {
                    return this.columnDEPTWITH_FLAG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DPUCFRECPPAYTYPERow this[int index] {
                get {
                    return ((DPUCFRECPPAYTYPERow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DPUCFRECPPAYTYPERowChangeEventHandler DPUCFRECPPAYTYPERowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DPUCFRECPPAYTYPERowChangeEventHandler DPUCFRECPPAYTYPERowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DPUCFRECPPAYTYPERowChangeEventHandler DPUCFRECPPAYTYPERowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DPUCFRECPPAYTYPERowChangeEventHandler DPUCFRECPPAYTYPERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddDPUCFRECPPAYTYPERow(DPUCFRECPPAYTYPERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DPUCFRECPPAYTYPERow AddDPUCFRECPPAYTYPERow(
                        string COOP_ID, 
                        string RECPPAYTYPE_CODE, 
                        string RECPPAYTYPE_DESC, 
                        decimal RECPPAYTYPE_SORT, 
                        decimal RECPPAYTYPE_FLAG, 
                        string STM_ITEMTYPE, 
                        string CSTM_ITEMTYPE, 
                        string MONEYTYPE_SUPPORT, 
                        string INT_ITEMTYPE, 
                        string CINT_ITEMTYPE, 
                        string INT_FIXEDITEMTYPE, 
                        string GROUP_ITEMTPE, 
                        decimal ACCNATURE_FLAG, 
                        string ACCMAP_CODE, 
                        decimal GENVC_FLAG, 
                        decimal ACTIVE_FLAG, 
                        decimal ORDER_SORT, 
                        string DEFAULT_ACCID, 
                        string DEPTWITH_FLAG) {
                DPUCFRECPPAYTYPERow rowDPUCFRECPPAYTYPERow = ((DPUCFRECPPAYTYPERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        COOP_ID,
                        RECPPAYTYPE_CODE,
                        RECPPAYTYPE_DESC,
                        RECPPAYTYPE_SORT,
                        RECPPAYTYPE_FLAG,
                        STM_ITEMTYPE,
                        CSTM_ITEMTYPE,
                        MONEYTYPE_SUPPORT,
                        INT_ITEMTYPE,
                        CINT_ITEMTYPE,
                        INT_FIXEDITEMTYPE,
                        GROUP_ITEMTPE,
                        ACCNATURE_FLAG,
                        ACCMAP_CODE,
                        GENVC_FLAG,
                        ACTIVE_FLAG,
                        ORDER_SORT,
                        DEFAULT_ACCID,
                        DEPTWITH_FLAG};
                rowDPUCFRECPPAYTYPERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDPUCFRECPPAYTYPERow);
                return rowDPUCFRECPPAYTYPERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DPUCFRECPPAYTYPERow FindByCOOP_IDRECPPAYTYPE_CODE(string COOP_ID, string RECPPAYTYPE_CODE) {
                return ((DPUCFRECPPAYTYPERow)(this.Rows.Find(new object[] {
                            COOP_ID,
                            RECPPAYTYPE_CODE})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                DPUCFRECPPAYTYPEDataTable cln = ((DPUCFRECPPAYTYPEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DPUCFRECPPAYTYPEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnCOOP_ID = base.Columns["COOP_ID"];
                this.columnRECPPAYTYPE_CODE = base.Columns["RECPPAYTYPE_CODE"];
                this.columnRECPPAYTYPE_DESC = base.Columns["RECPPAYTYPE_DESC"];
                this.columnRECPPAYTYPE_SORT = base.Columns["RECPPAYTYPE_SORT"];
                this.columnRECPPAYTYPE_FLAG = base.Columns["RECPPAYTYPE_FLAG"];
                this.columnSTM_ITEMTYPE = base.Columns["STM_ITEMTYPE"];
                this.columnCSTM_ITEMTYPE = base.Columns["CSTM_ITEMTYPE"];
                this.columnMONEYTYPE_SUPPORT = base.Columns["MONEYTYPE_SUPPORT"];
                this.columnINT_ITEMTYPE = base.Columns["INT_ITEMTYPE"];
                this.columnCINT_ITEMTYPE = base.Columns["CINT_ITEMTYPE"];
                this.columnINT_FIXEDITEMTYPE = base.Columns["INT_FIXEDITEMTYPE"];
                this.columnGROUP_ITEMTPE = base.Columns["GROUP_ITEMTPE"];
                this.columnACCNATURE_FLAG = base.Columns["ACCNATURE_FLAG"];
                this.columnACCMAP_CODE = base.Columns["ACCMAP_CODE"];
                this.columnGENVC_FLAG = base.Columns["GENVC_FLAG"];
                this.columnACTIVE_FLAG = base.Columns["ACTIVE_FLAG"];
                this.columnORDER_SORT = base.Columns["ORDER_SORT"];
                this.columnDEFAULT_ACCID = base.Columns["DEFAULT_ACCID"];
                this.columnDEPTWITH_FLAG = base.Columns["DEPTWITH_FLAG"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnCOOP_ID = new global::System.Data.DataColumn("COOP_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOOP_ID);
                this.columnRECPPAYTYPE_CODE = new global::System.Data.DataColumn("RECPPAYTYPE_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRECPPAYTYPE_CODE);
                this.columnRECPPAYTYPE_DESC = new global::System.Data.DataColumn("RECPPAYTYPE_DESC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRECPPAYTYPE_DESC);
                this.columnRECPPAYTYPE_SORT = new global::System.Data.DataColumn("RECPPAYTYPE_SORT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRECPPAYTYPE_SORT);
                this.columnRECPPAYTYPE_FLAG = new global::System.Data.DataColumn("RECPPAYTYPE_FLAG", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRECPPAYTYPE_FLAG);
                this.columnSTM_ITEMTYPE = new global::System.Data.DataColumn("STM_ITEMTYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTM_ITEMTYPE);
                this.columnCSTM_ITEMTYPE = new global::System.Data.DataColumn("CSTM_ITEMTYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCSTM_ITEMTYPE);
                this.columnMONEYTYPE_SUPPORT = new global::System.Data.DataColumn("MONEYTYPE_SUPPORT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMONEYTYPE_SUPPORT);
                this.columnINT_ITEMTYPE = new global::System.Data.DataColumn("INT_ITEMTYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINT_ITEMTYPE);
                this.columnCINT_ITEMTYPE = new global::System.Data.DataColumn("CINT_ITEMTYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCINT_ITEMTYPE);
                this.columnINT_FIXEDITEMTYPE = new global::System.Data.DataColumn("INT_FIXEDITEMTYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINT_FIXEDITEMTYPE);
                this.columnGROUP_ITEMTPE = new global::System.Data.DataColumn("GROUP_ITEMTPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGROUP_ITEMTPE);
                this.columnACCNATURE_FLAG = new global::System.Data.DataColumn("ACCNATURE_FLAG", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACCNATURE_FLAG);
                this.columnACCMAP_CODE = new global::System.Data.DataColumn("ACCMAP_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACCMAP_CODE);
                this.columnGENVC_FLAG = new global::System.Data.DataColumn("GENVC_FLAG", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGENVC_FLAG);
                this.columnACTIVE_FLAG = new global::System.Data.DataColumn("ACTIVE_FLAG", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACTIVE_FLAG);
                this.columnORDER_SORT = new global::System.Data.DataColumn("ORDER_SORT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnORDER_SORT);
                this.columnDEFAULT_ACCID = new global::System.Data.DataColumn("DEFAULT_ACCID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEFAULT_ACCID);
                this.columnDEPTWITH_FLAG = new global::System.Data.DataColumn("DEPTWITH_FLAG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEPTWITH_FLAG);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCOOP_ID,
                                this.columnRECPPAYTYPE_CODE}, true));
                this.columnCOOP_ID.AllowDBNull = false;
                this.columnCOOP_ID.MaxLength = 6;
                this.columnRECPPAYTYPE_CODE.AllowDBNull = false;
                this.columnRECPPAYTYPE_CODE.MaxLength = 3;
                this.columnRECPPAYTYPE_DESC.MaxLength = 60;
                this.columnSTM_ITEMTYPE.MaxLength = 3;
                this.columnCSTM_ITEMTYPE.MaxLength = 3;
                this.columnMONEYTYPE_SUPPORT.MaxLength = 20;
                this.columnINT_ITEMTYPE.MaxLength = 3;
                this.columnCINT_ITEMTYPE.MaxLength = 3;
                this.columnINT_FIXEDITEMTYPE.MaxLength = 3;
                this.columnGROUP_ITEMTPE.MaxLength = 3;
                this.columnACCMAP_CODE.MaxLength = 3;
                this.columnDEFAULT_ACCID.MaxLength = 8;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DPUCFRECPPAYTYPERow NewDPUCFRECPPAYTYPERow() {
                return ((DPUCFRECPPAYTYPERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DPUCFRECPPAYTYPERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(DPUCFRECPPAYTYPERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DPUCFRECPPAYTYPERowChanged != null)) {
                    this.DPUCFRECPPAYTYPERowChanged(this, new DPUCFRECPPAYTYPERowChangeEvent(((DPUCFRECPPAYTYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DPUCFRECPPAYTYPERowChanging != null)) {
                    this.DPUCFRECPPAYTYPERowChanging(this, new DPUCFRECPPAYTYPERowChangeEvent(((DPUCFRECPPAYTYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DPUCFRECPPAYTYPERowDeleted != null)) {
                    this.DPUCFRECPPAYTYPERowDeleted(this, new DPUCFRECPPAYTYPERowChangeEvent(((DPUCFRECPPAYTYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DPUCFRECPPAYTYPERowDeleting != null)) {
                    this.DPUCFRECPPAYTYPERowDeleting(this, new DPUCFRECPPAYTYPERowChangeEvent(((DPUCFRECPPAYTYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveDPUCFRECPPAYTYPERow(DPUCFRECPPAYTYPERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DPUCFRECPPAYTYPEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class DPUCFRECPPAYTYPERow : global::System.Data.DataRow {
            
            private DPUCFRECPPAYTYPEDataTable tableDPUCFRECPPAYTYPE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DPUCFRECPPAYTYPERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDPUCFRECPPAYTYPE = ((DPUCFRECPPAYTYPEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string COOP_ID {
                get {
                    return ((string)(this[this.tableDPUCFRECPPAYTYPE.COOP_IDColumn]));
                }
                set {
                    this[this.tableDPUCFRECPPAYTYPE.COOP_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RECPPAYTYPE_CODE {
                get {
                    return ((string)(this[this.tableDPUCFRECPPAYTYPE.RECPPAYTYPE_CODEColumn]));
                }
                set {
                    this[this.tableDPUCFRECPPAYTYPE.RECPPAYTYPE_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RECPPAYTYPE_DESC {
                get {
                    try {
                        return ((string)(this[this.tableDPUCFRECPPAYTYPE.RECPPAYTYPE_DESCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RECPPAYTYPE_DESC\' in table \'DPUCFRECPPAYTYPE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPUCFRECPPAYTYPE.RECPPAYTYPE_DESCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal RECPPAYTYPE_SORT {
                get {
                    try {
                        return ((decimal)(this[this.tableDPUCFRECPPAYTYPE.RECPPAYTYPE_SORTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RECPPAYTYPE_SORT\' in table \'DPUCFRECPPAYTYPE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPUCFRECPPAYTYPE.RECPPAYTYPE_SORTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal RECPPAYTYPE_FLAG {
                get {
                    try {
                        return ((decimal)(this[this.tableDPUCFRECPPAYTYPE.RECPPAYTYPE_FLAGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RECPPAYTYPE_FLAG\' in table \'DPUCFRECPPAYTYPE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPUCFRECPPAYTYPE.RECPPAYTYPE_FLAGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string STM_ITEMTYPE {
                get {
                    try {
                        return ((string)(this[this.tableDPUCFRECPPAYTYPE.STM_ITEMTYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'STM_ITEMTYPE\' in table \'DPUCFRECPPAYTYPE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPUCFRECPPAYTYPE.STM_ITEMTYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CSTM_ITEMTYPE {
                get {
                    try {
                        return ((string)(this[this.tableDPUCFRECPPAYTYPE.CSTM_ITEMTYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CSTM_ITEMTYPE\' in table \'DPUCFRECPPAYTYPE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPUCFRECPPAYTYPE.CSTM_ITEMTYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MONEYTYPE_SUPPORT {
                get {
                    try {
                        return ((string)(this[this.tableDPUCFRECPPAYTYPE.MONEYTYPE_SUPPORTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MONEYTYPE_SUPPORT\' in table \'DPUCFRECPPAYTYPE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPUCFRECPPAYTYPE.MONEYTYPE_SUPPORTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string INT_ITEMTYPE {
                get {
                    try {
                        return ((string)(this[this.tableDPUCFRECPPAYTYPE.INT_ITEMTYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INT_ITEMTYPE\' in table \'DPUCFRECPPAYTYPE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPUCFRECPPAYTYPE.INT_ITEMTYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CINT_ITEMTYPE {
                get {
                    try {
                        return ((string)(this[this.tableDPUCFRECPPAYTYPE.CINT_ITEMTYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CINT_ITEMTYPE\' in table \'DPUCFRECPPAYTYPE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPUCFRECPPAYTYPE.CINT_ITEMTYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string INT_FIXEDITEMTYPE {
                get {
                    try {
                        return ((string)(this[this.tableDPUCFRECPPAYTYPE.INT_FIXEDITEMTYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INT_FIXEDITEMTYPE\' in table \'DPUCFRECPPAYTYPE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPUCFRECPPAYTYPE.INT_FIXEDITEMTYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string GROUP_ITEMTPE {
                get {
                    try {
                        return ((string)(this[this.tableDPUCFRECPPAYTYPE.GROUP_ITEMTPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GROUP_ITEMTPE\' in table \'DPUCFRECPPAYTYPE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPUCFRECPPAYTYPE.GROUP_ITEMTPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ACCNATURE_FLAG {
                get {
                    try {
                        return ((decimal)(this[this.tableDPUCFRECPPAYTYPE.ACCNATURE_FLAGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ACCNATURE_FLAG\' in table \'DPUCFRECPPAYTYPE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPUCFRECPPAYTYPE.ACCNATURE_FLAGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ACCMAP_CODE {
                get {
                    try {
                        return ((string)(this[this.tableDPUCFRECPPAYTYPE.ACCMAP_CODEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ACCMAP_CODE\' in table \'DPUCFRECPPAYTYPE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPUCFRECPPAYTYPE.ACCMAP_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal GENVC_FLAG {
                get {
                    try {
                        return ((decimal)(this[this.tableDPUCFRECPPAYTYPE.GENVC_FLAGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GENVC_FLAG\' in table \'DPUCFRECPPAYTYPE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPUCFRECPPAYTYPE.GENVC_FLAGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ACTIVE_FLAG {
                get {
                    try {
                        return ((decimal)(this[this.tableDPUCFRECPPAYTYPE.ACTIVE_FLAGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ACTIVE_FLAG\' in table \'DPUCFRECPPAYTYPE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPUCFRECPPAYTYPE.ACTIVE_FLAGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ORDER_SORT {
                get {
                    try {
                        return ((decimal)(this[this.tableDPUCFRECPPAYTYPE.ORDER_SORTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ORDER_SORT\' in table \'DPUCFRECPPAYTYPE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPUCFRECPPAYTYPE.ORDER_SORTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DEFAULT_ACCID {
                get {
                    try {
                        return ((string)(this[this.tableDPUCFRECPPAYTYPE.DEFAULT_ACCIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DEFAULT_ACCID\' in table \'DPUCFRECPPAYTYPE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPUCFRECPPAYTYPE.DEFAULT_ACCIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DEPTWITH_FLAG {
                get {
                    try {
                        return ((string)(this[this.tableDPUCFRECPPAYTYPE.DEPTWITH_FLAGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DEPTWITH_FLAG\' in table \'DPUCFRECPPAYTYPE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPUCFRECPPAYTYPE.DEPTWITH_FLAGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRECPPAYTYPE_DESCNull() {
                return this.IsNull(this.tableDPUCFRECPPAYTYPE.RECPPAYTYPE_DESCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRECPPAYTYPE_DESCNull() {
                this[this.tableDPUCFRECPPAYTYPE.RECPPAYTYPE_DESCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRECPPAYTYPE_SORTNull() {
                return this.IsNull(this.tableDPUCFRECPPAYTYPE.RECPPAYTYPE_SORTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRECPPAYTYPE_SORTNull() {
                this[this.tableDPUCFRECPPAYTYPE.RECPPAYTYPE_SORTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRECPPAYTYPE_FLAGNull() {
                return this.IsNull(this.tableDPUCFRECPPAYTYPE.RECPPAYTYPE_FLAGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRECPPAYTYPE_FLAGNull() {
                this[this.tableDPUCFRECPPAYTYPE.RECPPAYTYPE_FLAGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSTM_ITEMTYPENull() {
                return this.IsNull(this.tableDPUCFRECPPAYTYPE.STM_ITEMTYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSTM_ITEMTYPENull() {
                this[this.tableDPUCFRECPPAYTYPE.STM_ITEMTYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCSTM_ITEMTYPENull() {
                return this.IsNull(this.tableDPUCFRECPPAYTYPE.CSTM_ITEMTYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCSTM_ITEMTYPENull() {
                this[this.tableDPUCFRECPPAYTYPE.CSTM_ITEMTYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMONEYTYPE_SUPPORTNull() {
                return this.IsNull(this.tableDPUCFRECPPAYTYPE.MONEYTYPE_SUPPORTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMONEYTYPE_SUPPORTNull() {
                this[this.tableDPUCFRECPPAYTYPE.MONEYTYPE_SUPPORTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsINT_ITEMTYPENull() {
                return this.IsNull(this.tableDPUCFRECPPAYTYPE.INT_ITEMTYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetINT_ITEMTYPENull() {
                this[this.tableDPUCFRECPPAYTYPE.INT_ITEMTYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCINT_ITEMTYPENull() {
                return this.IsNull(this.tableDPUCFRECPPAYTYPE.CINT_ITEMTYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCINT_ITEMTYPENull() {
                this[this.tableDPUCFRECPPAYTYPE.CINT_ITEMTYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsINT_FIXEDITEMTYPENull() {
                return this.IsNull(this.tableDPUCFRECPPAYTYPE.INT_FIXEDITEMTYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetINT_FIXEDITEMTYPENull() {
                this[this.tableDPUCFRECPPAYTYPE.INT_FIXEDITEMTYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGROUP_ITEMTPENull() {
                return this.IsNull(this.tableDPUCFRECPPAYTYPE.GROUP_ITEMTPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGROUP_ITEMTPENull() {
                this[this.tableDPUCFRECPPAYTYPE.GROUP_ITEMTPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsACCNATURE_FLAGNull() {
                return this.IsNull(this.tableDPUCFRECPPAYTYPE.ACCNATURE_FLAGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetACCNATURE_FLAGNull() {
                this[this.tableDPUCFRECPPAYTYPE.ACCNATURE_FLAGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsACCMAP_CODENull() {
                return this.IsNull(this.tableDPUCFRECPPAYTYPE.ACCMAP_CODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetACCMAP_CODENull() {
                this[this.tableDPUCFRECPPAYTYPE.ACCMAP_CODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGENVC_FLAGNull() {
                return this.IsNull(this.tableDPUCFRECPPAYTYPE.GENVC_FLAGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGENVC_FLAGNull() {
                this[this.tableDPUCFRECPPAYTYPE.GENVC_FLAGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsACTIVE_FLAGNull() {
                return this.IsNull(this.tableDPUCFRECPPAYTYPE.ACTIVE_FLAGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetACTIVE_FLAGNull() {
                this[this.tableDPUCFRECPPAYTYPE.ACTIVE_FLAGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsORDER_SORTNull() {
                return this.IsNull(this.tableDPUCFRECPPAYTYPE.ORDER_SORTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetORDER_SORTNull() {
                this[this.tableDPUCFRECPPAYTYPE.ORDER_SORTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDEFAULT_ACCIDNull() {
                return this.IsNull(this.tableDPUCFRECPPAYTYPE.DEFAULT_ACCIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDEFAULT_ACCIDNull() {
                this[this.tableDPUCFRECPPAYTYPE.DEFAULT_ACCIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDEPTWITH_FLAGNull() {
                return this.IsNull(this.tableDPUCFRECPPAYTYPE.DEPTWITH_FLAGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDEPTWITH_FLAGNull() {
                this[this.tableDPUCFRECPPAYTYPE.DEPTWITH_FLAGColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class DPUCFRECPPAYTYPERowChangeEvent : global::System.EventArgs {
            
            private DPUCFRECPPAYTYPERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DPUCFRECPPAYTYPERowChangeEvent(DPUCFRECPPAYTYPERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DPUCFRECPPAYTYPERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace Saving.Applications._global.w_dlg_dp_slip_recppaytype_ctrl.DataSet1TableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class DPUCFRECPPAYTYPETableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OracleClient.OracleDataAdapter _adapter;
        
        private global::System.Data.OracleClient.OracleConnection _connection;
        
        private global::System.Data.OracleClient.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DPUCFRECPPAYTYPETableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.OracleClient.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.OracleClient.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OracleClient.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.OracleClient.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OracleClient.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "DPUCFRECPPAYTYPE";
            tableMapping.ColumnMappings.Add("COOP_ID", "COOP_ID");
            tableMapping.ColumnMappings.Add("RECPPAYTYPE_CODE", "RECPPAYTYPE_CODE");
            tableMapping.ColumnMappings.Add("RECPPAYTYPE_DESC", "RECPPAYTYPE_DESC");
            tableMapping.ColumnMappings.Add("RECPPAYTYPE_SORT", "RECPPAYTYPE_SORT");
            tableMapping.ColumnMappings.Add("RECPPAYTYPE_FLAG", "RECPPAYTYPE_FLAG");
            tableMapping.ColumnMappings.Add("STM_ITEMTYPE", "STM_ITEMTYPE");
            tableMapping.ColumnMappings.Add("CSTM_ITEMTYPE", "CSTM_ITEMTYPE");
            tableMapping.ColumnMappings.Add("MONEYTYPE_SUPPORT", "MONEYTYPE_SUPPORT");
            tableMapping.ColumnMappings.Add("INT_ITEMTYPE", "INT_ITEMTYPE");
            tableMapping.ColumnMappings.Add("CINT_ITEMTYPE", "CINT_ITEMTYPE");
            tableMapping.ColumnMappings.Add("INT_FIXEDITEMTYPE", "INT_FIXEDITEMTYPE");
            tableMapping.ColumnMappings.Add("GROUP_ITEMTPE", "GROUP_ITEMTPE");
            tableMapping.ColumnMappings.Add("ACCNATURE_FLAG", "ACCNATURE_FLAG");
            tableMapping.ColumnMappings.Add("ACCMAP_CODE", "ACCMAP_CODE");
            tableMapping.ColumnMappings.Add("GENVC_FLAG", "GENVC_FLAG");
            tableMapping.ColumnMappings.Add("ACTIVE_FLAG", "ACTIVE_FLAG");
            tableMapping.ColumnMappings.Add("ORDER_SORT", "ORDER_SORT");
            tableMapping.ColumnMappings.Add("DEFAULT_ACCID", "DEFAULT_ACCID");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM \"DPUCFRECPPAYTYPE\" WHERE ((\"COOP_ID\" = :Original_COOP_ID) AND (\"RECPP" +
                "AYTYPE_CODE\" = :Original_RECPPAYTYPE_CODE))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_COOP_ID", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "COOP_ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_RECPPAYTYPE_CODE", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "RECPPAYTYPE_CODE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO ""DPUCFRECPPAYTYPE"" (""COOP_ID"", ""RECPPAYTYPE_CODE"", ""RECPPAYTYPE_DESC"", ""RECPPAYTYPE_SORT"", ""RECPPAYTYPE_FLAG"", ""STM_ITEMTYPE"", ""CSTM_ITEMTYPE"", ""MONEYTYPE_SUPPORT"", ""INT_ITEMTYPE"", ""CINT_ITEMTYPE"", ""INT_FIXEDITEMTYPE"", ""GROUP_ITEMTPE"", ""ACCNATURE_FLAG"", ""ACCMAP_CODE"", ""GENVC_FLAG"", ""ACTIVE_FLAG"", ""ORDER_SORT"", ""DEFAULT_ACCID"") VALUES (:COOP_ID, :RECPPAYTYPE_CODE, :RECPPAYTYPE_DESC, :RECPPAYTYPE_SORT, :RECPPAYTYPE_FLAG, :STM_ITEMTYPE, :CSTM_ITEMTYPE, :MONEYTYPE_SUPPORT, :INT_ITEMTYPE, :CINT_ITEMTYPE, :INT_FIXEDITEMTYPE, :GROUP_ITEMTPE, :ACCNATURE_FLAG, :ACCMAP_CODE, :GENVC_FLAG, :ACTIVE_FLAG, :ORDER_SORT, :DEFAULT_ACCID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("COOP_ID", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "COOP_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("RECPPAYTYPE_CODE", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "RECPPAYTYPE_CODE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("RECPPAYTYPE_DESC", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "RECPPAYTYPE_DESC", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("RECPPAYTYPE_SORT", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "RECPPAYTYPE_SORT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("RECPPAYTYPE_FLAG", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "RECPPAYTYPE_FLAG", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("STM_ITEMTYPE", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "STM_ITEMTYPE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CSTM_ITEMTYPE", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "CSTM_ITEMTYPE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MONEYTYPE_SUPPORT", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "MONEYTYPE_SUPPORT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("INT_ITEMTYPE", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "INT_ITEMTYPE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CINT_ITEMTYPE", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "CINT_ITEMTYPE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("INT_FIXEDITEMTYPE", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "INT_FIXEDITEMTYPE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("GROUP_ITEMTPE", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "GROUP_ITEMTPE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ACCNATURE_FLAG", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ACCNATURE_FLAG", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ACCMAP_CODE", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "ACCMAP_CODE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("GENVC_FLAG", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "GENVC_FLAG", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ACTIVE_FLAG", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ACTIVE_FLAG", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ORDER_SORT", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ORDER_SORT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("DEFAULT_ACCID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "DEFAULT_ACCID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""DPUCFRECPPAYTYPE"" SET ""COOP_ID"" = :COOP_ID, ""RECPPAYTYPE_CODE"" = :RECPPAYTYPE_CODE, ""RECPPAYTYPE_DESC"" = :RECPPAYTYPE_DESC, ""RECPPAYTYPE_SORT"" = :RECPPAYTYPE_SORT, ""RECPPAYTYPE_FLAG"" = :RECPPAYTYPE_FLAG, ""STM_ITEMTYPE"" = :STM_ITEMTYPE, ""CSTM_ITEMTYPE"" = :CSTM_ITEMTYPE, ""MONEYTYPE_SUPPORT"" = :MONEYTYPE_SUPPORT, ""INT_ITEMTYPE"" = :INT_ITEMTYPE, ""CINT_ITEMTYPE"" = :CINT_ITEMTYPE, ""INT_FIXEDITEMTYPE"" = :INT_FIXEDITEMTYPE, ""GROUP_ITEMTPE"" = :GROUP_ITEMTPE, ""ACCNATURE_FLAG"" = :ACCNATURE_FLAG, ""ACCMAP_CODE"" = :ACCMAP_CODE, ""GENVC_FLAG"" = :GENVC_FLAG, ""ACTIVE_FLAG"" = :ACTIVE_FLAG, ""ORDER_SORT"" = :ORDER_SORT, ""DEFAULT_ACCID"" = :DEFAULT_ACCID WHERE ((""COOP_ID"" = :Original_COOP_ID) AND (""RECPPAYTYPE_CODE"" = :Original_RECPPAYTYPE_CODE))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("COOP_ID", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "COOP_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("RECPPAYTYPE_CODE", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "RECPPAYTYPE_CODE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("RECPPAYTYPE_DESC", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "RECPPAYTYPE_DESC", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("RECPPAYTYPE_SORT", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "RECPPAYTYPE_SORT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("RECPPAYTYPE_FLAG", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "RECPPAYTYPE_FLAG", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("STM_ITEMTYPE", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "STM_ITEMTYPE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CSTM_ITEMTYPE", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "CSTM_ITEMTYPE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MONEYTYPE_SUPPORT", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "MONEYTYPE_SUPPORT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("INT_ITEMTYPE", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "INT_ITEMTYPE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CINT_ITEMTYPE", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "CINT_ITEMTYPE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("INT_FIXEDITEMTYPE", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "INT_FIXEDITEMTYPE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("GROUP_ITEMTPE", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "GROUP_ITEMTPE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ACCNATURE_FLAG", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ACCNATURE_FLAG", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ACCMAP_CODE", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "ACCMAP_CODE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("GENVC_FLAG", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "GENVC_FLAG", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ACTIVE_FLAG", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ACTIVE_FLAG", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ORDER_SORT", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ORDER_SORT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("DEFAULT_ACCID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "DEFAULT_ACCID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_COOP_ID", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "COOP_ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_RECPPAYTYPE_CODE", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "RECPPAYTYPE_CODE", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.OracleClient.OracleConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["ConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OracleClient.OracleCommand[1];
            this._commandCollection[0] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "select * from dpucfrecppaytype";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.DPUCFRECPPAYTYPEDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.DPUCFRECPPAYTYPEDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.DPUCFRECPPAYTYPEDataTable dataTable = new DataSet1.DPUCFRECPPAYTYPEDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.DPUCFRECPPAYTYPEDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "DPUCFRECPPAYTYPE");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_COOP_ID, string Original_RECPPAYTYPE_CODE) {
            if ((Original_COOP_ID == null)) {
                throw new global::System.ArgumentNullException("Original_COOP_ID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_COOP_ID));
            }
            if ((Original_RECPPAYTYPE_CODE == null)) {
                throw new global::System.ArgumentNullException("Original_RECPPAYTYPE_CODE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_RECPPAYTYPE_CODE));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string COOP_ID, 
                    string RECPPAYTYPE_CODE, 
                    string RECPPAYTYPE_DESC, 
                    global::System.Nullable<decimal> RECPPAYTYPE_SORT, 
                    global::System.Nullable<decimal> RECPPAYTYPE_FLAG, 
                    string STM_ITEMTYPE, 
                    string CSTM_ITEMTYPE, 
                    string MONEYTYPE_SUPPORT, 
                    string INT_ITEMTYPE, 
                    string CINT_ITEMTYPE, 
                    string INT_FIXEDITEMTYPE, 
                    string GROUP_ITEMTPE, 
                    global::System.Nullable<decimal> ACCNATURE_FLAG, 
                    string ACCMAP_CODE, 
                    global::System.Nullable<decimal> GENVC_FLAG, 
                    global::System.Nullable<decimal> ACTIVE_FLAG, 
                    global::System.Nullable<decimal> ORDER_SORT, 
                    string DEFAULT_ACCID) {
            if ((COOP_ID == null)) {
                throw new global::System.ArgumentNullException("COOP_ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(COOP_ID));
            }
            if ((RECPPAYTYPE_CODE == null)) {
                throw new global::System.ArgumentNullException("RECPPAYTYPE_CODE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(RECPPAYTYPE_CODE));
            }
            if ((RECPPAYTYPE_DESC == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(RECPPAYTYPE_DESC));
            }
            if ((RECPPAYTYPE_SORT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(RECPPAYTYPE_SORT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((RECPPAYTYPE_FLAG.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(RECPPAYTYPE_FLAG.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((STM_ITEMTYPE == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(STM_ITEMTYPE));
            }
            if ((CSTM_ITEMTYPE == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(CSTM_ITEMTYPE));
            }
            if ((MONEYTYPE_SUPPORT == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(MONEYTYPE_SUPPORT));
            }
            if ((INT_ITEMTYPE == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(INT_ITEMTYPE));
            }
            if ((CINT_ITEMTYPE == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(CINT_ITEMTYPE));
            }
            if ((INT_FIXEDITEMTYPE == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(INT_FIXEDITEMTYPE));
            }
            if ((GROUP_ITEMTPE == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(GROUP_ITEMTPE));
            }
            if ((ACCNATURE_FLAG.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((decimal)(ACCNATURE_FLAG.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((ACCMAP_CODE == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(ACCMAP_CODE));
            }
            if ((GENVC_FLAG.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((decimal)(GENVC_FLAG.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((ACTIVE_FLAG.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((decimal)(ACTIVE_FLAG.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((ORDER_SORT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((decimal)(ORDER_SORT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((DEFAULT_ACCID == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(DEFAULT_ACCID));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string COOP_ID, 
                    string RECPPAYTYPE_CODE, 
                    string RECPPAYTYPE_DESC, 
                    global::System.Nullable<decimal> RECPPAYTYPE_SORT, 
                    global::System.Nullable<decimal> RECPPAYTYPE_FLAG, 
                    string STM_ITEMTYPE, 
                    string CSTM_ITEMTYPE, 
                    string MONEYTYPE_SUPPORT, 
                    string INT_ITEMTYPE, 
                    string CINT_ITEMTYPE, 
                    string INT_FIXEDITEMTYPE, 
                    string GROUP_ITEMTPE, 
                    global::System.Nullable<decimal> ACCNATURE_FLAG, 
                    string ACCMAP_CODE, 
                    global::System.Nullable<decimal> GENVC_FLAG, 
                    global::System.Nullable<decimal> ACTIVE_FLAG, 
                    global::System.Nullable<decimal> ORDER_SORT, 
                    string DEFAULT_ACCID, 
                    string Original_COOP_ID, 
                    string Original_RECPPAYTYPE_CODE) {
            if ((COOP_ID == null)) {
                throw new global::System.ArgumentNullException("COOP_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(COOP_ID));
            }
            if ((RECPPAYTYPE_CODE == null)) {
                throw new global::System.ArgumentNullException("RECPPAYTYPE_CODE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(RECPPAYTYPE_CODE));
            }
            if ((RECPPAYTYPE_DESC == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(RECPPAYTYPE_DESC));
            }
            if ((RECPPAYTYPE_SORT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(RECPPAYTYPE_SORT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((RECPPAYTYPE_FLAG.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(RECPPAYTYPE_FLAG.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((STM_ITEMTYPE == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(STM_ITEMTYPE));
            }
            if ((CSTM_ITEMTYPE == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(CSTM_ITEMTYPE));
            }
            if ((MONEYTYPE_SUPPORT == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(MONEYTYPE_SUPPORT));
            }
            if ((INT_ITEMTYPE == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(INT_ITEMTYPE));
            }
            if ((CINT_ITEMTYPE == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(CINT_ITEMTYPE));
            }
            if ((INT_FIXEDITEMTYPE == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(INT_FIXEDITEMTYPE));
            }
            if ((GROUP_ITEMTPE == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(GROUP_ITEMTPE));
            }
            if ((ACCNATURE_FLAG.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((decimal)(ACCNATURE_FLAG.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((ACCMAP_CODE == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(ACCMAP_CODE));
            }
            if ((GENVC_FLAG.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((decimal)(GENVC_FLAG.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((ACTIVE_FLAG.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((decimal)(ACTIVE_FLAG.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((ORDER_SORT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((decimal)(ORDER_SORT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((DEFAULT_ACCID == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(DEFAULT_ACCID));
            }
            if ((Original_COOP_ID == null)) {
                throw new global::System.ArgumentNullException("Original_COOP_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_COOP_ID));
            }
            if ((Original_RECPPAYTYPE_CODE == null)) {
                throw new global::System.ArgumentNullException("Original_RECPPAYTYPE_CODE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_RECPPAYTYPE_CODE));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string RECPPAYTYPE_DESC, 
                    global::System.Nullable<decimal> RECPPAYTYPE_SORT, 
                    global::System.Nullable<decimal> RECPPAYTYPE_FLAG, 
                    string STM_ITEMTYPE, 
                    string CSTM_ITEMTYPE, 
                    string MONEYTYPE_SUPPORT, 
                    string INT_ITEMTYPE, 
                    string CINT_ITEMTYPE, 
                    string INT_FIXEDITEMTYPE, 
                    string GROUP_ITEMTPE, 
                    global::System.Nullable<decimal> ACCNATURE_FLAG, 
                    string ACCMAP_CODE, 
                    global::System.Nullable<decimal> GENVC_FLAG, 
                    global::System.Nullable<decimal> ACTIVE_FLAG, 
                    global::System.Nullable<decimal> ORDER_SORT, 
                    string DEFAULT_ACCID, 
                    string Original_COOP_ID, 
                    string Original_RECPPAYTYPE_CODE) {
            return this.Update(Original_COOP_ID, Original_RECPPAYTYPE_CODE, RECPPAYTYPE_DESC, RECPPAYTYPE_SORT, RECPPAYTYPE_FLAG, STM_ITEMTYPE, CSTM_ITEMTYPE, MONEYTYPE_SUPPORT, INT_ITEMTYPE, CINT_ITEMTYPE, INT_FIXEDITEMTYPE, GROUP_ITEMTPE, ACCNATURE_FLAG, ACCMAP_CODE, GENVC_FLAG, ACTIVE_FLAG, ORDER_SORT, DEFAULT_ACCID, Original_COOP_ID, Original_RECPPAYTYPE_CODE);
        }
    }
}

#pragma warning restore 1591