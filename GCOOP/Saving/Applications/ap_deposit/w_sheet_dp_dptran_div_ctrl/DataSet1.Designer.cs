//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18051
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Saving.Applications.ap_deposit.w_sheet_dp_dptran_div_ctrl {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DataSet1")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DataSet1 : global::System.Data.DataSet {
        
        private DPDEPTTRANDataTable tableDPDEPTTRAN;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DataSet1() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected DataSet1(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["DPDEPTTRAN"] != null)) {
                    base.Tables.Add(new DPDEPTTRANDataTable(ds.Tables["DPDEPTTRAN"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DPDEPTTRANDataTable DPDEPTTRAN {
            get {
                return this.tableDPDEPTTRAN;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            DataSet1 cln = ((DataSet1)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["DPDEPTTRAN"] != null)) {
                    base.Tables.Add(new DPDEPTTRANDataTable(ds.Tables["DPDEPTTRAN"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableDPDEPTTRAN = ((DPDEPTTRANDataTable)(base.Tables["DPDEPTTRAN"]));
            if ((initTable == true)) {
                if ((this.tableDPDEPTTRAN != null)) {
                    this.tableDPDEPTTRAN.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "DataSet1";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DataSet1.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableDPDEPTTRAN = new DPDEPTTRANDataTable();
            base.Tables.Add(this.tableDPDEPTTRAN);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeDPDEPTTRAN() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DataSet1 ds = new DataSet1();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void DPDEPTTRANRowChangeEventHandler(object sender, DPDEPTTRANRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DPDEPTTRANDataTable : global::System.Data.TypedTableBase<DPDEPTTRANRow> {
            
            private global::System.Data.DataColumn columnCOOP_ID;
            
            private global::System.Data.DataColumn columnDEPTACCOUNT_NO;
            
            private global::System.Data.DataColumn columnMEMCOOP_ID;
            
            private global::System.Data.DataColumn columnMEMBER_NO;
            
            private global::System.Data.DataColumn columnSYSTEM_CODE;
            
            private global::System.Data.DataColumn columnTRAN_YEAR;
            
            private global::System.Data.DataColumn columnTRAN_DATE;
            
            private global::System.Data.DataColumn columnSEQ_NO;
            
            private global::System.Data.DataColumn columnOLD_BALANC;
            
            private global::System.Data.DataColumn columnOLD_ACCUINT;
            
            private global::System.Data.DataColumn columnLASTCALINT_DATE;
            
            private global::System.Data.DataColumn columnNEWCALINT_DATE;
            
            private global::System.Data.DataColumn columnDEPTITEM_AMT;
            
            private global::System.Data.DataColumn columnINT_AMT;
            
            private global::System.Data.DataColumn columnNEW_ACCUINT;
            
            private global::System.Data.DataColumn columnNEW_BALANC;
            
            private global::System.Data.DataColumn columnTRAN_STATUS;
            
            private global::System.Data.DataColumn columnDIVIDEN_AMT;
            
            private global::System.Data.DataColumn columnAVERAGE_AMT;
            
            private global::System.Data.DataColumn columnLNCONT_NO;
            
            private global::System.Data.DataColumn columnBRANCH_OPERATE;
            
            private global::System.Data.DataColumn columnSEQUEST_STATUS;
            
            private global::System.Data.DataColumn columnSEQUEST_AMT;
            
            private global::System.Data.DataColumn columnREF_SLIPNO;
            
            private global::System.Data.DataColumn columnREF_COOPID;
            
            private global::System.Data.DataColumn columnDEPTSLIP_NO;
            
            private global::System.Data.DataColumn columnTRAN_TEXT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DPDEPTTRANDataTable() {
                this.TableName = "DPDEPTTRAN";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DPDEPTTRANDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected DPDEPTTRANDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn COOP_IDColumn {
                get {
                    return this.columnCOOP_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DEPTACCOUNT_NOColumn {
                get {
                    return this.columnDEPTACCOUNT_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MEMCOOP_IDColumn {
                get {
                    return this.columnMEMCOOP_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MEMBER_NOColumn {
                get {
                    return this.columnMEMBER_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SYSTEM_CODEColumn {
                get {
                    return this.columnSYSTEM_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TRAN_YEARColumn {
                get {
                    return this.columnTRAN_YEAR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TRAN_DATEColumn {
                get {
                    return this.columnTRAN_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SEQ_NOColumn {
                get {
                    return this.columnSEQ_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OLD_BALANCColumn {
                get {
                    return this.columnOLD_BALANC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OLD_ACCUINTColumn {
                get {
                    return this.columnOLD_ACCUINT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LASTCALINT_DATEColumn {
                get {
                    return this.columnLASTCALINT_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NEWCALINT_DATEColumn {
                get {
                    return this.columnNEWCALINT_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DEPTITEM_AMTColumn {
                get {
                    return this.columnDEPTITEM_AMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn INT_AMTColumn {
                get {
                    return this.columnINT_AMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NEW_ACCUINTColumn {
                get {
                    return this.columnNEW_ACCUINT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NEW_BALANCColumn {
                get {
                    return this.columnNEW_BALANC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TRAN_STATUSColumn {
                get {
                    return this.columnTRAN_STATUS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DIVIDEN_AMTColumn {
                get {
                    return this.columnDIVIDEN_AMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AVERAGE_AMTColumn {
                get {
                    return this.columnAVERAGE_AMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LNCONT_NOColumn {
                get {
                    return this.columnLNCONT_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BRANCH_OPERATEColumn {
                get {
                    return this.columnBRANCH_OPERATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SEQUEST_STATUSColumn {
                get {
                    return this.columnSEQUEST_STATUS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SEQUEST_AMTColumn {
                get {
                    return this.columnSEQUEST_AMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn REF_SLIPNOColumn {
                get {
                    return this.columnREF_SLIPNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn REF_COOPIDColumn {
                get {
                    return this.columnREF_COOPID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DEPTSLIP_NOColumn {
                get {
                    return this.columnDEPTSLIP_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TRAN_TEXTColumn {
                get {
                    return this.columnTRAN_TEXT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DPDEPTTRANRow this[int index] {
                get {
                    return ((DPDEPTTRANRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DPDEPTTRANRowChangeEventHandler DPDEPTTRANRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DPDEPTTRANRowChangeEventHandler DPDEPTTRANRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DPDEPTTRANRowChangeEventHandler DPDEPTTRANRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DPDEPTTRANRowChangeEventHandler DPDEPTTRANRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddDPDEPTTRANRow(DPDEPTTRANRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DPDEPTTRANRow AddDPDEPTTRANRow(
                        string COOP_ID, 
                        string DEPTACCOUNT_NO, 
                        string MEMCOOP_ID, 
                        string MEMBER_NO, 
                        string SYSTEM_CODE, 
                        decimal TRAN_YEAR, 
                        System.DateTime TRAN_DATE, 
                        decimal SEQ_NO, 
                        decimal OLD_BALANC, 
                        decimal OLD_ACCUINT, 
                        System.DateTime LASTCALINT_DATE, 
                        System.DateTime NEWCALINT_DATE, 
                        decimal DEPTITEM_AMT, 
                        decimal INT_AMT, 
                        decimal NEW_ACCUINT, 
                        decimal NEW_BALANC, 
                        decimal TRAN_STATUS, 
                        decimal DIVIDEN_AMT, 
                        decimal AVERAGE_AMT, 
                        string LNCONT_NO, 
                        string BRANCH_OPERATE, 
                        decimal SEQUEST_STATUS, 
                        decimal SEQUEST_AMT, 
                        string REF_SLIPNO, 
                        string REF_COOPID, 
                        string DEPTSLIP_NO, 
                        string TRAN_TEXT) {
                DPDEPTTRANRow rowDPDEPTTRANRow = ((DPDEPTTRANRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        COOP_ID,
                        DEPTACCOUNT_NO,
                        MEMCOOP_ID,
                        MEMBER_NO,
                        SYSTEM_CODE,
                        TRAN_YEAR,
                        TRAN_DATE,
                        SEQ_NO,
                        OLD_BALANC,
                        OLD_ACCUINT,
                        LASTCALINT_DATE,
                        NEWCALINT_DATE,
                        DEPTITEM_AMT,
                        INT_AMT,
                        NEW_ACCUINT,
                        NEW_BALANC,
                        TRAN_STATUS,
                        DIVIDEN_AMT,
                        AVERAGE_AMT,
                        LNCONT_NO,
                        BRANCH_OPERATE,
                        SEQUEST_STATUS,
                        SEQUEST_AMT,
                        REF_SLIPNO,
                        REF_COOPID,
                        DEPTSLIP_NO,
                        TRAN_TEXT};
                rowDPDEPTTRANRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDPDEPTTRANRow);
                return rowDPDEPTTRANRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DPDEPTTRANRow FindByCOOP_IDDEPTACCOUNT_NOMEMCOOP_IDMEMBER_NOSYSTEM_CODETRAN_YEARTRAN_DATESEQ_NO(string COOP_ID, string DEPTACCOUNT_NO, string MEMCOOP_ID, string MEMBER_NO, string SYSTEM_CODE, decimal TRAN_YEAR, System.DateTime TRAN_DATE, decimal SEQ_NO) {
                return ((DPDEPTTRANRow)(this.Rows.Find(new object[] {
                            COOP_ID,
                            DEPTACCOUNT_NO,
                            MEMCOOP_ID,
                            MEMBER_NO,
                            SYSTEM_CODE,
                            TRAN_YEAR,
                            TRAN_DATE,
                            SEQ_NO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                DPDEPTTRANDataTable cln = ((DPDEPTTRANDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DPDEPTTRANDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnCOOP_ID = base.Columns["COOP_ID"];
                this.columnDEPTACCOUNT_NO = base.Columns["DEPTACCOUNT_NO"];
                this.columnMEMCOOP_ID = base.Columns["MEMCOOP_ID"];
                this.columnMEMBER_NO = base.Columns["MEMBER_NO"];
                this.columnSYSTEM_CODE = base.Columns["SYSTEM_CODE"];
                this.columnTRAN_YEAR = base.Columns["TRAN_YEAR"];
                this.columnTRAN_DATE = base.Columns["TRAN_DATE"];
                this.columnSEQ_NO = base.Columns["SEQ_NO"];
                this.columnOLD_BALANC = base.Columns["OLD_BALANC"];
                this.columnOLD_ACCUINT = base.Columns["OLD_ACCUINT"];
                this.columnLASTCALINT_DATE = base.Columns["LASTCALINT_DATE"];
                this.columnNEWCALINT_DATE = base.Columns["NEWCALINT_DATE"];
                this.columnDEPTITEM_AMT = base.Columns["DEPTITEM_AMT"];
                this.columnINT_AMT = base.Columns["INT_AMT"];
                this.columnNEW_ACCUINT = base.Columns["NEW_ACCUINT"];
                this.columnNEW_BALANC = base.Columns["NEW_BALANC"];
                this.columnTRAN_STATUS = base.Columns["TRAN_STATUS"];
                this.columnDIVIDEN_AMT = base.Columns["DIVIDEN_AMT"];
                this.columnAVERAGE_AMT = base.Columns["AVERAGE_AMT"];
                this.columnLNCONT_NO = base.Columns["LNCONT_NO"];
                this.columnBRANCH_OPERATE = base.Columns["BRANCH_OPERATE"];
                this.columnSEQUEST_STATUS = base.Columns["SEQUEST_STATUS"];
                this.columnSEQUEST_AMT = base.Columns["SEQUEST_AMT"];
                this.columnREF_SLIPNO = base.Columns["REF_SLIPNO"];
                this.columnREF_COOPID = base.Columns["REF_COOPID"];
                this.columnDEPTSLIP_NO = base.Columns["DEPTSLIP_NO"];
                this.columnTRAN_TEXT = base.Columns["TRAN_TEXT"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnCOOP_ID = new global::System.Data.DataColumn("COOP_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOOP_ID);
                this.columnDEPTACCOUNT_NO = new global::System.Data.DataColumn("DEPTACCOUNT_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEPTACCOUNT_NO);
                this.columnMEMCOOP_ID = new global::System.Data.DataColumn("MEMCOOP_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMEMCOOP_ID);
                this.columnMEMBER_NO = new global::System.Data.DataColumn("MEMBER_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMEMBER_NO);
                this.columnSYSTEM_CODE = new global::System.Data.DataColumn("SYSTEM_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSYSTEM_CODE);
                this.columnTRAN_YEAR = new global::System.Data.DataColumn("TRAN_YEAR", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRAN_YEAR);
                this.columnTRAN_DATE = new global::System.Data.DataColumn("TRAN_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRAN_DATE);
                this.columnSEQ_NO = new global::System.Data.DataColumn("SEQ_NO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSEQ_NO);
                this.columnOLD_BALANC = new global::System.Data.DataColumn("OLD_BALANC", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOLD_BALANC);
                this.columnOLD_ACCUINT = new global::System.Data.DataColumn("OLD_ACCUINT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOLD_ACCUINT);
                this.columnLASTCALINT_DATE = new global::System.Data.DataColumn("LASTCALINT_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLASTCALINT_DATE);
                this.columnNEWCALINT_DATE = new global::System.Data.DataColumn("NEWCALINT_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNEWCALINT_DATE);
                this.columnDEPTITEM_AMT = new global::System.Data.DataColumn("DEPTITEM_AMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEPTITEM_AMT);
                this.columnINT_AMT = new global::System.Data.DataColumn("INT_AMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINT_AMT);
                this.columnNEW_ACCUINT = new global::System.Data.DataColumn("NEW_ACCUINT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNEW_ACCUINT);
                this.columnNEW_BALANC = new global::System.Data.DataColumn("NEW_BALANC", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNEW_BALANC);
                this.columnTRAN_STATUS = new global::System.Data.DataColumn("TRAN_STATUS", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRAN_STATUS);
                this.columnDIVIDEN_AMT = new global::System.Data.DataColumn("DIVIDEN_AMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDIVIDEN_AMT);
                this.columnAVERAGE_AMT = new global::System.Data.DataColumn("AVERAGE_AMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAVERAGE_AMT);
                this.columnLNCONT_NO = new global::System.Data.DataColumn("LNCONT_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLNCONT_NO);
                this.columnBRANCH_OPERATE = new global::System.Data.DataColumn("BRANCH_OPERATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBRANCH_OPERATE);
                this.columnSEQUEST_STATUS = new global::System.Data.DataColumn("SEQUEST_STATUS", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSEQUEST_STATUS);
                this.columnSEQUEST_AMT = new global::System.Data.DataColumn("SEQUEST_AMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSEQUEST_AMT);
                this.columnREF_SLIPNO = new global::System.Data.DataColumn("REF_SLIPNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREF_SLIPNO);
                this.columnREF_COOPID = new global::System.Data.DataColumn("REF_COOPID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREF_COOPID);
                this.columnDEPTSLIP_NO = new global::System.Data.DataColumn("DEPTSLIP_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEPTSLIP_NO);
                this.columnTRAN_TEXT = new global::System.Data.DataColumn("TRAN_TEXT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRAN_TEXT);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCOOP_ID,
                                this.columnDEPTACCOUNT_NO,
                                this.columnMEMCOOP_ID,
                                this.columnMEMBER_NO,
                                this.columnSYSTEM_CODE,
                                this.columnTRAN_YEAR,
                                this.columnTRAN_DATE,
                                this.columnSEQ_NO}, true));
                this.columnCOOP_ID.AllowDBNull = false;
                this.columnCOOP_ID.MaxLength = 6;
                this.columnDEPTACCOUNT_NO.AllowDBNull = false;
                this.columnDEPTACCOUNT_NO.MaxLength = 15;
                this.columnMEMCOOP_ID.AllowDBNull = false;
                this.columnMEMCOOP_ID.MaxLength = 6;
                this.columnMEMBER_NO.AllowDBNull = false;
                this.columnMEMBER_NO.MaxLength = 8;
                this.columnSYSTEM_CODE.AllowDBNull = false;
                this.columnSYSTEM_CODE.MaxLength = 3;
                this.columnTRAN_YEAR.AllowDBNull = false;
                this.columnTRAN_DATE.AllowDBNull = false;
                this.columnSEQ_NO.AllowDBNull = false;
                this.columnLNCONT_NO.MaxLength = 10;
                this.columnBRANCH_OPERATE.AllowDBNull = false;
                this.columnBRANCH_OPERATE.MaxLength = 3;
                this.columnREF_SLIPNO.MaxLength = 13;
                this.columnREF_COOPID.MaxLength = 6;
                this.columnDEPTSLIP_NO.MaxLength = 13;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DPDEPTTRANRow NewDPDEPTTRANRow() {
                return ((DPDEPTTRANRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DPDEPTTRANRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(DPDEPTTRANRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DPDEPTTRANRowChanged != null)) {
                    this.DPDEPTTRANRowChanged(this, new DPDEPTTRANRowChangeEvent(((DPDEPTTRANRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DPDEPTTRANRowChanging != null)) {
                    this.DPDEPTTRANRowChanging(this, new DPDEPTTRANRowChangeEvent(((DPDEPTTRANRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DPDEPTTRANRowDeleted != null)) {
                    this.DPDEPTTRANRowDeleted(this, new DPDEPTTRANRowChangeEvent(((DPDEPTTRANRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DPDEPTTRANRowDeleting != null)) {
                    this.DPDEPTTRANRowDeleting(this, new DPDEPTTRANRowChangeEvent(((DPDEPTTRANRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveDPDEPTTRANRow(DPDEPTTRANRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DPDEPTTRANDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class DPDEPTTRANRow : global::System.Data.DataRow {
            
            private DPDEPTTRANDataTable tableDPDEPTTRAN;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DPDEPTTRANRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDPDEPTTRAN = ((DPDEPTTRANDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string COOP_ID {
                get {
                    return ((string)(this[this.tableDPDEPTTRAN.COOP_IDColumn]));
                }
                set {
                    this[this.tableDPDEPTTRAN.COOP_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DEPTACCOUNT_NO {
                get {
                    return ((string)(this[this.tableDPDEPTTRAN.DEPTACCOUNT_NOColumn]));
                }
                set {
                    this[this.tableDPDEPTTRAN.DEPTACCOUNT_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MEMCOOP_ID {
                get {
                    return ((string)(this[this.tableDPDEPTTRAN.MEMCOOP_IDColumn]));
                }
                set {
                    this[this.tableDPDEPTTRAN.MEMCOOP_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MEMBER_NO {
                get {
                    return ((string)(this[this.tableDPDEPTTRAN.MEMBER_NOColumn]));
                }
                set {
                    this[this.tableDPDEPTTRAN.MEMBER_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SYSTEM_CODE {
                get {
                    return ((string)(this[this.tableDPDEPTTRAN.SYSTEM_CODEColumn]));
                }
                set {
                    this[this.tableDPDEPTTRAN.SYSTEM_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TRAN_YEAR {
                get {
                    return ((decimal)(this[this.tableDPDEPTTRAN.TRAN_YEARColumn]));
                }
                set {
                    this[this.tableDPDEPTTRAN.TRAN_YEARColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime TRAN_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableDPDEPTTRAN.TRAN_DATEColumn]));
                }
                set {
                    this[this.tableDPDEPTTRAN.TRAN_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal SEQ_NO {
                get {
                    return ((decimal)(this[this.tableDPDEPTTRAN.SEQ_NOColumn]));
                }
                set {
                    this[this.tableDPDEPTTRAN.SEQ_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal OLD_BALANC {
                get {
                    try {
                        return ((decimal)(this[this.tableDPDEPTTRAN.OLD_BALANCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OLD_BALANC\' in table \'DPDEPTTRAN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPDEPTTRAN.OLD_BALANCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal OLD_ACCUINT {
                get {
                    try {
                        return ((decimal)(this[this.tableDPDEPTTRAN.OLD_ACCUINTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OLD_ACCUINT\' in table \'DPDEPTTRAN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPDEPTTRAN.OLD_ACCUINTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime LASTCALINT_DATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDPDEPTTRAN.LASTCALINT_DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LASTCALINT_DATE\' in table \'DPDEPTTRAN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPDEPTTRAN.LASTCALINT_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime NEWCALINT_DATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDPDEPTTRAN.NEWCALINT_DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NEWCALINT_DATE\' in table \'DPDEPTTRAN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPDEPTTRAN.NEWCALINT_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal DEPTITEM_AMT {
                get {
                    try {
                        return ((decimal)(this[this.tableDPDEPTTRAN.DEPTITEM_AMTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DEPTITEM_AMT\' in table \'DPDEPTTRAN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPDEPTTRAN.DEPTITEM_AMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal INT_AMT {
                get {
                    try {
                        return ((decimal)(this[this.tableDPDEPTTRAN.INT_AMTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INT_AMT\' in table \'DPDEPTTRAN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPDEPTTRAN.INT_AMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal NEW_ACCUINT {
                get {
                    try {
                        return ((decimal)(this[this.tableDPDEPTTRAN.NEW_ACCUINTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NEW_ACCUINT\' in table \'DPDEPTTRAN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPDEPTTRAN.NEW_ACCUINTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal NEW_BALANC {
                get {
                    try {
                        return ((decimal)(this[this.tableDPDEPTTRAN.NEW_BALANCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NEW_BALANC\' in table \'DPDEPTTRAN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPDEPTTRAN.NEW_BALANCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TRAN_STATUS {
                get {
                    try {
                        return ((decimal)(this[this.tableDPDEPTTRAN.TRAN_STATUSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TRAN_STATUS\' in table \'DPDEPTTRAN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPDEPTTRAN.TRAN_STATUSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal DIVIDEN_AMT {
                get {
                    try {
                        return ((decimal)(this[this.tableDPDEPTTRAN.DIVIDEN_AMTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DIVIDEN_AMT\' in table \'DPDEPTTRAN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPDEPTTRAN.DIVIDEN_AMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal AVERAGE_AMT {
                get {
                    try {
                        return ((decimal)(this[this.tableDPDEPTTRAN.AVERAGE_AMTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AVERAGE_AMT\' in table \'DPDEPTTRAN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPDEPTTRAN.AVERAGE_AMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LNCONT_NO {
                get {
                    try {
                        return ((string)(this[this.tableDPDEPTTRAN.LNCONT_NOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LNCONT_NO\' in table \'DPDEPTTRAN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPDEPTTRAN.LNCONT_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BRANCH_OPERATE {
                get {
                    return ((string)(this[this.tableDPDEPTTRAN.BRANCH_OPERATEColumn]));
                }
                set {
                    this[this.tableDPDEPTTRAN.BRANCH_OPERATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal SEQUEST_STATUS {
                get {
                    try {
                        return ((decimal)(this[this.tableDPDEPTTRAN.SEQUEST_STATUSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SEQUEST_STATUS\' in table \'DPDEPTTRAN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPDEPTTRAN.SEQUEST_STATUSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal SEQUEST_AMT {
                get {
                    try {
                        return ((decimal)(this[this.tableDPDEPTTRAN.SEQUEST_AMTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SEQUEST_AMT\' in table \'DPDEPTTRAN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPDEPTTRAN.SEQUEST_AMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string REF_SLIPNO {
                get {
                    try {
                        return ((string)(this[this.tableDPDEPTTRAN.REF_SLIPNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'REF_SLIPNO\' in table \'DPDEPTTRAN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPDEPTTRAN.REF_SLIPNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string REF_COOPID {
                get {
                    try {
                        return ((string)(this[this.tableDPDEPTTRAN.REF_COOPIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'REF_COOPID\' in table \'DPDEPTTRAN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPDEPTTRAN.REF_COOPIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DEPTSLIP_NO {
                get {
                    try {
                        return ((string)(this[this.tableDPDEPTTRAN.DEPTSLIP_NOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DEPTSLIP_NO\' in table \'DPDEPTTRAN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPDEPTTRAN.DEPTSLIP_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TRAN_TEXT {
                get {
                    try {
                        return ((string)(this[this.tableDPDEPTTRAN.TRAN_TEXTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TRAN_TEXT\' in table \'DPDEPTTRAN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPDEPTTRAN.TRAN_TEXTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOLD_BALANCNull() {
                return this.IsNull(this.tableDPDEPTTRAN.OLD_BALANCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOLD_BALANCNull() {
                this[this.tableDPDEPTTRAN.OLD_BALANCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOLD_ACCUINTNull() {
                return this.IsNull(this.tableDPDEPTTRAN.OLD_ACCUINTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOLD_ACCUINTNull() {
                this[this.tableDPDEPTTRAN.OLD_ACCUINTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLASTCALINT_DATENull() {
                return this.IsNull(this.tableDPDEPTTRAN.LASTCALINT_DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLASTCALINT_DATENull() {
                this[this.tableDPDEPTTRAN.LASTCALINT_DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNEWCALINT_DATENull() {
                return this.IsNull(this.tableDPDEPTTRAN.NEWCALINT_DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNEWCALINT_DATENull() {
                this[this.tableDPDEPTTRAN.NEWCALINT_DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDEPTITEM_AMTNull() {
                return this.IsNull(this.tableDPDEPTTRAN.DEPTITEM_AMTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDEPTITEM_AMTNull() {
                this[this.tableDPDEPTTRAN.DEPTITEM_AMTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsINT_AMTNull() {
                return this.IsNull(this.tableDPDEPTTRAN.INT_AMTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetINT_AMTNull() {
                this[this.tableDPDEPTTRAN.INT_AMTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNEW_ACCUINTNull() {
                return this.IsNull(this.tableDPDEPTTRAN.NEW_ACCUINTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNEW_ACCUINTNull() {
                this[this.tableDPDEPTTRAN.NEW_ACCUINTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNEW_BALANCNull() {
                return this.IsNull(this.tableDPDEPTTRAN.NEW_BALANCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNEW_BALANCNull() {
                this[this.tableDPDEPTTRAN.NEW_BALANCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTRAN_STATUSNull() {
                return this.IsNull(this.tableDPDEPTTRAN.TRAN_STATUSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTRAN_STATUSNull() {
                this[this.tableDPDEPTTRAN.TRAN_STATUSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDIVIDEN_AMTNull() {
                return this.IsNull(this.tableDPDEPTTRAN.DIVIDEN_AMTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDIVIDEN_AMTNull() {
                this[this.tableDPDEPTTRAN.DIVIDEN_AMTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAVERAGE_AMTNull() {
                return this.IsNull(this.tableDPDEPTTRAN.AVERAGE_AMTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAVERAGE_AMTNull() {
                this[this.tableDPDEPTTRAN.AVERAGE_AMTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLNCONT_NONull() {
                return this.IsNull(this.tableDPDEPTTRAN.LNCONT_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLNCONT_NONull() {
                this[this.tableDPDEPTTRAN.LNCONT_NOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSEQUEST_STATUSNull() {
                return this.IsNull(this.tableDPDEPTTRAN.SEQUEST_STATUSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSEQUEST_STATUSNull() {
                this[this.tableDPDEPTTRAN.SEQUEST_STATUSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSEQUEST_AMTNull() {
                return this.IsNull(this.tableDPDEPTTRAN.SEQUEST_AMTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSEQUEST_AMTNull() {
                this[this.tableDPDEPTTRAN.SEQUEST_AMTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsREF_SLIPNONull() {
                return this.IsNull(this.tableDPDEPTTRAN.REF_SLIPNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetREF_SLIPNONull() {
                this[this.tableDPDEPTTRAN.REF_SLIPNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsREF_COOPIDNull() {
                return this.IsNull(this.tableDPDEPTTRAN.REF_COOPIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetREF_COOPIDNull() {
                this[this.tableDPDEPTTRAN.REF_COOPIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDEPTSLIP_NONull() {
                return this.IsNull(this.tableDPDEPTTRAN.DEPTSLIP_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDEPTSLIP_NONull() {
                this[this.tableDPDEPTTRAN.DEPTSLIP_NOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTRAN_TEXTNull() {
                return this.IsNull(this.tableDPDEPTTRAN.TRAN_TEXTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTRAN_TEXTNull() {
                this[this.tableDPDEPTTRAN.TRAN_TEXTColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class DPDEPTTRANRowChangeEvent : global::System.EventArgs {
            
            private DPDEPTTRANRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DPDEPTTRANRowChangeEvent(DPDEPTTRANRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DPDEPTTRANRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace Saving.Applications.ap_deposit.w_sheet_dp_dptran_div_ctrl.DataSet1TableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class DPDEPTTRANTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OracleClient.OracleDataAdapter _adapter;
        
        private global::System.Data.OracleClient.OracleConnection _connection;
        
        private global::System.Data.OracleClient.OracleTransaction _transaction;
        
        private global::System.Data.OracleClient.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DPDEPTTRANTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.OracleClient.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.OracleClient.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OracleClient.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.OracleClient.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.OracleClient.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OracleClient.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "DPDEPTTRAN";
            tableMapping.ColumnMappings.Add("COOP_ID", "COOP_ID");
            tableMapping.ColumnMappings.Add("DEPTACCOUNT_NO", "DEPTACCOUNT_NO");
            tableMapping.ColumnMappings.Add("MEMCOOP_ID", "MEMCOOP_ID");
            tableMapping.ColumnMappings.Add("MEMBER_NO", "MEMBER_NO");
            tableMapping.ColumnMappings.Add("SYSTEM_CODE", "SYSTEM_CODE");
            tableMapping.ColumnMappings.Add("TRAN_YEAR", "TRAN_YEAR");
            tableMapping.ColumnMappings.Add("TRAN_DATE", "TRAN_DATE");
            tableMapping.ColumnMappings.Add("SEQ_NO", "SEQ_NO");
            tableMapping.ColumnMappings.Add("OLD_BALANC", "OLD_BALANC");
            tableMapping.ColumnMappings.Add("OLD_ACCUINT", "OLD_ACCUINT");
            tableMapping.ColumnMappings.Add("LASTCALINT_DATE", "LASTCALINT_DATE");
            tableMapping.ColumnMappings.Add("NEWCALINT_DATE", "NEWCALINT_DATE");
            tableMapping.ColumnMappings.Add("DEPTITEM_AMT", "DEPTITEM_AMT");
            tableMapping.ColumnMappings.Add("INT_AMT", "INT_AMT");
            tableMapping.ColumnMappings.Add("NEW_ACCUINT", "NEW_ACCUINT");
            tableMapping.ColumnMappings.Add("NEW_BALANC", "NEW_BALANC");
            tableMapping.ColumnMappings.Add("TRAN_STATUS", "TRAN_STATUS");
            tableMapping.ColumnMappings.Add("DIVIDEN_AMT", "DIVIDEN_AMT");
            tableMapping.ColumnMappings.Add("AVERAGE_AMT", "AVERAGE_AMT");
            tableMapping.ColumnMappings.Add("LNCONT_NO", "LNCONT_NO");
            tableMapping.ColumnMappings.Add("BRANCH_OPERATE", "BRANCH_OPERATE");
            tableMapping.ColumnMappings.Add("SEQUEST_STATUS", "SEQUEST_STATUS");
            tableMapping.ColumnMappings.Add("SEQUEST_AMT", "SEQUEST_AMT");
            tableMapping.ColumnMappings.Add("REF_SLIPNO", "REF_SLIPNO");
            tableMapping.ColumnMappings.Add("REF_COOPID", "REF_COOPID");
            tableMapping.ColumnMappings.Add("DEPTSLIP_NO", "DEPTSLIP_NO");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM ""DPDEPTTRAN"" WHERE ((""COOP_ID"" = :Original_COOP_ID) AND (""DEPTACCOUNT_NO"" = :Original_DEPTACCOUNT_NO) AND (""MEMCOOP_ID"" = :Original_MEMCOOP_ID) AND (""MEMBER_NO"" = :Original_MEMBER_NO) AND (""SYSTEM_CODE"" = :Original_SYSTEM_CODE) AND (""TRAN_YEAR"" = :Original_TRAN_YEAR) AND (""TRAN_DATE"" = :Original_TRAN_DATE) AND (""SEQ_NO"" = :Original_SEQ_NO))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_COOP_ID", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "COOP_ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_DEPTACCOUNT_NO", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "DEPTACCOUNT_NO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_MEMCOOP_ID", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "MEMCOOP_ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_MEMBER_NO", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "MEMBER_NO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_SYSTEM_CODE", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "SYSTEM_CODE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_TRAN_YEAR", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "TRAN_YEAR", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_TRAN_DATE", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "TRAN_DATE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_SEQ_NO", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "SEQ_NO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO ""DPDEPTTRAN"" (""COOP_ID"", ""DEPTACCOUNT_NO"", ""MEMCOOP_ID"", ""MEMBER_NO"", ""SYSTEM_CODE"", ""TRAN_YEAR"", ""TRAN_DATE"", ""SEQ_NO"", ""OLD_BALANC"", ""OLD_ACCUINT"", ""LASTCALINT_DATE"", ""NEWCALINT_DATE"", ""DEPTITEM_AMT"", ""INT_AMT"", ""NEW_ACCUINT"", ""NEW_BALANC"", ""TRAN_STATUS"", ""DIVIDEN_AMT"", ""AVERAGE_AMT"", ""LNCONT_NO"", ""BRANCH_OPERATE"", ""SEQUEST_STATUS"", ""SEQUEST_AMT"", ""REF_SLIPNO"", ""REF_COOPID"", ""DEPTSLIP_NO"") VALUES (:COOP_ID, :DEPTACCOUNT_NO, :MEMCOOP_ID, :MEMBER_NO, :SYSTEM_CODE, :TRAN_YEAR, :TRAN_DATE, :SEQ_NO, :OLD_BALANC, :OLD_ACCUINT, :LASTCALINT_DATE, :NEWCALINT_DATE, :DEPTITEM_AMT, :INT_AMT, :NEW_ACCUINT, :NEW_BALANC, :TRAN_STATUS, :DIVIDEN_AMT, :AVERAGE_AMT, :LNCONT_NO, :BRANCH_OPERATE, :SEQUEST_STATUS, :SEQUEST_AMT, :REF_SLIPNO, :REF_COOPID, :DEPTSLIP_NO)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("COOP_ID", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "COOP_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("DEPTACCOUNT_NO", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "DEPTACCOUNT_NO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MEMCOOP_ID", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "MEMCOOP_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MEMBER_NO", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "MEMBER_NO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SYSTEM_CODE", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "SYSTEM_CODE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("TRAN_YEAR", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "TRAN_YEAR", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("TRAN_DATE", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "TRAN_DATE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SEQ_NO", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "SEQ_NO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("OLD_BALANC", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "OLD_BALANC", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("OLD_ACCUINT", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "OLD_ACCUINT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LASTCALINT_DATE", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "LASTCALINT_DATE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("NEWCALINT_DATE", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "NEWCALINT_DATE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("DEPTITEM_AMT", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "DEPTITEM_AMT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("INT_AMT", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "INT_AMT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("NEW_ACCUINT", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "NEW_ACCUINT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("NEW_BALANC", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "NEW_BALANC", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("TRAN_STATUS", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "TRAN_STATUS", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("DIVIDEN_AMT", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "DIVIDEN_AMT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("AVERAGE_AMT", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "AVERAGE_AMT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LNCONT_NO", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "LNCONT_NO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("BRANCH_OPERATE", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "BRANCH_OPERATE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SEQUEST_STATUS", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "SEQUEST_STATUS", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SEQUEST_AMT", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "SEQUEST_AMT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("REF_SLIPNO", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "REF_SLIPNO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("REF_COOPID", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "REF_COOPID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("DEPTSLIP_NO", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "DEPTSLIP_NO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""DPDEPTTRAN"" SET ""COOP_ID"" = :COOP_ID, ""DEPTACCOUNT_NO"" = :DEPTACCOUNT_NO, ""MEMCOOP_ID"" = :MEMCOOP_ID, ""MEMBER_NO"" = :MEMBER_NO, ""SYSTEM_CODE"" = :SYSTEM_CODE, ""TRAN_YEAR"" = :TRAN_YEAR, ""TRAN_DATE"" = :TRAN_DATE, ""SEQ_NO"" = :SEQ_NO, ""OLD_BALANC"" = :OLD_BALANC, ""OLD_ACCUINT"" = :OLD_ACCUINT, ""LASTCALINT_DATE"" = :LASTCALINT_DATE, ""NEWCALINT_DATE"" = :NEWCALINT_DATE, ""DEPTITEM_AMT"" = :DEPTITEM_AMT, ""INT_AMT"" = :INT_AMT, ""NEW_ACCUINT"" = :NEW_ACCUINT, ""NEW_BALANC"" = :NEW_BALANC, ""TRAN_STATUS"" = :TRAN_STATUS, ""DIVIDEN_AMT"" = :DIVIDEN_AMT, ""AVERAGE_AMT"" = :AVERAGE_AMT, ""LNCONT_NO"" = :LNCONT_NO, ""BRANCH_OPERATE"" = :BRANCH_OPERATE, ""SEQUEST_STATUS"" = :SEQUEST_STATUS, ""SEQUEST_AMT"" = :SEQUEST_AMT, ""REF_SLIPNO"" = :REF_SLIPNO, ""REF_COOPID"" = :REF_COOPID, ""DEPTSLIP_NO"" = :DEPTSLIP_NO WHERE ((""COOP_ID"" = :Original_COOP_ID) AND (""DEPTACCOUNT_NO"" = :Original_DEPTACCOUNT_NO) AND (""MEMCOOP_ID"" = :Original_MEMCOOP_ID) AND (""MEMBER_NO"" = :Original_MEMBER_NO) AND (""SYSTEM_CODE"" = :Original_SYSTEM_CODE) AND (""TRAN_YEAR"" = :Original_TRAN_YEAR) AND (""TRAN_DATE"" = :Original_TRAN_DATE) AND (""SEQ_NO"" = :Original_SEQ_NO))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("COOP_ID", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "COOP_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("DEPTACCOUNT_NO", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "DEPTACCOUNT_NO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MEMCOOP_ID", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "MEMCOOP_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MEMBER_NO", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "MEMBER_NO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SYSTEM_CODE", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "SYSTEM_CODE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("TRAN_YEAR", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "TRAN_YEAR", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("TRAN_DATE", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "TRAN_DATE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SEQ_NO", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "SEQ_NO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("OLD_BALANC", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "OLD_BALANC", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("OLD_ACCUINT", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "OLD_ACCUINT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LASTCALINT_DATE", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "LASTCALINT_DATE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("NEWCALINT_DATE", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "NEWCALINT_DATE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("DEPTITEM_AMT", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "DEPTITEM_AMT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("INT_AMT", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "INT_AMT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("NEW_ACCUINT", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "NEW_ACCUINT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("NEW_BALANC", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "NEW_BALANC", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("TRAN_STATUS", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "TRAN_STATUS", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("DIVIDEN_AMT", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "DIVIDEN_AMT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("AVERAGE_AMT", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "AVERAGE_AMT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LNCONT_NO", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "LNCONT_NO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("BRANCH_OPERATE", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "BRANCH_OPERATE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SEQUEST_STATUS", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "SEQUEST_STATUS", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SEQUEST_AMT", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "SEQUEST_AMT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("REF_SLIPNO", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "REF_SLIPNO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("REF_COOPID", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "REF_COOPID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("DEPTSLIP_NO", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "DEPTSLIP_NO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_COOP_ID", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "COOP_ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_DEPTACCOUNT_NO", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "DEPTACCOUNT_NO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_MEMCOOP_ID", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "MEMCOOP_ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_MEMBER_NO", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "MEMBER_NO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_SYSTEM_CODE", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "SYSTEM_CODE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_TRAN_YEAR", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "TRAN_YEAR", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_TRAN_DATE", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "TRAN_DATE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_SEQ_NO", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "SEQ_NO", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.OracleClient.OracleConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["ConnectionStringLocal"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OracleClient.OracleCommand[1];
            this._commandCollection[0] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "select * from dpdepttran";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.DPDEPTTRANDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.DPDEPTTRANDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.DPDEPTTRANDataTable dataTable = new DataSet1.DPDEPTTRANDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.DPDEPTTRANDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "DPDEPTTRAN");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_COOP_ID, string Original_DEPTACCOUNT_NO, string Original_MEMCOOP_ID, string Original_MEMBER_NO, string Original_SYSTEM_CODE, decimal Original_TRAN_YEAR, System.DateTime Original_TRAN_DATE, decimal Original_SEQ_NO) {
            if ((Original_COOP_ID == null)) {
                throw new global::System.ArgumentNullException("Original_COOP_ID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_COOP_ID));
            }
            if ((Original_DEPTACCOUNT_NO == null)) {
                throw new global::System.ArgumentNullException("Original_DEPTACCOUNT_NO");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_DEPTACCOUNT_NO));
            }
            if ((Original_MEMCOOP_ID == null)) {
                throw new global::System.ArgumentNullException("Original_MEMCOOP_ID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_MEMCOOP_ID));
            }
            if ((Original_MEMBER_NO == null)) {
                throw new global::System.ArgumentNullException("Original_MEMBER_NO");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_MEMBER_NO));
            }
            if ((Original_SYSTEM_CODE == null)) {
                throw new global::System.ArgumentNullException("Original_SYSTEM_CODE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_SYSTEM_CODE));
            }
            this.Adapter.DeleteCommand.Parameters[5].Value = ((decimal)(Original_TRAN_YEAR));
            this.Adapter.DeleteCommand.Parameters[6].Value = ((System.DateTime)(Original_TRAN_DATE));
            this.Adapter.DeleteCommand.Parameters[7].Value = ((decimal)(Original_SEQ_NO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string COOP_ID, 
                    string DEPTACCOUNT_NO, 
                    string MEMCOOP_ID, 
                    string MEMBER_NO, 
                    string SYSTEM_CODE, 
                    decimal TRAN_YEAR, 
                    System.DateTime TRAN_DATE, 
                    decimal SEQ_NO, 
                    global::System.Nullable<decimal> OLD_BALANC, 
                    global::System.Nullable<decimal> OLD_ACCUINT, 
                    global::System.Nullable<global::System.DateTime> LASTCALINT_DATE, 
                    global::System.Nullable<global::System.DateTime> NEWCALINT_DATE, 
                    global::System.Nullable<decimal> DEPTITEM_AMT, 
                    global::System.Nullable<decimal> INT_AMT, 
                    global::System.Nullable<decimal> NEW_ACCUINT, 
                    global::System.Nullable<decimal> NEW_BALANC, 
                    global::System.Nullable<decimal> TRAN_STATUS, 
                    global::System.Nullable<decimal> DIVIDEN_AMT, 
                    global::System.Nullable<decimal> AVERAGE_AMT, 
                    string LNCONT_NO, 
                    string BRANCH_OPERATE, 
                    global::System.Nullable<decimal> SEQUEST_STATUS, 
                    global::System.Nullable<decimal> SEQUEST_AMT, 
                    string REF_SLIPNO, 
                    string REF_COOPID, 
                    string DEPTSLIP_NO) {
            if ((COOP_ID == null)) {
                throw new global::System.ArgumentNullException("COOP_ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(COOP_ID));
            }
            if ((DEPTACCOUNT_NO == null)) {
                throw new global::System.ArgumentNullException("DEPTACCOUNT_NO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(DEPTACCOUNT_NO));
            }
            if ((MEMCOOP_ID == null)) {
                throw new global::System.ArgumentNullException("MEMCOOP_ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(MEMCOOP_ID));
            }
            if ((MEMBER_NO == null)) {
                throw new global::System.ArgumentNullException("MEMBER_NO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(MEMBER_NO));
            }
            if ((SYSTEM_CODE == null)) {
                throw new global::System.ArgumentNullException("SYSTEM_CODE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(SYSTEM_CODE));
            }
            this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(TRAN_YEAR));
            this.Adapter.InsertCommand.Parameters[6].Value = ((System.DateTime)(TRAN_DATE));
            this.Adapter.InsertCommand.Parameters[7].Value = ((decimal)(SEQ_NO));
            if ((OLD_BALANC.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((decimal)(OLD_BALANC.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((OLD_ACCUINT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((decimal)(OLD_ACCUINT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((LASTCALINT_DATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((System.DateTime)(LASTCALINT_DATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((NEWCALINT_DATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((System.DateTime)(NEWCALINT_DATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((DEPTITEM_AMT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((decimal)(DEPTITEM_AMT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((INT_AMT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((decimal)(INT_AMT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((NEW_ACCUINT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((decimal)(NEW_ACCUINT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((NEW_BALANC.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((decimal)(NEW_BALANC.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((TRAN_STATUS.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((decimal)(TRAN_STATUS.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((DIVIDEN_AMT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((decimal)(DIVIDEN_AMT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((AVERAGE_AMT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((decimal)(AVERAGE_AMT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((LNCONT_NO == null)) {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(LNCONT_NO));
            }
            if ((BRANCH_OPERATE == null)) {
                throw new global::System.ArgumentNullException("BRANCH_OPERATE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(BRANCH_OPERATE));
            }
            if ((SEQUEST_STATUS.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[21].Value = ((decimal)(SEQUEST_STATUS.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((SEQUEST_AMT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[22].Value = ((decimal)(SEQUEST_AMT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((REF_SLIPNO == null)) {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(REF_SLIPNO));
            }
            if ((REF_COOPID == null)) {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(REF_COOPID));
            }
            if ((DEPTSLIP_NO == null)) {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = ((string)(DEPTSLIP_NO));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string COOP_ID, 
                    string DEPTACCOUNT_NO, 
                    string MEMCOOP_ID, 
                    string MEMBER_NO, 
                    string SYSTEM_CODE, 
                    decimal TRAN_YEAR, 
                    System.DateTime TRAN_DATE, 
                    decimal SEQ_NO, 
                    global::System.Nullable<decimal> OLD_BALANC, 
                    global::System.Nullable<decimal> OLD_ACCUINT, 
                    global::System.Nullable<global::System.DateTime> LASTCALINT_DATE, 
                    global::System.Nullable<global::System.DateTime> NEWCALINT_DATE, 
                    global::System.Nullable<decimal> DEPTITEM_AMT, 
                    global::System.Nullable<decimal> INT_AMT, 
                    global::System.Nullable<decimal> NEW_ACCUINT, 
                    global::System.Nullable<decimal> NEW_BALANC, 
                    global::System.Nullable<decimal> TRAN_STATUS, 
                    global::System.Nullable<decimal> DIVIDEN_AMT, 
                    global::System.Nullable<decimal> AVERAGE_AMT, 
                    string LNCONT_NO, 
                    string BRANCH_OPERATE, 
                    global::System.Nullable<decimal> SEQUEST_STATUS, 
                    global::System.Nullable<decimal> SEQUEST_AMT, 
                    string REF_SLIPNO, 
                    string REF_COOPID, 
                    string DEPTSLIP_NO, 
                    string Original_COOP_ID, 
                    string Original_DEPTACCOUNT_NO, 
                    string Original_MEMCOOP_ID, 
                    string Original_MEMBER_NO, 
                    string Original_SYSTEM_CODE, 
                    decimal Original_TRAN_YEAR, 
                    System.DateTime Original_TRAN_DATE, 
                    decimal Original_SEQ_NO) {
            if ((COOP_ID == null)) {
                throw new global::System.ArgumentNullException("COOP_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(COOP_ID));
            }
            if ((DEPTACCOUNT_NO == null)) {
                throw new global::System.ArgumentNullException("DEPTACCOUNT_NO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(DEPTACCOUNT_NO));
            }
            if ((MEMCOOP_ID == null)) {
                throw new global::System.ArgumentNullException("MEMCOOP_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(MEMCOOP_ID));
            }
            if ((MEMBER_NO == null)) {
                throw new global::System.ArgumentNullException("MEMBER_NO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(MEMBER_NO));
            }
            if ((SYSTEM_CODE == null)) {
                throw new global::System.ArgumentNullException("SYSTEM_CODE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(SYSTEM_CODE));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(TRAN_YEAR));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(TRAN_DATE));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(SEQ_NO));
            if ((OLD_BALANC.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(OLD_BALANC.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((OLD_ACCUINT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(OLD_ACCUINT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((LASTCALINT_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((System.DateTime)(LASTCALINT_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((NEWCALINT_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((System.DateTime)(NEWCALINT_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((DEPTITEM_AMT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((decimal)(DEPTITEM_AMT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((INT_AMT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((decimal)(INT_AMT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((NEW_ACCUINT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((decimal)(NEW_ACCUINT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((NEW_BALANC.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((decimal)(NEW_BALANC.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((TRAN_STATUS.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((decimal)(TRAN_STATUS.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((DIVIDEN_AMT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((decimal)(DIVIDEN_AMT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((AVERAGE_AMT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((decimal)(AVERAGE_AMT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((LNCONT_NO == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(LNCONT_NO));
            }
            if ((BRANCH_OPERATE == null)) {
                throw new global::System.ArgumentNullException("BRANCH_OPERATE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(BRANCH_OPERATE));
            }
            if ((SEQUEST_STATUS.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((decimal)(SEQUEST_STATUS.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((SEQUEST_AMT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((decimal)(SEQUEST_AMT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((REF_SLIPNO == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(REF_SLIPNO));
            }
            if ((REF_COOPID == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(REF_COOPID));
            }
            if ((DEPTSLIP_NO == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(DEPTSLIP_NO));
            }
            if ((Original_COOP_ID == null)) {
                throw new global::System.ArgumentNullException("Original_COOP_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_COOP_ID));
            }
            if ((Original_DEPTACCOUNT_NO == null)) {
                throw new global::System.ArgumentNullException("Original_DEPTACCOUNT_NO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(Original_DEPTACCOUNT_NO));
            }
            if ((Original_MEMCOOP_ID == null)) {
                throw new global::System.ArgumentNullException("Original_MEMCOOP_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Original_MEMCOOP_ID));
            }
            if ((Original_MEMBER_NO == null)) {
                throw new global::System.ArgumentNullException("Original_MEMBER_NO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(Original_MEMBER_NO));
            }
            if ((Original_SYSTEM_CODE == null)) {
                throw new global::System.ArgumentNullException("Original_SYSTEM_CODE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Original_SYSTEM_CODE));
            }
            this.Adapter.UpdateCommand.Parameters[31].Value = ((decimal)(Original_TRAN_YEAR));
            this.Adapter.UpdateCommand.Parameters[32].Value = ((System.DateTime)(Original_TRAN_DATE));
            this.Adapter.UpdateCommand.Parameters[33].Value = ((decimal)(Original_SEQ_NO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<decimal> OLD_BALANC, 
                    global::System.Nullable<decimal> OLD_ACCUINT, 
                    global::System.Nullable<global::System.DateTime> LASTCALINT_DATE, 
                    global::System.Nullable<global::System.DateTime> NEWCALINT_DATE, 
                    global::System.Nullable<decimal> DEPTITEM_AMT, 
                    global::System.Nullable<decimal> INT_AMT, 
                    global::System.Nullable<decimal> NEW_ACCUINT, 
                    global::System.Nullable<decimal> NEW_BALANC, 
                    global::System.Nullable<decimal> TRAN_STATUS, 
                    global::System.Nullable<decimal> DIVIDEN_AMT, 
                    global::System.Nullable<decimal> AVERAGE_AMT, 
                    string LNCONT_NO, 
                    string BRANCH_OPERATE, 
                    global::System.Nullable<decimal> SEQUEST_STATUS, 
                    global::System.Nullable<decimal> SEQUEST_AMT, 
                    string REF_SLIPNO, 
                    string REF_COOPID, 
                    string DEPTSLIP_NO, 
                    string Original_COOP_ID, 
                    string Original_DEPTACCOUNT_NO, 
                    string Original_MEMCOOP_ID, 
                    string Original_MEMBER_NO, 
                    string Original_SYSTEM_CODE, 
                    decimal Original_TRAN_YEAR, 
                    System.DateTime Original_TRAN_DATE, 
                    decimal Original_SEQ_NO) {
            return this.Update(Original_COOP_ID, Original_DEPTACCOUNT_NO, Original_MEMCOOP_ID, Original_MEMBER_NO, Original_SYSTEM_CODE, Original_TRAN_YEAR, Original_TRAN_DATE, Original_SEQ_NO, OLD_BALANC, OLD_ACCUINT, LASTCALINT_DATE, NEWCALINT_DATE, DEPTITEM_AMT, INT_AMT, NEW_ACCUINT, NEW_BALANC, TRAN_STATUS, DIVIDEN_AMT, AVERAGE_AMT, LNCONT_NO, BRANCH_OPERATE, SEQUEST_STATUS, SEQUEST_AMT, REF_SLIPNO, REF_COOPID, DEPTSLIP_NO, Original_COOP_ID, Original_DEPTACCOUNT_NO, Original_MEMCOOP_ID, Original_MEMBER_NO, Original_SYSTEM_CODE, Original_TRAN_YEAR, Original_TRAN_DATE, Original_SEQ_NO);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private DPDEPTTRANTableAdapter _dPDEPTTRANTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public DPDEPTTRANTableAdapter DPDEPTTRANTableAdapter {
            get {
                return this._dPDEPTTRANTableAdapter;
            }
            set {
                this._dPDEPTTRANTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._dPDEPTTRANTableAdapter != null) 
                            && (this._dPDEPTTRANTableAdapter.Connection != null))) {
                    return this._dPDEPTTRANTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._dPDEPTTRANTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(DataSet1 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._dPDEPTTRANTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.DPDEPTTRAN.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._dPDEPTTRANTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(DataSet1 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._dPDEPTTRANTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.DPDEPTTRAN.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._dPDEPTTRANTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(DataSet1 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._dPDEPTTRANTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.DPDEPTTRAN.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._dPDEPTTRANTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(DataSet1 dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._dPDEPTTRANTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._dPDEPTTRANTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._dPDEPTTRANTableAdapter != null)) {
                    revertConnections.Add(this._dPDEPTTRANTableAdapter, this._dPDEPTTRANTableAdapter.Connection);
                    this._dPDEPTTRANTableAdapter.Connection = ((global::System.Data.OracleClient.OracleConnection)(workConnection));
                    this._dPDEPTTRANTableAdapter.Transaction = ((global::System.Data.OracleClient.OracleTransaction)(workTransaction));
                    if (this._dPDEPTTRANTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._dPDEPTTRANTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._dPDEPTTRANTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._dPDEPTTRANTableAdapter != null)) {
                    this._dPDEPTTRANTableAdapter.Connection = ((global::System.Data.OracleClient.OracleConnection)(revertConnections[this._dPDEPTTRANTableAdapter]));
                    this._dPDEPTTRANTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591