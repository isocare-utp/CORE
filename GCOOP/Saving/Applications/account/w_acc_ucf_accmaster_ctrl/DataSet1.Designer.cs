//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.33440
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Saving.Applications.account.w_acc_ucf_accmaster_ctrl {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DataSet1")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DataSet1 : global::System.Data.DataSet {
        
        private ACCMASTERDataTable tableACCMASTER;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DataSet1() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected DataSet1(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["ACCMASTER"] != null)) {
                    base.Tables.Add(new ACCMASTERDataTable(ds.Tables["ACCMASTER"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ACCMASTERDataTable ACCMASTER {
            get {
                return this.tableACCMASTER;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            DataSet1 cln = ((DataSet1)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["ACCMASTER"] != null)) {
                    base.Tables.Add(new ACCMASTERDataTable(ds.Tables["ACCMASTER"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableACCMASTER = ((ACCMASTERDataTable)(base.Tables["ACCMASTER"]));
            if ((initTable == true)) {
                if ((this.tableACCMASTER != null)) {
                    this.tableACCMASTER.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "DataSet1";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DataSet1.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableACCMASTER = new ACCMASTERDataTable();
            base.Tables.Add(this.tableACCMASTER);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeACCMASTER() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DataSet1 ds = new DataSet1();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ACCMASTERRowChangeEventHandler(object sender, ACCMASTERRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ACCMASTERDataTable : global::System.Data.TypedTableBase<ACCMASTERRow> {
            
            private global::System.Data.DataColumn columnCOOP_ID;
            
            private global::System.Data.DataColumn columnACCOUNT_ID;
            
            private global::System.Data.DataColumn columnSECTION_ID;
            
            private global::System.Data.DataColumn columnACCOUNT_NAME;
            
            private global::System.Data.DataColumn columnACCOUNT_TYPE_ID;
            
            private global::System.Data.DataColumn columnACCOUNT_GROUP_ID;
            
            private global::System.Data.DataColumn columnACCOUNT_LEVEL;
            
            private global::System.Data.DataColumn columnBALANCE_BEGIN;
            
            private global::System.Data.DataColumn columnACCOUNT_NATURE;
            
            private global::System.Data.DataColumn columnACCOUNT_CONTROL_ID;
            
            private global::System.Data.DataColumn columnACCOUNT_CLOSE_ID;
            
            private global::System.Data.DataColumn columnACCOUNT_SORT;
            
            private global::System.Data.DataColumn columnSUM_CRAMT_YEAR;
            
            private global::System.Data.DataColumn columnSUM_DRAMT_YEAR;
            
            private global::System.Data.DataColumn columnACC_ASTIMATE_DC;
            
            private global::System.Data.DataColumn columnACCOUNT_REV_GROUP;
            
            private global::System.Data.DataColumn columnACCOUNT_CONTROL_2LEVEL;
            
            private global::System.Data.DataColumn columnACCOUNT_CONTROL_3LEVEL;
            
            private global::System.Data.DataColumn columnACCOUNT_CONTROL_4LEVEL;
            
            private global::System.Data.DataColumn columnACCOUNT_NEWID;
            
            private global::System.Data.DataColumn columnACCOUNT_OLDID;
            
            private global::System.Data.DataColumn columnBRANCH_ID;
            
            private global::System.Data.DataColumn columnDESC_CR;
            
            private global::System.Data.DataColumn columnDESC_DR;
            
            private global::System.Data.DataColumn columnACCOUNT_ACTIVITY;
            
            private global::System.Data.DataColumn columnACTIVE_STATUS;
            
            private global::System.Data.DataColumn columnON_REPORT;
            
            private global::System.Data.DataColumn columnINTCR_FLAG;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ACCMASTERDataTable() {
                this.TableName = "ACCMASTER";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ACCMASTERDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ACCMASTERDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn COOP_IDColumn {
                get {
                    return this.columnCOOP_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ACCOUNT_IDColumn {
                get {
                    return this.columnACCOUNT_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SECTION_IDColumn {
                get {
                    return this.columnSECTION_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ACCOUNT_NAMEColumn {
                get {
                    return this.columnACCOUNT_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ACCOUNT_TYPE_IDColumn {
                get {
                    return this.columnACCOUNT_TYPE_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ACCOUNT_GROUP_IDColumn {
                get {
                    return this.columnACCOUNT_GROUP_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ACCOUNT_LEVELColumn {
                get {
                    return this.columnACCOUNT_LEVEL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BALANCE_BEGINColumn {
                get {
                    return this.columnBALANCE_BEGIN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ACCOUNT_NATUREColumn {
                get {
                    return this.columnACCOUNT_NATURE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ACCOUNT_CONTROL_IDColumn {
                get {
                    return this.columnACCOUNT_CONTROL_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ACCOUNT_CLOSE_IDColumn {
                get {
                    return this.columnACCOUNT_CLOSE_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ACCOUNT_SORTColumn {
                get {
                    return this.columnACCOUNT_SORT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SUM_CRAMT_YEARColumn {
                get {
                    return this.columnSUM_CRAMT_YEAR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SUM_DRAMT_YEARColumn {
                get {
                    return this.columnSUM_DRAMT_YEAR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ACC_ASTIMATE_DCColumn {
                get {
                    return this.columnACC_ASTIMATE_DC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ACCOUNT_REV_GROUPColumn {
                get {
                    return this.columnACCOUNT_REV_GROUP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ACCOUNT_CONTROL_2LEVELColumn {
                get {
                    return this.columnACCOUNT_CONTROL_2LEVEL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ACCOUNT_CONTROL_3LEVELColumn {
                get {
                    return this.columnACCOUNT_CONTROL_3LEVEL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ACCOUNT_CONTROL_4LEVELColumn {
                get {
                    return this.columnACCOUNT_CONTROL_4LEVEL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ACCOUNT_NEWIDColumn {
                get {
                    return this.columnACCOUNT_NEWID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ACCOUNT_OLDIDColumn {
                get {
                    return this.columnACCOUNT_OLDID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BRANCH_IDColumn {
                get {
                    return this.columnBRANCH_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DESC_CRColumn {
                get {
                    return this.columnDESC_CR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DESC_DRColumn {
                get {
                    return this.columnDESC_DR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ACCOUNT_ACTIVITYColumn {
                get {
                    return this.columnACCOUNT_ACTIVITY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ACTIVE_STATUSColumn {
                get {
                    return this.columnACTIVE_STATUS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ON_REPORTColumn {
                get {
                    return this.columnON_REPORT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn INTCR_FLAGColumn {
                get {
                    return this.columnINTCR_FLAG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ACCMASTERRow this[int index] {
                get {
                    return ((ACCMASTERRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ACCMASTERRowChangeEventHandler ACCMASTERRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ACCMASTERRowChangeEventHandler ACCMASTERRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ACCMASTERRowChangeEventHandler ACCMASTERRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ACCMASTERRowChangeEventHandler ACCMASTERRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddACCMASTERRow(ACCMASTERRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ACCMASTERRow AddACCMASTERRow(
                        string COOP_ID, 
                        string ACCOUNT_ID, 
                        string SECTION_ID, 
                        string ACCOUNT_NAME, 
                        string ACCOUNT_TYPE_ID, 
                        string ACCOUNT_GROUP_ID, 
                        decimal ACCOUNT_LEVEL, 
                        decimal BALANCE_BEGIN, 
                        string ACCOUNT_NATURE, 
                        string ACCOUNT_CONTROL_ID, 
                        string ACCOUNT_CLOSE_ID, 
                        decimal ACCOUNT_SORT, 
                        decimal SUM_CRAMT_YEAR, 
                        decimal SUM_DRAMT_YEAR, 
                        string ACC_ASTIMATE_DC, 
                        string ACCOUNT_REV_GROUP, 
                        string ACCOUNT_CONTROL_2LEVEL, 
                        string ACCOUNT_CONTROL_3LEVEL, 
                        string ACCOUNT_CONTROL_4LEVEL, 
                        string ACCOUNT_NEWID, 
                        string ACCOUNT_OLDID, 
                        string BRANCH_ID, 
                        string DESC_CR, 
                        string DESC_DR, 
                        string ACCOUNT_ACTIVITY, 
                        decimal ACTIVE_STATUS, 
                        decimal ON_REPORT, 
                        decimal INTCR_FLAG) {
                ACCMASTERRow rowACCMASTERRow = ((ACCMASTERRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        COOP_ID,
                        ACCOUNT_ID,
                        SECTION_ID,
                        ACCOUNT_NAME,
                        ACCOUNT_TYPE_ID,
                        ACCOUNT_GROUP_ID,
                        ACCOUNT_LEVEL,
                        BALANCE_BEGIN,
                        ACCOUNT_NATURE,
                        ACCOUNT_CONTROL_ID,
                        ACCOUNT_CLOSE_ID,
                        ACCOUNT_SORT,
                        SUM_CRAMT_YEAR,
                        SUM_DRAMT_YEAR,
                        ACC_ASTIMATE_DC,
                        ACCOUNT_REV_GROUP,
                        ACCOUNT_CONTROL_2LEVEL,
                        ACCOUNT_CONTROL_3LEVEL,
                        ACCOUNT_CONTROL_4LEVEL,
                        ACCOUNT_NEWID,
                        ACCOUNT_OLDID,
                        BRANCH_ID,
                        DESC_CR,
                        DESC_DR,
                        ACCOUNT_ACTIVITY,
                        ACTIVE_STATUS,
                        ON_REPORT,
                        INTCR_FLAG};
                rowACCMASTERRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowACCMASTERRow);
                return rowACCMASTERRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ACCMASTERRow FindByCOOP_IDACCOUNT_ID(string COOP_ID, string ACCOUNT_ID) {
                return ((ACCMASTERRow)(this.Rows.Find(new object[] {
                            COOP_ID,
                            ACCOUNT_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ACCMASTERDataTable cln = ((ACCMASTERDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ACCMASTERDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnCOOP_ID = base.Columns["COOP_ID"];
                this.columnACCOUNT_ID = base.Columns["ACCOUNT_ID"];
                this.columnSECTION_ID = base.Columns["SECTION_ID"];
                this.columnACCOUNT_NAME = base.Columns["ACCOUNT_NAME"];
                this.columnACCOUNT_TYPE_ID = base.Columns["ACCOUNT_TYPE_ID"];
                this.columnACCOUNT_GROUP_ID = base.Columns["ACCOUNT_GROUP_ID"];
                this.columnACCOUNT_LEVEL = base.Columns["ACCOUNT_LEVEL"];
                this.columnBALANCE_BEGIN = base.Columns["BALANCE_BEGIN"];
                this.columnACCOUNT_NATURE = base.Columns["ACCOUNT_NATURE"];
                this.columnACCOUNT_CONTROL_ID = base.Columns["ACCOUNT_CONTROL_ID"];
                this.columnACCOUNT_CLOSE_ID = base.Columns["ACCOUNT_CLOSE_ID"];
                this.columnACCOUNT_SORT = base.Columns["ACCOUNT_SORT"];
                this.columnSUM_CRAMT_YEAR = base.Columns["SUM_CRAMT_YEAR"];
                this.columnSUM_DRAMT_YEAR = base.Columns["SUM_DRAMT_YEAR"];
                this.columnACC_ASTIMATE_DC = base.Columns["ACC_ASTIMATE_DC"];
                this.columnACCOUNT_REV_GROUP = base.Columns["ACCOUNT_REV_GROUP"];
                this.columnACCOUNT_CONTROL_2LEVEL = base.Columns["ACCOUNT_CONTROL_2LEVEL"];
                this.columnACCOUNT_CONTROL_3LEVEL = base.Columns["ACCOUNT_CONTROL_3LEVEL"];
                this.columnACCOUNT_CONTROL_4LEVEL = base.Columns["ACCOUNT_CONTROL_4LEVEL"];
                this.columnACCOUNT_NEWID = base.Columns["ACCOUNT_NEWID"];
                this.columnACCOUNT_OLDID = base.Columns["ACCOUNT_OLDID"];
                this.columnBRANCH_ID = base.Columns["BRANCH_ID"];
                this.columnDESC_CR = base.Columns["DESC_CR"];
                this.columnDESC_DR = base.Columns["DESC_DR"];
                this.columnACCOUNT_ACTIVITY = base.Columns["ACCOUNT_ACTIVITY"];
                this.columnACTIVE_STATUS = base.Columns["ACTIVE_STATUS"];
                this.columnON_REPORT = base.Columns["ON_REPORT"];
                this.columnINTCR_FLAG = base.Columns["INTCR_FLAG"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnCOOP_ID = new global::System.Data.DataColumn("COOP_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOOP_ID);
                this.columnACCOUNT_ID = new global::System.Data.DataColumn("ACCOUNT_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACCOUNT_ID);
                this.columnSECTION_ID = new global::System.Data.DataColumn("SECTION_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSECTION_ID);
                this.columnACCOUNT_NAME = new global::System.Data.DataColumn("ACCOUNT_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACCOUNT_NAME);
                this.columnACCOUNT_TYPE_ID = new global::System.Data.DataColumn("ACCOUNT_TYPE_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACCOUNT_TYPE_ID);
                this.columnACCOUNT_GROUP_ID = new global::System.Data.DataColumn("ACCOUNT_GROUP_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACCOUNT_GROUP_ID);
                this.columnACCOUNT_LEVEL = new global::System.Data.DataColumn("ACCOUNT_LEVEL", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACCOUNT_LEVEL);
                this.columnBALANCE_BEGIN = new global::System.Data.DataColumn("BALANCE_BEGIN", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBALANCE_BEGIN);
                this.columnACCOUNT_NATURE = new global::System.Data.DataColumn("ACCOUNT_NATURE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACCOUNT_NATURE);
                this.columnACCOUNT_CONTROL_ID = new global::System.Data.DataColumn("ACCOUNT_CONTROL_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACCOUNT_CONTROL_ID);
                this.columnACCOUNT_CLOSE_ID = new global::System.Data.DataColumn("ACCOUNT_CLOSE_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACCOUNT_CLOSE_ID);
                this.columnACCOUNT_SORT = new global::System.Data.DataColumn("ACCOUNT_SORT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACCOUNT_SORT);
                this.columnSUM_CRAMT_YEAR = new global::System.Data.DataColumn("SUM_CRAMT_YEAR", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSUM_CRAMT_YEAR);
                this.columnSUM_DRAMT_YEAR = new global::System.Data.DataColumn("SUM_DRAMT_YEAR", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSUM_DRAMT_YEAR);
                this.columnACC_ASTIMATE_DC = new global::System.Data.DataColumn("ACC_ASTIMATE_DC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACC_ASTIMATE_DC);
                this.columnACCOUNT_REV_GROUP = new global::System.Data.DataColumn("ACCOUNT_REV_GROUP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACCOUNT_REV_GROUP);
                this.columnACCOUNT_CONTROL_2LEVEL = new global::System.Data.DataColumn("ACCOUNT_CONTROL_2LEVEL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACCOUNT_CONTROL_2LEVEL);
                this.columnACCOUNT_CONTROL_3LEVEL = new global::System.Data.DataColumn("ACCOUNT_CONTROL_3LEVEL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACCOUNT_CONTROL_3LEVEL);
                this.columnACCOUNT_CONTROL_4LEVEL = new global::System.Data.DataColumn("ACCOUNT_CONTROL_4LEVEL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACCOUNT_CONTROL_4LEVEL);
                this.columnACCOUNT_NEWID = new global::System.Data.DataColumn("ACCOUNT_NEWID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACCOUNT_NEWID);
                this.columnACCOUNT_OLDID = new global::System.Data.DataColumn("ACCOUNT_OLDID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACCOUNT_OLDID);
                this.columnBRANCH_ID = new global::System.Data.DataColumn("BRANCH_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBRANCH_ID);
                this.columnDESC_CR = new global::System.Data.DataColumn("DESC_CR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESC_CR);
                this.columnDESC_DR = new global::System.Data.DataColumn("DESC_DR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESC_DR);
                this.columnACCOUNT_ACTIVITY = new global::System.Data.DataColumn("ACCOUNT_ACTIVITY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACCOUNT_ACTIVITY);
                this.columnACTIVE_STATUS = new global::System.Data.DataColumn("ACTIVE_STATUS", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACTIVE_STATUS);
                this.columnON_REPORT = new global::System.Data.DataColumn("ON_REPORT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnON_REPORT);
                this.columnINTCR_FLAG = new global::System.Data.DataColumn("INTCR_FLAG", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINTCR_FLAG);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCOOP_ID,
                                this.columnACCOUNT_ID}, true));
                this.columnCOOP_ID.AllowDBNull = false;
                this.columnCOOP_ID.MaxLength = 6;
                this.columnACCOUNT_ID.AllowDBNull = false;
                this.columnACCOUNT_ID.MaxLength = 8;
                this.columnSECTION_ID.MaxLength = 8;
                this.columnACCOUNT_NAME.MaxLength = 100;
                this.columnACCOUNT_TYPE_ID.MaxLength = 2;
                this.columnACCOUNT_GROUP_ID.MaxLength = 2;
                this.columnACCOUNT_NATURE.MaxLength = 2;
                this.columnACCOUNT_CONTROL_ID.MaxLength = 8;
                this.columnACCOUNT_CLOSE_ID.MaxLength = 8;
                this.columnACC_ASTIMATE_DC.MaxLength = 2;
                this.columnACCOUNT_REV_GROUP.MaxLength = 2;
                this.columnACCOUNT_CONTROL_2LEVEL.MaxLength = 8;
                this.columnACCOUNT_CONTROL_3LEVEL.MaxLength = 8;
                this.columnACCOUNT_CONTROL_4LEVEL.MaxLength = 8;
                this.columnACCOUNT_NEWID.MaxLength = 8;
                this.columnACCOUNT_OLDID.MaxLength = 8;
                this.columnBRANCH_ID.MaxLength = 3;
                this.columnDESC_CR.MaxLength = 1;
                this.columnDESC_DR.MaxLength = 1;
                this.columnACCOUNT_ACTIVITY.MaxLength = 2;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ACCMASTERRow NewACCMASTERRow() {
                return ((ACCMASTERRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ACCMASTERRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ACCMASTERRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ACCMASTERRowChanged != null)) {
                    this.ACCMASTERRowChanged(this, new ACCMASTERRowChangeEvent(((ACCMASTERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ACCMASTERRowChanging != null)) {
                    this.ACCMASTERRowChanging(this, new ACCMASTERRowChangeEvent(((ACCMASTERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ACCMASTERRowDeleted != null)) {
                    this.ACCMASTERRowDeleted(this, new ACCMASTERRowChangeEvent(((ACCMASTERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ACCMASTERRowDeleting != null)) {
                    this.ACCMASTERRowDeleting(this, new ACCMASTERRowChangeEvent(((ACCMASTERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveACCMASTERRow(ACCMASTERRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ACCMASTERDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ACCMASTERRow : global::System.Data.DataRow {
            
            private ACCMASTERDataTable tableACCMASTER;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ACCMASTERRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableACCMASTER = ((ACCMASTERDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string COOP_ID {
                get {
                    return ((string)(this[this.tableACCMASTER.COOP_IDColumn]));
                }
                set {
                    this[this.tableACCMASTER.COOP_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ACCOUNT_ID {
                get {
                    return ((string)(this[this.tableACCMASTER.ACCOUNT_IDColumn]));
                }
                set {
                    this[this.tableACCMASTER.ACCOUNT_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SECTION_ID {
                get {
                    try {
                        return ((string)(this[this.tableACCMASTER.SECTION_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SECTION_ID\' in table \'ACCMASTER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableACCMASTER.SECTION_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ACCOUNT_NAME {
                get {
                    try {
                        return ((string)(this[this.tableACCMASTER.ACCOUNT_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ACCOUNT_NAME\' in table \'ACCMASTER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableACCMASTER.ACCOUNT_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ACCOUNT_TYPE_ID {
                get {
                    try {
                        return ((string)(this[this.tableACCMASTER.ACCOUNT_TYPE_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ACCOUNT_TYPE_ID\' in table \'ACCMASTER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableACCMASTER.ACCOUNT_TYPE_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ACCOUNT_GROUP_ID {
                get {
                    try {
                        return ((string)(this[this.tableACCMASTER.ACCOUNT_GROUP_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ACCOUNT_GROUP_ID\' in table \'ACCMASTER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableACCMASTER.ACCOUNT_GROUP_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ACCOUNT_LEVEL {
                get {
                    try {
                        return ((decimal)(this[this.tableACCMASTER.ACCOUNT_LEVELColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ACCOUNT_LEVEL\' in table \'ACCMASTER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableACCMASTER.ACCOUNT_LEVELColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal BALANCE_BEGIN {
                get {
                    try {
                        return ((decimal)(this[this.tableACCMASTER.BALANCE_BEGINColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BALANCE_BEGIN\' in table \'ACCMASTER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableACCMASTER.BALANCE_BEGINColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ACCOUNT_NATURE {
                get {
                    try {
                        return ((string)(this[this.tableACCMASTER.ACCOUNT_NATUREColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ACCOUNT_NATURE\' in table \'ACCMASTER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableACCMASTER.ACCOUNT_NATUREColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ACCOUNT_CONTROL_ID {
                get {
                    try {
                        return ((string)(this[this.tableACCMASTER.ACCOUNT_CONTROL_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ACCOUNT_CONTROL_ID\' in table \'ACCMASTER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableACCMASTER.ACCOUNT_CONTROL_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ACCOUNT_CLOSE_ID {
                get {
                    try {
                        return ((string)(this[this.tableACCMASTER.ACCOUNT_CLOSE_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ACCOUNT_CLOSE_ID\' in table \'ACCMASTER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableACCMASTER.ACCOUNT_CLOSE_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ACCOUNT_SORT {
                get {
                    try {
                        return ((decimal)(this[this.tableACCMASTER.ACCOUNT_SORTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ACCOUNT_SORT\' in table \'ACCMASTER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableACCMASTER.ACCOUNT_SORTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal SUM_CRAMT_YEAR {
                get {
                    try {
                        return ((decimal)(this[this.tableACCMASTER.SUM_CRAMT_YEARColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SUM_CRAMT_YEAR\' in table \'ACCMASTER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableACCMASTER.SUM_CRAMT_YEARColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal SUM_DRAMT_YEAR {
                get {
                    try {
                        return ((decimal)(this[this.tableACCMASTER.SUM_DRAMT_YEARColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SUM_DRAMT_YEAR\' in table \'ACCMASTER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableACCMASTER.SUM_DRAMT_YEARColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ACC_ASTIMATE_DC {
                get {
                    try {
                        return ((string)(this[this.tableACCMASTER.ACC_ASTIMATE_DCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ACC_ASTIMATE_DC\' in table \'ACCMASTER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableACCMASTER.ACC_ASTIMATE_DCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ACCOUNT_REV_GROUP {
                get {
                    try {
                        return ((string)(this[this.tableACCMASTER.ACCOUNT_REV_GROUPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ACCOUNT_REV_GROUP\' in table \'ACCMASTER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableACCMASTER.ACCOUNT_REV_GROUPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ACCOUNT_CONTROL_2LEVEL {
                get {
                    try {
                        return ((string)(this[this.tableACCMASTER.ACCOUNT_CONTROL_2LEVELColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ACCOUNT_CONTROL_2LEVEL\' in table \'ACCMASTER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableACCMASTER.ACCOUNT_CONTROL_2LEVELColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ACCOUNT_CONTROL_3LEVEL {
                get {
                    try {
                        return ((string)(this[this.tableACCMASTER.ACCOUNT_CONTROL_3LEVELColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ACCOUNT_CONTROL_3LEVEL\' in table \'ACCMASTER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableACCMASTER.ACCOUNT_CONTROL_3LEVELColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ACCOUNT_CONTROL_4LEVEL {
                get {
                    try {
                        return ((string)(this[this.tableACCMASTER.ACCOUNT_CONTROL_4LEVELColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ACCOUNT_CONTROL_4LEVEL\' in table \'ACCMASTER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableACCMASTER.ACCOUNT_CONTROL_4LEVELColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ACCOUNT_NEWID {
                get {
                    try {
                        return ((string)(this[this.tableACCMASTER.ACCOUNT_NEWIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ACCOUNT_NEWID\' in table \'ACCMASTER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableACCMASTER.ACCOUNT_NEWIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ACCOUNT_OLDID {
                get {
                    try {
                        return ((string)(this[this.tableACCMASTER.ACCOUNT_OLDIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ACCOUNT_OLDID\' in table \'ACCMASTER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableACCMASTER.ACCOUNT_OLDIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BRANCH_ID {
                get {
                    try {
                        return ((string)(this[this.tableACCMASTER.BRANCH_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BRANCH_ID\' in table \'ACCMASTER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableACCMASTER.BRANCH_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DESC_CR {
                get {
                    try {
                        return ((string)(this[this.tableACCMASTER.DESC_CRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DESC_CR\' in table \'ACCMASTER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableACCMASTER.DESC_CRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DESC_DR {
                get {
                    try {
                        return ((string)(this[this.tableACCMASTER.DESC_DRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DESC_DR\' in table \'ACCMASTER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableACCMASTER.DESC_DRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ACCOUNT_ACTIVITY {
                get {
                    try {
                        return ((string)(this[this.tableACCMASTER.ACCOUNT_ACTIVITYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ACCOUNT_ACTIVITY\' in table \'ACCMASTER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableACCMASTER.ACCOUNT_ACTIVITYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ACTIVE_STATUS {
                get {
                    try {
                        return ((decimal)(this[this.tableACCMASTER.ACTIVE_STATUSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ACTIVE_STATUS\' in table \'ACCMASTER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableACCMASTER.ACTIVE_STATUSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ON_REPORT {
                get {
                    try {
                        return ((decimal)(this[this.tableACCMASTER.ON_REPORTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ON_REPORT\' in table \'ACCMASTER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableACCMASTER.ON_REPORTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal INTCR_FLAG {
                get {
                    try {
                        return ((decimal)(this[this.tableACCMASTER.INTCR_FLAGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INTCR_FLAG\' in table \'ACCMASTER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableACCMASTER.INTCR_FLAGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSECTION_IDNull() {
                return this.IsNull(this.tableACCMASTER.SECTION_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSECTION_IDNull() {
                this[this.tableACCMASTER.SECTION_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsACCOUNT_NAMENull() {
                return this.IsNull(this.tableACCMASTER.ACCOUNT_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetACCOUNT_NAMENull() {
                this[this.tableACCMASTER.ACCOUNT_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsACCOUNT_TYPE_IDNull() {
                return this.IsNull(this.tableACCMASTER.ACCOUNT_TYPE_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetACCOUNT_TYPE_IDNull() {
                this[this.tableACCMASTER.ACCOUNT_TYPE_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsACCOUNT_GROUP_IDNull() {
                return this.IsNull(this.tableACCMASTER.ACCOUNT_GROUP_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetACCOUNT_GROUP_IDNull() {
                this[this.tableACCMASTER.ACCOUNT_GROUP_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsACCOUNT_LEVELNull() {
                return this.IsNull(this.tableACCMASTER.ACCOUNT_LEVELColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetACCOUNT_LEVELNull() {
                this[this.tableACCMASTER.ACCOUNT_LEVELColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBALANCE_BEGINNull() {
                return this.IsNull(this.tableACCMASTER.BALANCE_BEGINColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBALANCE_BEGINNull() {
                this[this.tableACCMASTER.BALANCE_BEGINColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsACCOUNT_NATURENull() {
                return this.IsNull(this.tableACCMASTER.ACCOUNT_NATUREColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetACCOUNT_NATURENull() {
                this[this.tableACCMASTER.ACCOUNT_NATUREColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsACCOUNT_CONTROL_IDNull() {
                return this.IsNull(this.tableACCMASTER.ACCOUNT_CONTROL_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetACCOUNT_CONTROL_IDNull() {
                this[this.tableACCMASTER.ACCOUNT_CONTROL_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsACCOUNT_CLOSE_IDNull() {
                return this.IsNull(this.tableACCMASTER.ACCOUNT_CLOSE_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetACCOUNT_CLOSE_IDNull() {
                this[this.tableACCMASTER.ACCOUNT_CLOSE_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsACCOUNT_SORTNull() {
                return this.IsNull(this.tableACCMASTER.ACCOUNT_SORTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetACCOUNT_SORTNull() {
                this[this.tableACCMASTER.ACCOUNT_SORTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSUM_CRAMT_YEARNull() {
                return this.IsNull(this.tableACCMASTER.SUM_CRAMT_YEARColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSUM_CRAMT_YEARNull() {
                this[this.tableACCMASTER.SUM_CRAMT_YEARColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSUM_DRAMT_YEARNull() {
                return this.IsNull(this.tableACCMASTER.SUM_DRAMT_YEARColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSUM_DRAMT_YEARNull() {
                this[this.tableACCMASTER.SUM_DRAMT_YEARColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsACC_ASTIMATE_DCNull() {
                return this.IsNull(this.tableACCMASTER.ACC_ASTIMATE_DCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetACC_ASTIMATE_DCNull() {
                this[this.tableACCMASTER.ACC_ASTIMATE_DCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsACCOUNT_REV_GROUPNull() {
                return this.IsNull(this.tableACCMASTER.ACCOUNT_REV_GROUPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetACCOUNT_REV_GROUPNull() {
                this[this.tableACCMASTER.ACCOUNT_REV_GROUPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsACCOUNT_CONTROL_2LEVELNull() {
                return this.IsNull(this.tableACCMASTER.ACCOUNT_CONTROL_2LEVELColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetACCOUNT_CONTROL_2LEVELNull() {
                this[this.tableACCMASTER.ACCOUNT_CONTROL_2LEVELColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsACCOUNT_CONTROL_3LEVELNull() {
                return this.IsNull(this.tableACCMASTER.ACCOUNT_CONTROL_3LEVELColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetACCOUNT_CONTROL_3LEVELNull() {
                this[this.tableACCMASTER.ACCOUNT_CONTROL_3LEVELColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsACCOUNT_CONTROL_4LEVELNull() {
                return this.IsNull(this.tableACCMASTER.ACCOUNT_CONTROL_4LEVELColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetACCOUNT_CONTROL_4LEVELNull() {
                this[this.tableACCMASTER.ACCOUNT_CONTROL_4LEVELColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsACCOUNT_NEWIDNull() {
                return this.IsNull(this.tableACCMASTER.ACCOUNT_NEWIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetACCOUNT_NEWIDNull() {
                this[this.tableACCMASTER.ACCOUNT_NEWIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsACCOUNT_OLDIDNull() {
                return this.IsNull(this.tableACCMASTER.ACCOUNT_OLDIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetACCOUNT_OLDIDNull() {
                this[this.tableACCMASTER.ACCOUNT_OLDIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBRANCH_IDNull() {
                return this.IsNull(this.tableACCMASTER.BRANCH_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBRANCH_IDNull() {
                this[this.tableACCMASTER.BRANCH_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDESC_CRNull() {
                return this.IsNull(this.tableACCMASTER.DESC_CRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDESC_CRNull() {
                this[this.tableACCMASTER.DESC_CRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDESC_DRNull() {
                return this.IsNull(this.tableACCMASTER.DESC_DRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDESC_DRNull() {
                this[this.tableACCMASTER.DESC_DRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsACCOUNT_ACTIVITYNull() {
                return this.IsNull(this.tableACCMASTER.ACCOUNT_ACTIVITYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetACCOUNT_ACTIVITYNull() {
                this[this.tableACCMASTER.ACCOUNT_ACTIVITYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsACTIVE_STATUSNull() {
                return this.IsNull(this.tableACCMASTER.ACTIVE_STATUSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetACTIVE_STATUSNull() {
                this[this.tableACCMASTER.ACTIVE_STATUSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsON_REPORTNull() {
                return this.IsNull(this.tableACCMASTER.ON_REPORTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetON_REPORTNull() {
                this[this.tableACCMASTER.ON_REPORTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsINTCR_FLAGNull() {
                return this.IsNull(this.tableACCMASTER.INTCR_FLAGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetINTCR_FLAGNull() {
                this[this.tableACCMASTER.INTCR_FLAGColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ACCMASTERRowChangeEvent : global::System.EventArgs {
            
            private ACCMASTERRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ACCMASTERRowChangeEvent(ACCMASTERRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ACCMASTERRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace Saving.Applications.account.w_acc_ucf_accmaster_ctrl.DataSet1TableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ACCMASTERTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OracleClient.OracleDataAdapter _adapter;
        
        private global::System.Data.OracleClient.OracleConnection _connection;
        
        private global::System.Data.OracleClient.OracleTransaction _transaction;
        
        private global::System.Data.OracleClient.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ACCMASTERTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.OracleClient.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.OracleClient.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OracleClient.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.OracleClient.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.OracleClient.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OracleClient.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ACCMASTER";
            tableMapping.ColumnMappings.Add("COOP_ID", "COOP_ID");
            tableMapping.ColumnMappings.Add("ACCOUNT_ID", "ACCOUNT_ID");
            tableMapping.ColumnMappings.Add("SECTION_ID", "SECTION_ID");
            tableMapping.ColumnMappings.Add("ACCOUNT_NAME", "ACCOUNT_NAME");
            tableMapping.ColumnMappings.Add("ACCOUNT_TYPE_ID", "ACCOUNT_TYPE_ID");
            tableMapping.ColumnMappings.Add("ACCOUNT_GROUP_ID", "ACCOUNT_GROUP_ID");
            tableMapping.ColumnMappings.Add("ACCOUNT_LEVEL", "ACCOUNT_LEVEL");
            tableMapping.ColumnMappings.Add("BALANCE_BEGIN", "BALANCE_BEGIN");
            tableMapping.ColumnMappings.Add("ACCOUNT_NATURE", "ACCOUNT_NATURE");
            tableMapping.ColumnMappings.Add("ACCOUNT_CONTROL_ID", "ACCOUNT_CONTROL_ID");
            tableMapping.ColumnMappings.Add("ACCOUNT_CLOSE_ID", "ACCOUNT_CLOSE_ID");
            tableMapping.ColumnMappings.Add("ACCOUNT_SORT", "ACCOUNT_SORT");
            tableMapping.ColumnMappings.Add("SUM_CRAMT_YEAR", "SUM_CRAMT_YEAR");
            tableMapping.ColumnMappings.Add("SUM_DRAMT_YEAR", "SUM_DRAMT_YEAR");
            tableMapping.ColumnMappings.Add("ACC_ASTIMATE_DC", "ACC_ASTIMATE_DC");
            tableMapping.ColumnMappings.Add("ACCOUNT_REV_GROUP", "ACCOUNT_REV_GROUP");
            tableMapping.ColumnMappings.Add("ACCOUNT_CONTROL_2LEVEL", "ACCOUNT_CONTROL_2LEVEL");
            tableMapping.ColumnMappings.Add("ACCOUNT_CONTROL_3LEVEL", "ACCOUNT_CONTROL_3LEVEL");
            tableMapping.ColumnMappings.Add("ACCOUNT_CONTROL_4LEVEL", "ACCOUNT_CONTROL_4LEVEL");
            tableMapping.ColumnMappings.Add("ACCOUNT_NEWID", "ACCOUNT_NEWID");
            tableMapping.ColumnMappings.Add("ACCOUNT_OLDID", "ACCOUNT_OLDID");
            tableMapping.ColumnMappings.Add("BRANCH_ID", "BRANCH_ID");
            tableMapping.ColumnMappings.Add("DESC_CR", "DESC_CR");
            tableMapping.ColumnMappings.Add("DESC_DR", "DESC_DR");
            tableMapping.ColumnMappings.Add("ACCOUNT_ACTIVITY", "ACCOUNT_ACTIVITY");
            tableMapping.ColumnMappings.Add("ACTIVE_STATUS", "ACTIVE_STATUS");
            tableMapping.ColumnMappings.Add("ON_REPORT", "ON_REPORT");
            tableMapping.ColumnMappings.Add("INTCR_FLAG", "INTCR_FLAG");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM \"ACCMASTER\" WHERE ((\"COOP_ID\" = :Original_COOP_ID) AND (\"ACCOUNT_ID\" " +
                "= :Original_ACCOUNT_ID))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_COOP_ID", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "COOP_ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_ACCOUNT_ID", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "ACCOUNT_ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO ""ACCMASTER"" (""COOP_ID"", ""ACCOUNT_ID"", ""SECTION_ID"", ""ACCOUNT_NAME"", ""ACCOUNT_TYPE_ID"", ""ACCOUNT_GROUP_ID"", ""ACCOUNT_LEVEL"", ""BALANCE_BEGIN"", ""ACCOUNT_NATURE"", ""ACCOUNT_CONTROL_ID"", ""ACCOUNT_CLOSE_ID"", ""ACCOUNT_SORT"", ""SUM_CRAMT_YEAR"", ""SUM_DRAMT_YEAR"", ""ACC_ASTIMATE_DC"", ""ACCOUNT_REV_GROUP"", ""ACCOUNT_CONTROL_2LEVEL"", ""ACCOUNT_CONTROL_3LEVEL"", ""ACCOUNT_CONTROL_4LEVEL"", ""ACCOUNT_NEWID"", ""ACCOUNT_OLDID"", ""BRANCH_ID"", ""DESC_CR"", ""DESC_DR"", ""ACCOUNT_ACTIVITY"", ""ACTIVE_STATUS"", ""ON_REPORT"", ""INTCR_FLAG"") VALUES (:COOP_ID, :ACCOUNT_ID, :SECTION_ID, :ACCOUNT_NAME, :ACCOUNT_TYPE_ID, :ACCOUNT_GROUP_ID, :ACCOUNT_LEVEL, :BALANCE_BEGIN, :ACCOUNT_NATURE, :ACCOUNT_CONTROL_ID, :ACCOUNT_CLOSE_ID, :ACCOUNT_SORT, :SUM_CRAMT_YEAR, :SUM_DRAMT_YEAR, :ACC_ASTIMATE_DC, :ACCOUNT_REV_GROUP, :p1, :p4, :p7, :ACCOUNT_NEWID, :ACCOUNT_OLDID, :BRANCH_ID, :DESC_CR, :DESC_DR, :ACCOUNT_ACTIVITY, :ACTIVE_STATUS, :ON_REPORT, :INTCR_FLAG)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("COOP_ID", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "COOP_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ACCOUNT_ID", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "ACCOUNT_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SECTION_ID", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "SECTION_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ACCOUNT_NAME", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "ACCOUNT_NAME", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ACCOUNT_TYPE_ID", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "ACCOUNT_TYPE_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ACCOUNT_GROUP_ID", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "ACCOUNT_GROUP_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ACCOUNT_LEVEL", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ACCOUNT_LEVEL", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("BALANCE_BEGIN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "BALANCE_BEGIN", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ACCOUNT_NATURE", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "ACCOUNT_NATURE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ACCOUNT_CONTROL_ID", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "ACCOUNT_CONTROL_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ACCOUNT_CLOSE_ID", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "ACCOUNT_CLOSE_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ACCOUNT_SORT", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ACCOUNT_SORT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SUM_CRAMT_YEAR", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "SUM_CRAMT_YEAR", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SUM_DRAMT_YEAR", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "SUM_DRAMT_YEAR", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ACC_ASTIMATE_DC", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "ACC_ASTIMATE_DC", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ACCOUNT_REV_GROUP", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "ACCOUNT_REV_GROUP", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("p1", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "ACCOUNT_CONTROL_2LEVEL", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("p4", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "ACCOUNT_CONTROL_3LEVEL", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("p7", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "ACCOUNT_CONTROL_4LEVEL", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ACCOUNT_NEWID", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "ACCOUNT_NEWID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ACCOUNT_OLDID", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "ACCOUNT_OLDID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("BRANCH_ID", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "BRANCH_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("DESC_CR", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "DESC_CR", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("DESC_DR", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "DESC_DR", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ACCOUNT_ACTIVITY", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "ACCOUNT_ACTIVITY", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ACTIVE_STATUS", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ACTIVE_STATUS", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ON_REPORT", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ON_REPORT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("INTCR_FLAG", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "INTCR_FLAG", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""ACCMASTER"" SET ""COOP_ID"" = :COOP_ID, ""ACCOUNT_ID"" = :ACCOUNT_ID, ""SECTION_ID"" = :SECTION_ID, ""ACCOUNT_NAME"" = :ACCOUNT_NAME, ""ACCOUNT_TYPE_ID"" = :ACCOUNT_TYPE_ID, ""ACCOUNT_GROUP_ID"" = :ACCOUNT_GROUP_ID, ""ACCOUNT_LEVEL"" = :ACCOUNT_LEVEL, ""BALANCE_BEGIN"" = :BALANCE_BEGIN, ""ACCOUNT_NATURE"" = :ACCOUNT_NATURE, ""ACCOUNT_CONTROL_ID"" = :ACCOUNT_CONTROL_ID, ""ACCOUNT_CLOSE_ID"" = :ACCOUNT_CLOSE_ID, ""ACCOUNT_SORT"" = :ACCOUNT_SORT, ""SUM_CRAMT_YEAR"" = :SUM_CRAMT_YEAR, ""SUM_DRAMT_YEAR"" = :SUM_DRAMT_YEAR, ""ACC_ASTIMATE_DC"" = :ACC_ASTIMATE_DC, ""ACCOUNT_REV_GROUP"" = :ACCOUNT_REV_GROUP, ""ACCOUNT_CONTROL_2LEVEL"" = :p1, ""ACCOUNT_CONTROL_3LEVEL"" = :p4, ""ACCOUNT_CONTROL_4LEVEL"" = :p7, ""ACCOUNT_NEWID"" = :ACCOUNT_NEWID, ""ACCOUNT_OLDID"" = :ACCOUNT_OLDID, ""BRANCH_ID"" = :BRANCH_ID, ""DESC_CR"" = :DESC_CR, ""DESC_DR"" = :DESC_DR, ""ACCOUNT_ACTIVITY"" = :ACCOUNT_ACTIVITY, ""ACTIVE_STATUS"" = :ACTIVE_STATUS, ""ON_REPORT"" = :ON_REPORT, ""INTCR_FLAG"" = :INTCR_FLAG WHERE ((""COOP_ID"" = :Original_COOP_ID) AND (""ACCOUNT_ID"" = :Original_ACCOUNT_ID))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("COOP_ID", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "COOP_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ACCOUNT_ID", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "ACCOUNT_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SECTION_ID", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "SECTION_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ACCOUNT_NAME", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "ACCOUNT_NAME", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ACCOUNT_TYPE_ID", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "ACCOUNT_TYPE_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ACCOUNT_GROUP_ID", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "ACCOUNT_GROUP_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ACCOUNT_LEVEL", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ACCOUNT_LEVEL", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("BALANCE_BEGIN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "BALANCE_BEGIN", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ACCOUNT_NATURE", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "ACCOUNT_NATURE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ACCOUNT_CONTROL_ID", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "ACCOUNT_CONTROL_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ACCOUNT_CLOSE_ID", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "ACCOUNT_CLOSE_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ACCOUNT_SORT", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ACCOUNT_SORT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SUM_CRAMT_YEAR", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "SUM_CRAMT_YEAR", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SUM_DRAMT_YEAR", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "SUM_DRAMT_YEAR", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ACC_ASTIMATE_DC", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "ACC_ASTIMATE_DC", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ACCOUNT_REV_GROUP", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "ACCOUNT_REV_GROUP", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("p1", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "ACCOUNT_CONTROL_2LEVEL", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("p4", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "ACCOUNT_CONTROL_3LEVEL", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("p7", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "ACCOUNT_CONTROL_4LEVEL", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ACCOUNT_NEWID", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "ACCOUNT_NEWID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ACCOUNT_OLDID", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "ACCOUNT_OLDID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("BRANCH_ID", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "BRANCH_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("DESC_CR", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "DESC_CR", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("DESC_DR", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "DESC_DR", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ACCOUNT_ACTIVITY", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "ACCOUNT_ACTIVITY", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ACTIVE_STATUS", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ACTIVE_STATUS", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ON_REPORT", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ON_REPORT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("INTCR_FLAG", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "INTCR_FLAG", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_COOP_ID", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "COOP_ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_ACCOUNT_ID", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "ACCOUNT_ID", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.OracleClient.OracleConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["ConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OracleClient.OracleCommand[1];
            this._commandCollection[0] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "select * from accmaster";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.ACCMASTERDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.ACCMASTERDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.ACCMASTERDataTable dataTable = new DataSet1.ACCMASTERDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.ACCMASTERDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "ACCMASTER");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_COOP_ID, string Original_ACCOUNT_ID) {
            if ((Original_COOP_ID == null)) {
                throw new global::System.ArgumentNullException("Original_COOP_ID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_COOP_ID));
            }
            if ((Original_ACCOUNT_ID == null)) {
                throw new global::System.ArgumentNullException("Original_ACCOUNT_ID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_ACCOUNT_ID));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string COOP_ID, 
                    string ACCOUNT_ID, 
                    string SECTION_ID, 
                    string ACCOUNT_NAME, 
                    string ACCOUNT_TYPE_ID, 
                    string ACCOUNT_GROUP_ID, 
                    global::System.Nullable<decimal> ACCOUNT_LEVEL, 
                    global::System.Nullable<decimal> BALANCE_BEGIN, 
                    string ACCOUNT_NATURE, 
                    string ACCOUNT_CONTROL_ID, 
                    string ACCOUNT_CLOSE_ID, 
                    global::System.Nullable<decimal> ACCOUNT_SORT, 
                    global::System.Nullable<decimal> SUM_CRAMT_YEAR, 
                    global::System.Nullable<decimal> SUM_DRAMT_YEAR, 
                    string ACC_ASTIMATE_DC, 
                    string ACCOUNT_REV_GROUP, 
                    string p1, 
                    string p4, 
                    string p7, 
                    string ACCOUNT_NEWID, 
                    string ACCOUNT_OLDID, 
                    string BRANCH_ID, 
                    string DESC_CR, 
                    string DESC_DR, 
                    string ACCOUNT_ACTIVITY, 
                    global::System.Nullable<decimal> ACTIVE_STATUS, 
                    global::System.Nullable<decimal> ON_REPORT, 
                    global::System.Nullable<decimal> INTCR_FLAG) {
            if ((COOP_ID == null)) {
                throw new global::System.ArgumentNullException("COOP_ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(COOP_ID));
            }
            if ((ACCOUNT_ID == null)) {
                throw new global::System.ArgumentNullException("ACCOUNT_ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(ACCOUNT_ID));
            }
            if ((SECTION_ID == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(SECTION_ID));
            }
            if ((ACCOUNT_NAME == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(ACCOUNT_NAME));
            }
            if ((ACCOUNT_TYPE_ID == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(ACCOUNT_TYPE_ID));
            }
            if ((ACCOUNT_GROUP_ID == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(ACCOUNT_GROUP_ID));
            }
            if ((ACCOUNT_LEVEL.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(ACCOUNT_LEVEL.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((BALANCE_BEGIN.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((decimal)(BALANCE_BEGIN.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((ACCOUNT_NATURE == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(ACCOUNT_NATURE));
            }
            if ((ACCOUNT_CONTROL_ID == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(ACCOUNT_CONTROL_ID));
            }
            if ((ACCOUNT_CLOSE_ID == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(ACCOUNT_CLOSE_ID));
            }
            if ((ACCOUNT_SORT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((decimal)(ACCOUNT_SORT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((SUM_CRAMT_YEAR.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((decimal)(SUM_CRAMT_YEAR.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((SUM_DRAMT_YEAR.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((decimal)(SUM_DRAMT_YEAR.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((ACC_ASTIMATE_DC == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(ACC_ASTIMATE_DC));
            }
            if ((ACCOUNT_REV_GROUP == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(ACCOUNT_REV_GROUP));
            }
            if ((p1 == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(p1));
            }
            if ((p4 == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(p4));
            }
            if ((p7 == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(p7));
            }
            if ((ACCOUNT_NEWID == null)) {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(ACCOUNT_NEWID));
            }
            if ((ACCOUNT_OLDID == null)) {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(ACCOUNT_OLDID));
            }
            if ((BRANCH_ID == null)) {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(BRANCH_ID));
            }
            if ((DESC_CR == null)) {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(DESC_CR));
            }
            if ((DESC_DR == null)) {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(DESC_DR));
            }
            if ((ACCOUNT_ACTIVITY == null)) {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(ACCOUNT_ACTIVITY));
            }
            if ((ACTIVE_STATUS.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[25].Value = ((decimal)(ACTIVE_STATUS.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((ON_REPORT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[26].Value = ((decimal)(ON_REPORT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((INTCR_FLAG.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[27].Value = ((decimal)(INTCR_FLAG.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string COOP_ID, 
                    string ACCOUNT_ID, 
                    string SECTION_ID, 
                    string ACCOUNT_NAME, 
                    string ACCOUNT_TYPE_ID, 
                    string ACCOUNT_GROUP_ID, 
                    global::System.Nullable<decimal> ACCOUNT_LEVEL, 
                    global::System.Nullable<decimal> BALANCE_BEGIN, 
                    string ACCOUNT_NATURE, 
                    string ACCOUNT_CONTROL_ID, 
                    string ACCOUNT_CLOSE_ID, 
                    global::System.Nullable<decimal> ACCOUNT_SORT, 
                    global::System.Nullable<decimal> SUM_CRAMT_YEAR, 
                    global::System.Nullable<decimal> SUM_DRAMT_YEAR, 
                    string ACC_ASTIMATE_DC, 
                    string ACCOUNT_REV_GROUP, 
                    string p1, 
                    string p4, 
                    string p7, 
                    string ACCOUNT_NEWID, 
                    string ACCOUNT_OLDID, 
                    string BRANCH_ID, 
                    string DESC_CR, 
                    string DESC_DR, 
                    string ACCOUNT_ACTIVITY, 
                    global::System.Nullable<decimal> ACTIVE_STATUS, 
                    global::System.Nullable<decimal> ON_REPORT, 
                    global::System.Nullable<decimal> INTCR_FLAG, 
                    string Original_COOP_ID, 
                    string Original_ACCOUNT_ID) {
            if ((COOP_ID == null)) {
                throw new global::System.ArgumentNullException("COOP_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(COOP_ID));
            }
            if ((ACCOUNT_ID == null)) {
                throw new global::System.ArgumentNullException("ACCOUNT_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(ACCOUNT_ID));
            }
            if ((SECTION_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(SECTION_ID));
            }
            if ((ACCOUNT_NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(ACCOUNT_NAME));
            }
            if ((ACCOUNT_TYPE_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(ACCOUNT_TYPE_ID));
            }
            if ((ACCOUNT_GROUP_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(ACCOUNT_GROUP_ID));
            }
            if ((ACCOUNT_LEVEL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(ACCOUNT_LEVEL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((BALANCE_BEGIN.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(BALANCE_BEGIN.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((ACCOUNT_NATURE == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(ACCOUNT_NATURE));
            }
            if ((ACCOUNT_CONTROL_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(ACCOUNT_CONTROL_ID));
            }
            if ((ACCOUNT_CLOSE_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(ACCOUNT_CLOSE_ID));
            }
            if ((ACCOUNT_SORT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((decimal)(ACCOUNT_SORT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((SUM_CRAMT_YEAR.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((decimal)(SUM_CRAMT_YEAR.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((SUM_DRAMT_YEAR.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((decimal)(SUM_DRAMT_YEAR.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((ACC_ASTIMATE_DC == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(ACC_ASTIMATE_DC));
            }
            if ((ACCOUNT_REV_GROUP == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(ACCOUNT_REV_GROUP));
            }
            if ((p1 == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(p1));
            }
            if ((p4 == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(p4));
            }
            if ((p7 == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(p7));
            }
            if ((ACCOUNT_NEWID == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(ACCOUNT_NEWID));
            }
            if ((ACCOUNT_OLDID == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(ACCOUNT_OLDID));
            }
            if ((BRANCH_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(BRANCH_ID));
            }
            if ((DESC_CR == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(DESC_CR));
            }
            if ((DESC_DR == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(DESC_DR));
            }
            if ((ACCOUNT_ACTIVITY == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(ACCOUNT_ACTIVITY));
            }
            if ((ACTIVE_STATUS.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((decimal)(ACTIVE_STATUS.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((ON_REPORT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((decimal)(ON_REPORT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((INTCR_FLAG.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((decimal)(INTCR_FLAG.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((Original_COOP_ID == null)) {
                throw new global::System.ArgumentNullException("Original_COOP_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Original_COOP_ID));
            }
            if ((Original_ACCOUNT_ID == null)) {
                throw new global::System.ArgumentNullException("Original_ACCOUNT_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(Original_ACCOUNT_ID));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string SECTION_ID, 
                    string ACCOUNT_NAME, 
                    string ACCOUNT_TYPE_ID, 
                    string ACCOUNT_GROUP_ID, 
                    global::System.Nullable<decimal> ACCOUNT_LEVEL, 
                    global::System.Nullable<decimal> BALANCE_BEGIN, 
                    string ACCOUNT_NATURE, 
                    string ACCOUNT_CONTROL_ID, 
                    string ACCOUNT_CLOSE_ID, 
                    global::System.Nullable<decimal> ACCOUNT_SORT, 
                    global::System.Nullable<decimal> SUM_CRAMT_YEAR, 
                    global::System.Nullable<decimal> SUM_DRAMT_YEAR, 
                    string ACC_ASTIMATE_DC, 
                    string ACCOUNT_REV_GROUP, 
                    string p1, 
                    string p4, 
                    string p7, 
                    string ACCOUNT_NEWID, 
                    string ACCOUNT_OLDID, 
                    string BRANCH_ID, 
                    string DESC_CR, 
                    string DESC_DR, 
                    string ACCOUNT_ACTIVITY, 
                    global::System.Nullable<decimal> ACTIVE_STATUS, 
                    global::System.Nullable<decimal> ON_REPORT, 
                    global::System.Nullable<decimal> INTCR_FLAG, 
                    string Original_COOP_ID, 
                    string Original_ACCOUNT_ID) {
            return this.Update(Original_COOP_ID, Original_ACCOUNT_ID, SECTION_ID, ACCOUNT_NAME, ACCOUNT_TYPE_ID, ACCOUNT_GROUP_ID, ACCOUNT_LEVEL, BALANCE_BEGIN, ACCOUNT_NATURE, ACCOUNT_CONTROL_ID, ACCOUNT_CLOSE_ID, ACCOUNT_SORT, SUM_CRAMT_YEAR, SUM_DRAMT_YEAR, ACC_ASTIMATE_DC, ACCOUNT_REV_GROUP, p1, p4, p7, ACCOUNT_NEWID, ACCOUNT_OLDID, BRANCH_ID, DESC_CR, DESC_DR, ACCOUNT_ACTIVITY, ACTIVE_STATUS, ON_REPORT, INTCR_FLAG, Original_COOP_ID, Original_ACCOUNT_ID);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private ACCMASTERTableAdapter _aCCMASTERTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ACCMASTERTableAdapter ACCMASTERTableAdapter {
            get {
                return this._aCCMASTERTableAdapter;
            }
            set {
                this._aCCMASTERTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._aCCMASTERTableAdapter != null) 
                            && (this._aCCMASTERTableAdapter.Connection != null))) {
                    return this._aCCMASTERTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._aCCMASTERTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(DataSet1 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._aCCMASTERTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ACCMASTER.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._aCCMASTERTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(DataSet1 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._aCCMASTERTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ACCMASTER.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._aCCMASTERTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(DataSet1 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._aCCMASTERTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ACCMASTER.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._aCCMASTERTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(DataSet1 dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._aCCMASTERTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._aCCMASTERTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._aCCMASTERTableAdapter != null)) {
                    revertConnections.Add(this._aCCMASTERTableAdapter, this._aCCMASTERTableAdapter.Connection);
                    this._aCCMASTERTableAdapter.Connection = ((global::System.Data.OracleClient.OracleConnection)(workConnection));
                    this._aCCMASTERTableAdapter.Transaction = ((global::System.Data.OracleClient.OracleTransaction)(workTransaction));
                    if (this._aCCMASTERTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._aCCMASTERTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._aCCMASTERTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._aCCMASTERTableAdapter != null)) {
                    this._aCCMASTERTableAdapter.Connection = ((global::System.Data.OracleClient.OracleConnection)(revertConnections[this._aCCMASTERTableAdapter]));
                    this._aCCMASTERTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591