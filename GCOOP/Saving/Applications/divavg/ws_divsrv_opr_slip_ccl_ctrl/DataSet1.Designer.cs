//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Saving.Applications.divavg.ws_divsrv_opr_slip_ccl_ctrl {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DataSet1")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DataSet1 : global::System.Data.DataSet {
        
        private DT_MAINDataTable tableDT_MAIN;
        
        private DT_LISTDataTable tableDT_LIST;
        
        private DT_DETAILDataTable tableDT_DETAIL;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DataSet1() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
            this.InitExpressions();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected DataSet1(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.ExcludeSchema)) {
                    this.InitExpressions();
                }
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["DT_MAIN"] != null)) {
                    base.Tables.Add(new DT_MAINDataTable(ds.Tables["DT_MAIN"]));
                }
                if ((ds.Tables["DT_LIST"] != null)) {
                    base.Tables.Add(new DT_LISTDataTable(ds.Tables["DT_LIST"]));
                }
                if ((ds.Tables["DT_DETAIL"] != null)) {
                    base.Tables.Add(new DT_DETAILDataTable(ds.Tables["DT_DETAIL"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                this.InitExpressions();
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DT_MAINDataTable DT_MAIN {
            get {
                return this.tableDT_MAIN;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DT_LISTDataTable DT_LIST {
            get {
                return this.tableDT_LIST;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DT_DETAILDataTable DT_DETAIL {
            get {
                return this.tableDT_DETAIL;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            DataSet1 cln = ((DataSet1)(base.Clone()));
            cln.InitVars();
            cln.InitExpressions();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["DT_MAIN"] != null)) {
                    base.Tables.Add(new DT_MAINDataTable(ds.Tables["DT_MAIN"]));
                }
                if ((ds.Tables["DT_LIST"] != null)) {
                    base.Tables.Add(new DT_LISTDataTable(ds.Tables["DT_LIST"]));
                }
                if ((ds.Tables["DT_DETAIL"] != null)) {
                    base.Tables.Add(new DT_DETAILDataTable(ds.Tables["DT_DETAIL"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableDT_MAIN = ((DT_MAINDataTable)(base.Tables["DT_MAIN"]));
            if ((initTable == true)) {
                if ((this.tableDT_MAIN != null)) {
                    this.tableDT_MAIN.InitVars();
                }
            }
            this.tableDT_LIST = ((DT_LISTDataTable)(base.Tables["DT_LIST"]));
            if ((initTable == true)) {
                if ((this.tableDT_LIST != null)) {
                    this.tableDT_LIST.InitVars();
                }
            }
            this.tableDT_DETAIL = ((DT_DETAILDataTable)(base.Tables["DT_DETAIL"]));
            if ((initTable == true)) {
                if ((this.tableDT_DETAIL != null)) {
                    this.tableDT_DETAIL.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "DataSet1";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DataSet1.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableDT_MAIN = new DT_MAINDataTable(false);
            base.Tables.Add(this.tableDT_MAIN);
            this.tableDT_LIST = new DT_LISTDataTable();
            base.Tables.Add(this.tableDT_LIST);
            this.tableDT_DETAIL = new DT_DETAILDataTable();
            base.Tables.Add(this.tableDT_DETAIL);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeDT_MAIN() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeDT_LIST() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeDT_DETAIL() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DataSet1 ds = new DataSet1();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitExpressions() {
            this.DT_MAIN.cp_nameColumn.Expression = "prename_desc+memb_name+\'  \'+memb_surname";
            this.DT_MAIN.cp_name_engColumn.Expression = "memb_ename+\'  \'+memb_esurname";
            this.DT_MAIN.cp_membgroupColumn.Expression = "membgroup_code+\' : \'+membgroup_desc";
            this.DT_MAIN.cp_membtypeColumn.Expression = "membtype_code+\' : \'+membtype_desc";
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void DT_MAINRowChangeEventHandler(object sender, DT_MAINRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void DT_LISTRowChangeEventHandler(object sender, DT_LISTRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void DT_DETAILRowChangeEventHandler(object sender, DT_DETAILRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DT_MAINDataTable : global::System.Data.TypedTableBase<DT_MAINRow> {
            
            private global::System.Data.DataColumn columnMEMBGROUP_CODE;
            
            private global::System.Data.DataColumn columnMEMBGROUP_DESC;
            
            private global::System.Data.DataColumn columnPRENAME_DESC;
            
            private global::System.Data.DataColumn columnMEMB_NAME;
            
            private global::System.Data.DataColumn columnMEMBER_STATUS;
            
            private global::System.Data.DataColumn columnMEMBER_DATE;
            
            private global::System.Data.DataColumn columnRESIGN_STATUS;
            
            private global::System.Data.DataColumn columnRESIGN_DATE;
            
            private global::System.Data.DataColumn columnMEMBTYPE_CODE;
            
            private global::System.Data.DataColumn columnMEMBTYPE_DESC;
            
            private global::System.Data.DataColumn columnCOOP_ID;
            
            private global::System.Data.DataColumn columnMEMBER_NO;
            
            private global::System.Data.DataColumn columnOPERATE_DATE;
            
            private global::System.Data.DataColumn columnSLIP_DATE;
            
            private global::System.Data.DataColumn columnDIV_YEAR;
            
            private global::System.Data.DataColumn columnENTRY_ID;
            
            private global::System.Data.DataColumn columnMEMB_SURNAME;
            
            private global::System.Data.DataColumn columnMEMB_ENAME;
            
            private global::System.Data.DataColumn columnMEMB_ESURNAME;
            
            private global::System.Data.DataColumn columncp_name;
            
            private global::System.Data.DataColumn columncp_name_eng;
            
            private global::System.Data.DataColumn columncp_membgroup;
            
            private global::System.Data.DataColumn columncp_membtype;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DT_MAINDataTable() : 
                    this(false) {
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DT_MAINDataTable(bool initExpressions) {
                this.TableName = "DT_MAIN";
                this.BeginInit();
                this.InitClass();
                if ((initExpressions == true)) {
                    this.InitExpressions();
                }
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DT_MAINDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected DT_MAINDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MEMBGROUP_CODEColumn {
                get {
                    return this.columnMEMBGROUP_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MEMBGROUP_DESCColumn {
                get {
                    return this.columnMEMBGROUP_DESC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PRENAME_DESCColumn {
                get {
                    return this.columnPRENAME_DESC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MEMB_NAMEColumn {
                get {
                    return this.columnMEMB_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MEMBER_STATUSColumn {
                get {
                    return this.columnMEMBER_STATUS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MEMBER_DATEColumn {
                get {
                    return this.columnMEMBER_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RESIGN_STATUSColumn {
                get {
                    return this.columnRESIGN_STATUS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RESIGN_DATEColumn {
                get {
                    return this.columnRESIGN_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MEMBTYPE_CODEColumn {
                get {
                    return this.columnMEMBTYPE_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MEMBTYPE_DESCColumn {
                get {
                    return this.columnMEMBTYPE_DESC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn COOP_IDColumn {
                get {
                    return this.columnCOOP_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MEMBER_NOColumn {
                get {
                    return this.columnMEMBER_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OPERATE_DATEColumn {
                get {
                    return this.columnOPERATE_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SLIP_DATEColumn {
                get {
                    return this.columnSLIP_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DIV_YEARColumn {
                get {
                    return this.columnDIV_YEAR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ENTRY_IDColumn {
                get {
                    return this.columnENTRY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MEMB_SURNAMEColumn {
                get {
                    return this.columnMEMB_SURNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MEMB_ENAMEColumn {
                get {
                    return this.columnMEMB_ENAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MEMB_ESURNAMEColumn {
                get {
                    return this.columnMEMB_ESURNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cp_nameColumn {
                get {
                    return this.columncp_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cp_name_engColumn {
                get {
                    return this.columncp_name_eng;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cp_membgroupColumn {
                get {
                    return this.columncp_membgroup;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cp_membtypeColumn {
                get {
                    return this.columncp_membtype;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DT_MAINRow this[int index] {
                get {
                    return ((DT_MAINRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DT_MAINRowChangeEventHandler DT_MAINRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DT_MAINRowChangeEventHandler DT_MAINRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DT_MAINRowChangeEventHandler DT_MAINRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DT_MAINRowChangeEventHandler DT_MAINRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddDT_MAINRow(DT_MAINRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DT_MAINRow AddDT_MAINRow(
                        string MEMBGROUP_CODE, 
                        string MEMBGROUP_DESC, 
                        string PRENAME_DESC, 
                        string MEMB_NAME, 
                        decimal MEMBER_STATUS, 
                        System.DateTime MEMBER_DATE, 
                        decimal RESIGN_STATUS, 
                        System.DateTime RESIGN_DATE, 
                        string MEMBTYPE_CODE, 
                        string MEMBTYPE_DESC, 
                        string COOP_ID, 
                        string MEMBER_NO, 
                        System.DateTime OPERATE_DATE, 
                        System.DateTime SLIP_DATE, 
                        string DIV_YEAR, 
                        string ENTRY_ID, 
                        string MEMB_SURNAME, 
                        string MEMB_ENAME, 
                        string MEMB_ESURNAME, 
                        string cp_name, 
                        string cp_name_eng, 
                        string cp_membgroup, 
                        string cp_membtype) {
                DT_MAINRow rowDT_MAINRow = ((DT_MAINRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        MEMBGROUP_CODE,
                        MEMBGROUP_DESC,
                        PRENAME_DESC,
                        MEMB_NAME,
                        MEMBER_STATUS,
                        MEMBER_DATE,
                        RESIGN_STATUS,
                        RESIGN_DATE,
                        MEMBTYPE_CODE,
                        MEMBTYPE_DESC,
                        COOP_ID,
                        MEMBER_NO,
                        OPERATE_DATE,
                        SLIP_DATE,
                        DIV_YEAR,
                        ENTRY_ID,
                        MEMB_SURNAME,
                        MEMB_ENAME,
                        MEMB_ESURNAME,
                        cp_name,
                        cp_name_eng,
                        cp_membgroup,
                        cp_membtype};
                rowDT_MAINRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDT_MAINRow);
                return rowDT_MAINRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DT_MAINRow AddDT_MAINRow(
                        string MEMBGROUP_CODE, 
                        string MEMBGROUP_DESC, 
                        string PRENAME_DESC, 
                        string MEMB_NAME, 
                        decimal MEMBER_STATUS, 
                        System.DateTime MEMBER_DATE, 
                        decimal RESIGN_STATUS, 
                        System.DateTime RESIGN_DATE, 
                        string MEMBTYPE_CODE, 
                        string MEMBTYPE_DESC, 
                        string COOP_ID, 
                        string MEMBER_NO, 
                        System.DateTime OPERATE_DATE, 
                        System.DateTime SLIP_DATE, 
                        string DIV_YEAR, 
                        string ENTRY_ID, 
                        string MEMB_SURNAME, 
                        string MEMB_ENAME, 
                        string MEMB_ESURNAME) {
                DT_MAINRow rowDT_MAINRow = ((DT_MAINRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        MEMBGROUP_CODE,
                        MEMBGROUP_DESC,
                        PRENAME_DESC,
                        MEMB_NAME,
                        MEMBER_STATUS,
                        MEMBER_DATE,
                        RESIGN_STATUS,
                        RESIGN_DATE,
                        MEMBTYPE_CODE,
                        MEMBTYPE_DESC,
                        COOP_ID,
                        MEMBER_NO,
                        OPERATE_DATE,
                        SLIP_DATE,
                        DIV_YEAR,
                        ENTRY_ID,
                        MEMB_SURNAME,
                        MEMB_ENAME,
                        MEMB_ESURNAME,
                        null,
                        null,
                        null,
                        null};
                rowDT_MAINRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDT_MAINRow);
                return rowDT_MAINRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DT_MAINRow FindByCOOP_IDMEMBER_NO(string COOP_ID, string MEMBER_NO) {
                return ((DT_MAINRow)(this.Rows.Find(new object[] {
                            COOP_ID,
                            MEMBER_NO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                DT_MAINDataTable cln = ((DT_MAINDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DT_MAINDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnMEMBGROUP_CODE = base.Columns["MEMBGROUP_CODE"];
                this.columnMEMBGROUP_DESC = base.Columns["MEMBGROUP_DESC"];
                this.columnPRENAME_DESC = base.Columns["PRENAME_DESC"];
                this.columnMEMB_NAME = base.Columns["MEMB_NAME"];
                this.columnMEMBER_STATUS = base.Columns["MEMBER_STATUS"];
                this.columnMEMBER_DATE = base.Columns["MEMBER_DATE"];
                this.columnRESIGN_STATUS = base.Columns["RESIGN_STATUS"];
                this.columnRESIGN_DATE = base.Columns["RESIGN_DATE"];
                this.columnMEMBTYPE_CODE = base.Columns["MEMBTYPE_CODE"];
                this.columnMEMBTYPE_DESC = base.Columns["MEMBTYPE_DESC"];
                this.columnCOOP_ID = base.Columns["COOP_ID"];
                this.columnMEMBER_NO = base.Columns["MEMBER_NO"];
                this.columnOPERATE_DATE = base.Columns["OPERATE_DATE"];
                this.columnSLIP_DATE = base.Columns["SLIP_DATE"];
                this.columnDIV_YEAR = base.Columns["DIV_YEAR"];
                this.columnENTRY_ID = base.Columns["ENTRY_ID"];
                this.columnMEMB_SURNAME = base.Columns["MEMB_SURNAME"];
                this.columnMEMB_ENAME = base.Columns["MEMB_ENAME"];
                this.columnMEMB_ESURNAME = base.Columns["MEMB_ESURNAME"];
                this.columncp_name = base.Columns["cp_name"];
                this.columncp_name_eng = base.Columns["cp_name_eng"];
                this.columncp_membgroup = base.Columns["cp_membgroup"];
                this.columncp_membtype = base.Columns["cp_membtype"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnMEMBGROUP_CODE = new global::System.Data.DataColumn("MEMBGROUP_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMEMBGROUP_CODE);
                this.columnMEMBGROUP_DESC = new global::System.Data.DataColumn("MEMBGROUP_DESC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMEMBGROUP_DESC);
                this.columnPRENAME_DESC = new global::System.Data.DataColumn("PRENAME_DESC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRENAME_DESC);
                this.columnMEMB_NAME = new global::System.Data.DataColumn("MEMB_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMEMB_NAME);
                this.columnMEMBER_STATUS = new global::System.Data.DataColumn("MEMBER_STATUS", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMEMBER_STATUS);
                this.columnMEMBER_DATE = new global::System.Data.DataColumn("MEMBER_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMEMBER_DATE);
                this.columnRESIGN_STATUS = new global::System.Data.DataColumn("RESIGN_STATUS", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRESIGN_STATUS);
                this.columnRESIGN_DATE = new global::System.Data.DataColumn("RESIGN_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRESIGN_DATE);
                this.columnMEMBTYPE_CODE = new global::System.Data.DataColumn("MEMBTYPE_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMEMBTYPE_CODE);
                this.columnMEMBTYPE_DESC = new global::System.Data.DataColumn("MEMBTYPE_DESC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMEMBTYPE_DESC);
                this.columnCOOP_ID = new global::System.Data.DataColumn("COOP_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOOP_ID);
                this.columnMEMBER_NO = new global::System.Data.DataColumn("MEMBER_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMEMBER_NO);
                this.columnOPERATE_DATE = new global::System.Data.DataColumn("OPERATE_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOPERATE_DATE);
                this.columnSLIP_DATE = new global::System.Data.DataColumn("SLIP_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSLIP_DATE);
                this.columnDIV_YEAR = new global::System.Data.DataColumn("DIV_YEAR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDIV_YEAR);
                this.columnENTRY_ID = new global::System.Data.DataColumn("ENTRY_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnENTRY_ID);
                this.columnMEMB_SURNAME = new global::System.Data.DataColumn("MEMB_SURNAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMEMB_SURNAME);
                this.columnMEMB_ENAME = new global::System.Data.DataColumn("MEMB_ENAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMEMB_ENAME);
                this.columnMEMB_ESURNAME = new global::System.Data.DataColumn("MEMB_ESURNAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMEMB_ESURNAME);
                this.columncp_name = new global::System.Data.DataColumn("cp_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncp_name);
                this.columncp_name_eng = new global::System.Data.DataColumn("cp_name_eng", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncp_name_eng);
                this.columncp_membgroup = new global::System.Data.DataColumn("cp_membgroup", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncp_membgroup);
                this.columncp_membtype = new global::System.Data.DataColumn("cp_membtype", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncp_membtype);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCOOP_ID,
                                this.columnMEMBER_NO}, true));
                this.columnMEMBGROUP_CODE.MaxLength = 14;
                this.columnMEMBGROUP_DESC.MaxLength = 100;
                this.columnPRENAME_DESC.MaxLength = 30;
                this.columnMEMB_NAME.MaxLength = 60;
                this.columnMEMBTYPE_CODE.MaxLength = 2;
                this.columnMEMBTYPE_DESC.MaxLength = 60;
                this.columnCOOP_ID.AllowDBNull = false;
                this.columnCOOP_ID.MaxLength = 6;
                this.columnMEMBER_NO.AllowDBNull = false;
                this.columnMEMBER_NO.MaxLength = 8;
                this.columnDIV_YEAR.MaxLength = 5;
                this.columnENTRY_ID.MaxLength = 32;
                this.columnMEMB_SURNAME.MaxLength = 60;
                this.columnMEMB_ENAME.MaxLength = 60;
                this.columnMEMB_ESURNAME.MaxLength = 60;
                this.columncp_name.ReadOnly = true;
                this.columncp_name_eng.ReadOnly = true;
                this.columncp_membgroup.ReadOnly = true;
                this.columncp_membtype.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DT_MAINRow NewDT_MAINRow() {
                return ((DT_MAINRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DT_MAINRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(DT_MAINRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitExpressions() {
                this.cp_nameColumn.Expression = "prename_desc+memb_name+\'  \'+memb_surname";
                this.cp_name_engColumn.Expression = "memb_ename+\'  \'+memb_esurname";
                this.cp_membgroupColumn.Expression = "membgroup_code+\' : \'+membgroup_desc";
                this.cp_membtypeColumn.Expression = "membtype_code+\' : \'+membtype_desc";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DT_MAINRowChanged != null)) {
                    this.DT_MAINRowChanged(this, new DT_MAINRowChangeEvent(((DT_MAINRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DT_MAINRowChanging != null)) {
                    this.DT_MAINRowChanging(this, new DT_MAINRowChangeEvent(((DT_MAINRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DT_MAINRowDeleted != null)) {
                    this.DT_MAINRowDeleted(this, new DT_MAINRowChangeEvent(((DT_MAINRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DT_MAINRowDeleting != null)) {
                    this.DT_MAINRowDeleting(this, new DT_MAINRowChangeEvent(((DT_MAINRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveDT_MAINRow(DT_MAINRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DT_MAINDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DT_LISTDataTable : global::System.Data.TypedTableBase<DT_LISTRow> {
            
            private global::System.Data.DataColumn columnOPERATE_FLAG;
            
            private global::System.Data.DataColumn columnCOOP_ID;
            
            private global::System.Data.DataColumn columnPAYOUTSLIP_NO;
            
            private global::System.Data.DataColumn columnDIV_YEAR;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DT_LISTDataTable() {
                this.TableName = "DT_LIST";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DT_LISTDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected DT_LISTDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OPERATE_FLAGColumn {
                get {
                    return this.columnOPERATE_FLAG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn COOP_IDColumn {
                get {
                    return this.columnCOOP_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PAYOUTSLIP_NOColumn {
                get {
                    return this.columnPAYOUTSLIP_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DIV_YEARColumn {
                get {
                    return this.columnDIV_YEAR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DT_LISTRow this[int index] {
                get {
                    return ((DT_LISTRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DT_LISTRowChangeEventHandler DT_LISTRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DT_LISTRowChangeEventHandler DT_LISTRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DT_LISTRowChangeEventHandler DT_LISTRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DT_LISTRowChangeEventHandler DT_LISTRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddDT_LISTRow(DT_LISTRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DT_LISTRow AddDT_LISTRow(decimal OPERATE_FLAG, string COOP_ID, string PAYOUTSLIP_NO, string DIV_YEAR) {
                DT_LISTRow rowDT_LISTRow = ((DT_LISTRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        OPERATE_FLAG,
                        COOP_ID,
                        PAYOUTSLIP_NO,
                        DIV_YEAR};
                rowDT_LISTRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDT_LISTRow);
                return rowDT_LISTRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DT_LISTRow FindByCOOP_IDPAYOUTSLIP_NO(string COOP_ID, string PAYOUTSLIP_NO) {
                return ((DT_LISTRow)(this.Rows.Find(new object[] {
                            COOP_ID,
                            PAYOUTSLIP_NO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                DT_LISTDataTable cln = ((DT_LISTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DT_LISTDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnOPERATE_FLAG = base.Columns["OPERATE_FLAG"];
                this.columnCOOP_ID = base.Columns["COOP_ID"];
                this.columnPAYOUTSLIP_NO = base.Columns["PAYOUTSLIP_NO"];
                this.columnDIV_YEAR = base.Columns["DIV_YEAR"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnOPERATE_FLAG = new global::System.Data.DataColumn("OPERATE_FLAG", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOPERATE_FLAG);
                this.columnCOOP_ID = new global::System.Data.DataColumn("COOP_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOOP_ID);
                this.columnPAYOUTSLIP_NO = new global::System.Data.DataColumn("PAYOUTSLIP_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPAYOUTSLIP_NO);
                this.columnDIV_YEAR = new global::System.Data.DataColumn("DIV_YEAR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDIV_YEAR);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCOOP_ID,
                                this.columnPAYOUTSLIP_NO}, true));
                this.columnCOOP_ID.AllowDBNull = false;
                this.columnCOOP_ID.MaxLength = 6;
                this.columnPAYOUTSLIP_NO.AllowDBNull = false;
                this.columnPAYOUTSLIP_NO.MaxLength = 15;
                this.columnDIV_YEAR.MaxLength = 5;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DT_LISTRow NewDT_LISTRow() {
                return ((DT_LISTRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DT_LISTRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(DT_LISTRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DT_LISTRowChanged != null)) {
                    this.DT_LISTRowChanged(this, new DT_LISTRowChangeEvent(((DT_LISTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DT_LISTRowChanging != null)) {
                    this.DT_LISTRowChanging(this, new DT_LISTRowChangeEvent(((DT_LISTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DT_LISTRowDeleted != null)) {
                    this.DT_LISTRowDeleted(this, new DT_LISTRowChangeEvent(((DT_LISTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DT_LISTRowDeleting != null)) {
                    this.DT_LISTRowDeleting(this, new DT_LISTRowChangeEvent(((DT_LISTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveDT_LISTRow(DT_LISTRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DT_LISTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DT_DETAILDataTable : global::System.Data.TypedTableBase<DT_DETAILRow> {
            
            private global::System.Data.DataColumn columnCOOP_ID;
            
            private global::System.Data.DataColumn columnPAYOUTSLIP_NO;
            
            private global::System.Data.DataColumn columnSEQ_NO;
            
            private global::System.Data.DataColumn columnMETHPAYTYPE_CODE;
            
            private global::System.Data.DataColumn columnDIV_PAYMENT;
            
            private global::System.Data.DataColumn columnAVG_PAYMENT;
            
            private global::System.Data.DataColumn columnETC_PAYMENT;
            
            private global::System.Data.DataColumn columnITEM_PAYMENT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DT_DETAILDataTable() {
                this.TableName = "DT_DETAIL";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DT_DETAILDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected DT_DETAILDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn COOP_IDColumn {
                get {
                    return this.columnCOOP_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PAYOUTSLIP_NOColumn {
                get {
                    return this.columnPAYOUTSLIP_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SEQ_NOColumn {
                get {
                    return this.columnSEQ_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn METHPAYTYPE_CODEColumn {
                get {
                    return this.columnMETHPAYTYPE_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DIV_PAYMENTColumn {
                get {
                    return this.columnDIV_PAYMENT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AVG_PAYMENTColumn {
                get {
                    return this.columnAVG_PAYMENT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ETC_PAYMENTColumn {
                get {
                    return this.columnETC_PAYMENT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ITEM_PAYMENTColumn {
                get {
                    return this.columnITEM_PAYMENT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DT_DETAILRow this[int index] {
                get {
                    return ((DT_DETAILRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DT_DETAILRowChangeEventHandler DT_DETAILRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DT_DETAILRowChangeEventHandler DT_DETAILRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DT_DETAILRowChangeEventHandler DT_DETAILRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DT_DETAILRowChangeEventHandler DT_DETAILRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddDT_DETAILRow(DT_DETAILRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DT_DETAILRow AddDT_DETAILRow(string COOP_ID, string PAYOUTSLIP_NO, decimal SEQ_NO, string METHPAYTYPE_CODE, decimal DIV_PAYMENT, decimal AVG_PAYMENT, decimal ETC_PAYMENT, decimal ITEM_PAYMENT) {
                DT_DETAILRow rowDT_DETAILRow = ((DT_DETAILRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        COOP_ID,
                        PAYOUTSLIP_NO,
                        SEQ_NO,
                        METHPAYTYPE_CODE,
                        DIV_PAYMENT,
                        AVG_PAYMENT,
                        ETC_PAYMENT,
                        ITEM_PAYMENT};
                rowDT_DETAILRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDT_DETAILRow);
                return rowDT_DETAILRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DT_DETAILRow FindByCOOP_IDPAYOUTSLIP_NOSEQ_NO(string COOP_ID, string PAYOUTSLIP_NO, decimal SEQ_NO) {
                return ((DT_DETAILRow)(this.Rows.Find(new object[] {
                            COOP_ID,
                            PAYOUTSLIP_NO,
                            SEQ_NO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                DT_DETAILDataTable cln = ((DT_DETAILDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DT_DETAILDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnCOOP_ID = base.Columns["COOP_ID"];
                this.columnPAYOUTSLIP_NO = base.Columns["PAYOUTSLIP_NO"];
                this.columnSEQ_NO = base.Columns["SEQ_NO"];
                this.columnMETHPAYTYPE_CODE = base.Columns["METHPAYTYPE_CODE"];
                this.columnDIV_PAYMENT = base.Columns["DIV_PAYMENT"];
                this.columnAVG_PAYMENT = base.Columns["AVG_PAYMENT"];
                this.columnETC_PAYMENT = base.Columns["ETC_PAYMENT"];
                this.columnITEM_PAYMENT = base.Columns["ITEM_PAYMENT"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnCOOP_ID = new global::System.Data.DataColumn("COOP_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOOP_ID);
                this.columnPAYOUTSLIP_NO = new global::System.Data.DataColumn("PAYOUTSLIP_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPAYOUTSLIP_NO);
                this.columnSEQ_NO = new global::System.Data.DataColumn("SEQ_NO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSEQ_NO);
                this.columnMETHPAYTYPE_CODE = new global::System.Data.DataColumn("METHPAYTYPE_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMETHPAYTYPE_CODE);
                this.columnDIV_PAYMENT = new global::System.Data.DataColumn("DIV_PAYMENT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDIV_PAYMENT);
                this.columnAVG_PAYMENT = new global::System.Data.DataColumn("AVG_PAYMENT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAVG_PAYMENT);
                this.columnETC_PAYMENT = new global::System.Data.DataColumn("ETC_PAYMENT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnETC_PAYMENT);
                this.columnITEM_PAYMENT = new global::System.Data.DataColumn("ITEM_PAYMENT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnITEM_PAYMENT);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCOOP_ID,
                                this.columnPAYOUTSLIP_NO,
                                this.columnSEQ_NO}, true));
                this.columnCOOP_ID.AllowDBNull = false;
                this.columnCOOP_ID.MaxLength = 6;
                this.columnPAYOUTSLIP_NO.AllowDBNull = false;
                this.columnPAYOUTSLIP_NO.MaxLength = 15;
                this.columnSEQ_NO.AllowDBNull = false;
                this.columnMETHPAYTYPE_CODE.MaxLength = 3;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DT_DETAILRow NewDT_DETAILRow() {
                return ((DT_DETAILRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DT_DETAILRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(DT_DETAILRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DT_DETAILRowChanged != null)) {
                    this.DT_DETAILRowChanged(this, new DT_DETAILRowChangeEvent(((DT_DETAILRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DT_DETAILRowChanging != null)) {
                    this.DT_DETAILRowChanging(this, new DT_DETAILRowChangeEvent(((DT_DETAILRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DT_DETAILRowDeleted != null)) {
                    this.DT_DETAILRowDeleted(this, new DT_DETAILRowChangeEvent(((DT_DETAILRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DT_DETAILRowDeleting != null)) {
                    this.DT_DETAILRowDeleting(this, new DT_DETAILRowChangeEvent(((DT_DETAILRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveDT_DETAILRow(DT_DETAILRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DT_DETAILDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class DT_MAINRow : global::System.Data.DataRow {
            
            private DT_MAINDataTable tableDT_MAIN;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DT_MAINRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDT_MAIN = ((DT_MAINDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MEMBGROUP_CODE {
                get {
                    try {
                        return ((string)(this[this.tableDT_MAIN.MEMBGROUP_CODEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MEMBGROUP_CODE\' in table \'DT_MAIN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDT_MAIN.MEMBGROUP_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MEMBGROUP_DESC {
                get {
                    try {
                        return ((string)(this[this.tableDT_MAIN.MEMBGROUP_DESCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MEMBGROUP_DESC\' in table \'DT_MAIN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDT_MAIN.MEMBGROUP_DESCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PRENAME_DESC {
                get {
                    try {
                        return ((string)(this[this.tableDT_MAIN.PRENAME_DESCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PRENAME_DESC\' in table \'DT_MAIN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDT_MAIN.PRENAME_DESCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MEMB_NAME {
                get {
                    try {
                        return ((string)(this[this.tableDT_MAIN.MEMB_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MEMB_NAME\' in table \'DT_MAIN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDT_MAIN.MEMB_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal MEMBER_STATUS {
                get {
                    try {
                        return ((decimal)(this[this.tableDT_MAIN.MEMBER_STATUSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MEMBER_STATUS\' in table \'DT_MAIN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDT_MAIN.MEMBER_STATUSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime MEMBER_DATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDT_MAIN.MEMBER_DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MEMBER_DATE\' in table \'DT_MAIN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDT_MAIN.MEMBER_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal RESIGN_STATUS {
                get {
                    try {
                        return ((decimal)(this[this.tableDT_MAIN.RESIGN_STATUSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RESIGN_STATUS\' in table \'DT_MAIN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDT_MAIN.RESIGN_STATUSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime RESIGN_DATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDT_MAIN.RESIGN_DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RESIGN_DATE\' in table \'DT_MAIN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDT_MAIN.RESIGN_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MEMBTYPE_CODE {
                get {
                    try {
                        return ((string)(this[this.tableDT_MAIN.MEMBTYPE_CODEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MEMBTYPE_CODE\' in table \'DT_MAIN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDT_MAIN.MEMBTYPE_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MEMBTYPE_DESC {
                get {
                    try {
                        return ((string)(this[this.tableDT_MAIN.MEMBTYPE_DESCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MEMBTYPE_DESC\' in table \'DT_MAIN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDT_MAIN.MEMBTYPE_DESCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string COOP_ID {
                get {
                    return ((string)(this[this.tableDT_MAIN.COOP_IDColumn]));
                }
                set {
                    this[this.tableDT_MAIN.COOP_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MEMBER_NO {
                get {
                    return ((string)(this[this.tableDT_MAIN.MEMBER_NOColumn]));
                }
                set {
                    this[this.tableDT_MAIN.MEMBER_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime OPERATE_DATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDT_MAIN.OPERATE_DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OPERATE_DATE\' in table \'DT_MAIN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDT_MAIN.OPERATE_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime SLIP_DATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDT_MAIN.SLIP_DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SLIP_DATE\' in table \'DT_MAIN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDT_MAIN.SLIP_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DIV_YEAR {
                get {
                    try {
                        return ((string)(this[this.tableDT_MAIN.DIV_YEARColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DIV_YEAR\' in table \'DT_MAIN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDT_MAIN.DIV_YEARColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ENTRY_ID {
                get {
                    try {
                        return ((string)(this[this.tableDT_MAIN.ENTRY_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ENTRY_ID\' in table \'DT_MAIN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDT_MAIN.ENTRY_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MEMB_SURNAME {
                get {
                    try {
                        return ((string)(this[this.tableDT_MAIN.MEMB_SURNAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MEMB_SURNAME\' in table \'DT_MAIN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDT_MAIN.MEMB_SURNAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MEMB_ENAME {
                get {
                    try {
                        return ((string)(this[this.tableDT_MAIN.MEMB_ENAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MEMB_ENAME\' in table \'DT_MAIN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDT_MAIN.MEMB_ENAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MEMB_ESURNAME {
                get {
                    try {
                        return ((string)(this[this.tableDT_MAIN.MEMB_ESURNAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MEMB_ESURNAME\' in table \'DT_MAIN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDT_MAIN.MEMB_ESURNAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cp_name {
                get {
                    try {
                        return ((string)(this[this.tableDT_MAIN.cp_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cp_name\' in table \'DT_MAIN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDT_MAIN.cp_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cp_name_eng {
                get {
                    try {
                        return ((string)(this[this.tableDT_MAIN.cp_name_engColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cp_name_eng\' in table \'DT_MAIN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDT_MAIN.cp_name_engColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cp_membgroup {
                get {
                    try {
                        return ((string)(this[this.tableDT_MAIN.cp_membgroupColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cp_membgroup\' in table \'DT_MAIN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDT_MAIN.cp_membgroupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cp_membtype {
                get {
                    try {
                        return ((string)(this[this.tableDT_MAIN.cp_membtypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cp_membtype\' in table \'DT_MAIN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDT_MAIN.cp_membtypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMEMBGROUP_CODENull() {
                return this.IsNull(this.tableDT_MAIN.MEMBGROUP_CODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMEMBGROUP_CODENull() {
                this[this.tableDT_MAIN.MEMBGROUP_CODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMEMBGROUP_DESCNull() {
                return this.IsNull(this.tableDT_MAIN.MEMBGROUP_DESCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMEMBGROUP_DESCNull() {
                this[this.tableDT_MAIN.MEMBGROUP_DESCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPRENAME_DESCNull() {
                return this.IsNull(this.tableDT_MAIN.PRENAME_DESCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPRENAME_DESCNull() {
                this[this.tableDT_MAIN.PRENAME_DESCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMEMB_NAMENull() {
                return this.IsNull(this.tableDT_MAIN.MEMB_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMEMB_NAMENull() {
                this[this.tableDT_MAIN.MEMB_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMEMBER_STATUSNull() {
                return this.IsNull(this.tableDT_MAIN.MEMBER_STATUSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMEMBER_STATUSNull() {
                this[this.tableDT_MAIN.MEMBER_STATUSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMEMBER_DATENull() {
                return this.IsNull(this.tableDT_MAIN.MEMBER_DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMEMBER_DATENull() {
                this[this.tableDT_MAIN.MEMBER_DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRESIGN_STATUSNull() {
                return this.IsNull(this.tableDT_MAIN.RESIGN_STATUSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRESIGN_STATUSNull() {
                this[this.tableDT_MAIN.RESIGN_STATUSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRESIGN_DATENull() {
                return this.IsNull(this.tableDT_MAIN.RESIGN_DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRESIGN_DATENull() {
                this[this.tableDT_MAIN.RESIGN_DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMEMBTYPE_CODENull() {
                return this.IsNull(this.tableDT_MAIN.MEMBTYPE_CODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMEMBTYPE_CODENull() {
                this[this.tableDT_MAIN.MEMBTYPE_CODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMEMBTYPE_DESCNull() {
                return this.IsNull(this.tableDT_MAIN.MEMBTYPE_DESCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMEMBTYPE_DESCNull() {
                this[this.tableDT_MAIN.MEMBTYPE_DESCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOPERATE_DATENull() {
                return this.IsNull(this.tableDT_MAIN.OPERATE_DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOPERATE_DATENull() {
                this[this.tableDT_MAIN.OPERATE_DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSLIP_DATENull() {
                return this.IsNull(this.tableDT_MAIN.SLIP_DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSLIP_DATENull() {
                this[this.tableDT_MAIN.SLIP_DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDIV_YEARNull() {
                return this.IsNull(this.tableDT_MAIN.DIV_YEARColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDIV_YEARNull() {
                this[this.tableDT_MAIN.DIV_YEARColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsENTRY_IDNull() {
                return this.IsNull(this.tableDT_MAIN.ENTRY_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetENTRY_IDNull() {
                this[this.tableDT_MAIN.ENTRY_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMEMB_SURNAMENull() {
                return this.IsNull(this.tableDT_MAIN.MEMB_SURNAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMEMB_SURNAMENull() {
                this[this.tableDT_MAIN.MEMB_SURNAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMEMB_ENAMENull() {
                return this.IsNull(this.tableDT_MAIN.MEMB_ENAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMEMB_ENAMENull() {
                this[this.tableDT_MAIN.MEMB_ENAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMEMB_ESURNAMENull() {
                return this.IsNull(this.tableDT_MAIN.MEMB_ESURNAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMEMB_ESURNAMENull() {
                this[this.tableDT_MAIN.MEMB_ESURNAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Iscp_nameNull() {
                return this.IsNull(this.tableDT_MAIN.cp_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setcp_nameNull() {
                this[this.tableDT_MAIN.cp_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Iscp_name_engNull() {
                return this.IsNull(this.tableDT_MAIN.cp_name_engColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setcp_name_engNull() {
                this[this.tableDT_MAIN.cp_name_engColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Iscp_membgroupNull() {
                return this.IsNull(this.tableDT_MAIN.cp_membgroupColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setcp_membgroupNull() {
                this[this.tableDT_MAIN.cp_membgroupColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Iscp_membtypeNull() {
                return this.IsNull(this.tableDT_MAIN.cp_membtypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setcp_membtypeNull() {
                this[this.tableDT_MAIN.cp_membtypeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class DT_LISTRow : global::System.Data.DataRow {
            
            private DT_LISTDataTable tableDT_LIST;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DT_LISTRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDT_LIST = ((DT_LISTDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal OPERATE_FLAG {
                get {
                    try {
                        return ((decimal)(this[this.tableDT_LIST.OPERATE_FLAGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OPERATE_FLAG\' in table \'DT_LIST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDT_LIST.OPERATE_FLAGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string COOP_ID {
                get {
                    return ((string)(this[this.tableDT_LIST.COOP_IDColumn]));
                }
                set {
                    this[this.tableDT_LIST.COOP_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PAYOUTSLIP_NO {
                get {
                    return ((string)(this[this.tableDT_LIST.PAYOUTSLIP_NOColumn]));
                }
                set {
                    this[this.tableDT_LIST.PAYOUTSLIP_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DIV_YEAR {
                get {
                    try {
                        return ((string)(this[this.tableDT_LIST.DIV_YEARColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DIV_YEAR\' in table \'DT_LIST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDT_LIST.DIV_YEARColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOPERATE_FLAGNull() {
                return this.IsNull(this.tableDT_LIST.OPERATE_FLAGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOPERATE_FLAGNull() {
                this[this.tableDT_LIST.OPERATE_FLAGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDIV_YEARNull() {
                return this.IsNull(this.tableDT_LIST.DIV_YEARColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDIV_YEARNull() {
                this[this.tableDT_LIST.DIV_YEARColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class DT_DETAILRow : global::System.Data.DataRow {
            
            private DT_DETAILDataTable tableDT_DETAIL;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DT_DETAILRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDT_DETAIL = ((DT_DETAILDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string COOP_ID {
                get {
                    return ((string)(this[this.tableDT_DETAIL.COOP_IDColumn]));
                }
                set {
                    this[this.tableDT_DETAIL.COOP_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PAYOUTSLIP_NO {
                get {
                    return ((string)(this[this.tableDT_DETAIL.PAYOUTSLIP_NOColumn]));
                }
                set {
                    this[this.tableDT_DETAIL.PAYOUTSLIP_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal SEQ_NO {
                get {
                    return ((decimal)(this[this.tableDT_DETAIL.SEQ_NOColumn]));
                }
                set {
                    this[this.tableDT_DETAIL.SEQ_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string METHPAYTYPE_CODE {
                get {
                    try {
                        return ((string)(this[this.tableDT_DETAIL.METHPAYTYPE_CODEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'METHPAYTYPE_CODE\' in table \'DT_DETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDT_DETAIL.METHPAYTYPE_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal DIV_PAYMENT {
                get {
                    try {
                        return ((decimal)(this[this.tableDT_DETAIL.DIV_PAYMENTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DIV_PAYMENT\' in table \'DT_DETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDT_DETAIL.DIV_PAYMENTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal AVG_PAYMENT {
                get {
                    try {
                        return ((decimal)(this[this.tableDT_DETAIL.AVG_PAYMENTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AVG_PAYMENT\' in table \'DT_DETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDT_DETAIL.AVG_PAYMENTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ETC_PAYMENT {
                get {
                    try {
                        return ((decimal)(this[this.tableDT_DETAIL.ETC_PAYMENTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ETC_PAYMENT\' in table \'DT_DETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDT_DETAIL.ETC_PAYMENTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ITEM_PAYMENT {
                get {
                    try {
                        return ((decimal)(this[this.tableDT_DETAIL.ITEM_PAYMENTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ITEM_PAYMENT\' in table \'DT_DETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDT_DETAIL.ITEM_PAYMENTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMETHPAYTYPE_CODENull() {
                return this.IsNull(this.tableDT_DETAIL.METHPAYTYPE_CODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMETHPAYTYPE_CODENull() {
                this[this.tableDT_DETAIL.METHPAYTYPE_CODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDIV_PAYMENTNull() {
                return this.IsNull(this.tableDT_DETAIL.DIV_PAYMENTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDIV_PAYMENTNull() {
                this[this.tableDT_DETAIL.DIV_PAYMENTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAVG_PAYMENTNull() {
                return this.IsNull(this.tableDT_DETAIL.AVG_PAYMENTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAVG_PAYMENTNull() {
                this[this.tableDT_DETAIL.AVG_PAYMENTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsETC_PAYMENTNull() {
                return this.IsNull(this.tableDT_DETAIL.ETC_PAYMENTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetETC_PAYMENTNull() {
                this[this.tableDT_DETAIL.ETC_PAYMENTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsITEM_PAYMENTNull() {
                return this.IsNull(this.tableDT_DETAIL.ITEM_PAYMENTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetITEM_PAYMENTNull() {
                this[this.tableDT_DETAIL.ITEM_PAYMENTColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class DT_MAINRowChangeEvent : global::System.EventArgs {
            
            private DT_MAINRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DT_MAINRowChangeEvent(DT_MAINRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DT_MAINRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class DT_LISTRowChangeEvent : global::System.EventArgs {
            
            private DT_LISTRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DT_LISTRowChangeEvent(DT_LISTRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DT_LISTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class DT_DETAILRowChangeEvent : global::System.EventArgs {
            
            private DT_DETAILRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DT_DETAILRowChangeEvent(DT_DETAILRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DT_DETAILRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace Saving.Applications.divavg.ws_divsrv_opr_slip_ccl_ctrl.DataSet1TableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class DT_MAINTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OracleClient.OracleDataAdapter _adapter;
        
        private global::System.Data.OracleClient.OracleConnection _connection;
        
        private global::System.Data.OracleClient.OracleTransaction _transaction;
        
        private global::System.Data.OracleClient.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DT_MAINTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.OracleClient.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.OracleClient.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OracleClient.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.OracleClient.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.OracleClient.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OracleClient.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "DT_MAIN";
            tableMapping.ColumnMappings.Add("MEMBGROUP_CODE", "MEMBGROUP_CODE");
            tableMapping.ColumnMappings.Add("MEMBGROUP_DESC", "MEMBGROUP_DESC");
            tableMapping.ColumnMappings.Add("PRENAME_DESC", "PRENAME_DESC");
            tableMapping.ColumnMappings.Add("MEMB_NAME", "MEMB_NAME");
            tableMapping.ColumnMappings.Add("MEMBER_STATUS", "MEMBER_STATUS");
            tableMapping.ColumnMappings.Add("MEMBER_DATE", "MEMBER_DATE");
            tableMapping.ColumnMappings.Add("RESIGN_STATUS", "RESIGN_STATUS");
            tableMapping.ColumnMappings.Add("RESIGN_DATE", "RESIGN_DATE");
            tableMapping.ColumnMappings.Add("MEMBTYPE_CODE", "MEMBTYPE_CODE");
            tableMapping.ColumnMappings.Add("MEMBTYPE_DESC", "MEMBTYPE_DESC");
            tableMapping.ColumnMappings.Add("COOP_ID", "COOP_ID");
            tableMapping.ColumnMappings.Add("MEMBER_NO", "MEMBER_NO");
            tableMapping.ColumnMappings.Add("OPERATE_DATE", "OPERATE_DATE");
            tableMapping.ColumnMappings.Add("SLIP_DATE", "SLIP_DATE");
            tableMapping.ColumnMappings.Add("DIV_YEAR", "DIV_YEAR");
            tableMapping.ColumnMappings.Add("ENTRY_ID", "ENTRY_ID");
            tableMapping.ColumnMappings.Add("MEMB_SURNAME", "MEMB_SURNAME");
            tableMapping.ColumnMappings.Add("MEMB_ENAME", "MEMB_ENAME");
            tableMapping.ColumnMappings.Add("MEMB_ESURNAME", "MEMB_ESURNAME");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.OracleClient.OracleConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["ConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OracleClient.OracleCommand[1];
            this._commandCollection[0] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"  SELECT ""MBUCFMEMBGROUP"".""MEMBGROUP_CODE"",   
         ""MBUCFMEMBGROUP"".""MEMBGROUP_DESC"",   
         ""MBUCFPRENAME"".""PRENAME_DESC"",   
         ""MBMEMBMASTER"".""MEMB_NAME"",   
         ""MBMEMBMASTER"".""MEMBER_STATUS"",   
         ""MBMEMBMASTER"".""MEMBER_DATE"",   
         ""MBMEMBMASTER"".""RESIGN_STATUS"",   
         ""MBMEMBMASTER"".""RESIGN_DATE"",   
         ""MBUCFMEMBTYPE"".""MEMBTYPE_CODE"",   
         ""MBUCFMEMBTYPE"".""MEMBTYPE_DESC"",   
         ""MBMEMBMASTER"".""COOP_ID"",   
         ""MBMEMBMASTER"".""MEMBER_NO"",   
         to_date( '01/01/1900' , 'dd/mm/yyyy' ) as operate_date,   
         to_date( '01/01/1900' , 'dd/mm/yyyy' ) as slip_date,   
         '          ' as operate_tdate,   
         '     ' as div_year,   
         '                                ' as entry_id,   
         ""MBMEMBMASTER"".""MEMB_SURNAME"",   
         ""MBMEMBMASTER"".""MEMB_ENAME"",   
         ""MBMEMBMASTER"".""MEMB_ESURNAME""  
    FROM ""MBMEMBMASTER"",   
         ""MBUCFMEMBGROUP"",   
         ""MBUCFPRENAME"",   
         ""MBUCFMEMBTYPE""  
   WHERE ( mbmembmaster.coop_id = mbucfmembgroup.coop_id (+)) and  
         ( mbmembmaster.coop_id = mbucfmembtype.coop_id (+)) and  
         ( mbmembmaster.membtype_code = mbucfmembtype.membtype_code (+)) and  
         ( mbmembmaster.membgroup_code = mbucfmembgroup.membgroup_code (+)) and  
         ( mbmembmaster.prename_code = mbucfprename.prename_code (+))    
";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.DT_MAINDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.DT_MAINDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.DT_MAINDataTable dataTable = new DataSet1.DT_MAINDataTable(true);
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class DT_LISTTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OracleClient.OracleDataAdapter _adapter;
        
        private global::System.Data.OracleClient.OracleConnection _connection;
        
        private global::System.Data.OracleClient.OracleTransaction _transaction;
        
        private global::System.Data.OracleClient.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DT_LISTTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.OracleClient.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.OracleClient.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OracleClient.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.OracleClient.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.OracleClient.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OracleClient.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "DT_LIST";
            tableMapping.ColumnMappings.Add("OPERATE_FLAG", "OPERATE_FLAG");
            tableMapping.ColumnMappings.Add("COOP_ID", "COOP_ID");
            tableMapping.ColumnMappings.Add("PAYOUTSLIP_NO", "PAYOUTSLIP_NO");
            tableMapping.ColumnMappings.Add("DIV_YEAR", "DIV_YEAR");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM \"YRSLIPPAYOUT\" WHERE ((\"COOP_ID\" = :Original_COOP_ID) AND (\"PAYOUTSLI" +
                "P_NO\" = :Original_PAYOUTSLIP_NO))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_COOP_ID", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "COOP_ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_PAYOUTSLIP_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "PAYOUTSLIP_NO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE \"YRSLIPPAYOUT\" SET \"COOP_ID\" = :COOP_ID, \"PAYOUTSLIP_NO\" = :PAYOUTSLIP_NO," +
                " \"DIV_YEAR\" = :DIV_YEAR WHERE ((\"COOP_ID\" = :Original_COOP_ID) AND (\"PAYOUTSLIP_" +
                "NO\" = :Original_PAYOUTSLIP_NO))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("COOP_ID", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "COOP_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("PAYOUTSLIP_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "PAYOUTSLIP_NO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("DIV_YEAR", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "DIV_YEAR", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_COOP_ID", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "COOP_ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_PAYOUTSLIP_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "PAYOUTSLIP_NO", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.OracleClient.OracleConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["ConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OracleClient.OracleCommand[1];
            this._commandCollection[0] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "  SELECT 0 as operate_flag,   \r\n         \"YRSLIPPAYOUT\".\"COOP_ID\",   \r\n         \"" +
                "YRSLIPPAYOUT\".\"PAYOUTSLIP_NO\",   \r\n         \"YRSLIPPAYOUT\".\"DIV_YEAR\"  \r\n    FRO" +
                "M \"YRSLIPPAYOUT\"";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.DT_LISTDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.DT_LISTDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.DT_LISTDataTable dataTable = new DataSet1.DT_LISTDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.DT_LISTDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "DT_LIST");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_COOP_ID, string Original_PAYOUTSLIP_NO) {
            if ((Original_COOP_ID == null)) {
                throw new global::System.ArgumentNullException("Original_COOP_ID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_COOP_ID));
            }
            if ((Original_PAYOUTSLIP_NO == null)) {
                throw new global::System.ArgumentNullException("Original_PAYOUTSLIP_NO");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_PAYOUTSLIP_NO));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string COOP_ID, string PAYOUTSLIP_NO, string DIV_YEAR, string Original_COOP_ID, string Original_PAYOUTSLIP_NO) {
            if ((COOP_ID == null)) {
                throw new global::System.ArgumentNullException("COOP_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(COOP_ID));
            }
            if ((PAYOUTSLIP_NO == null)) {
                throw new global::System.ArgumentNullException("PAYOUTSLIP_NO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(PAYOUTSLIP_NO));
            }
            if ((DIV_YEAR == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(DIV_YEAR));
            }
            if ((Original_COOP_ID == null)) {
                throw new global::System.ArgumentNullException("Original_COOP_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Original_COOP_ID));
            }
            if ((Original_PAYOUTSLIP_NO == null)) {
                throw new global::System.ArgumentNullException("Original_PAYOUTSLIP_NO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_PAYOUTSLIP_NO));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string DIV_YEAR, string Original_COOP_ID, string Original_PAYOUTSLIP_NO) {
            return this.Update(Original_COOP_ID, Original_PAYOUTSLIP_NO, DIV_YEAR, Original_COOP_ID, Original_PAYOUTSLIP_NO);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class DT_DETAILTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OracleClient.OracleDataAdapter _adapter;
        
        private global::System.Data.OracleClient.OracleConnection _connection;
        
        private global::System.Data.OracleClient.OracleTransaction _transaction;
        
        private global::System.Data.OracleClient.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DT_DETAILTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.OracleClient.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.OracleClient.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OracleClient.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.OracleClient.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.OracleClient.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OracleClient.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "DT_DETAIL";
            tableMapping.ColumnMappings.Add("COOP_ID", "COOP_ID");
            tableMapping.ColumnMappings.Add("PAYOUTSLIP_NO", "PAYOUTSLIP_NO");
            tableMapping.ColumnMappings.Add("SEQ_NO", "SEQ_NO");
            tableMapping.ColumnMappings.Add("METHPAYTYPE_CODE", "METHPAYTYPE_CODE");
            tableMapping.ColumnMappings.Add("DIV_PAYMENT", "DIV_PAYMENT");
            tableMapping.ColumnMappings.Add("AVG_PAYMENT", "AVG_PAYMENT");
            tableMapping.ColumnMappings.Add("ETC_PAYMENT", "ETC_PAYMENT");
            tableMapping.ColumnMappings.Add("ITEM_PAYMENT", "ITEM_PAYMENT");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM \"YRSLIPPAYOUTDET\" WHERE ((\"COOP_ID\" = :Original_COOP_ID) AND (\"PAYOUT" +
                "SLIP_NO\" = :Original_PAYOUTSLIP_NO) AND (\"SEQ_NO\" = :Original_SEQ_NO))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_COOP_ID", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "COOP_ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_PAYOUTSLIP_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "PAYOUTSLIP_NO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_SEQ_NO", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "SEQ_NO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO ""YRSLIPPAYOUTDET"" (""COOP_ID"", ""PAYOUTSLIP_NO"", ""SEQ_NO"", ""METHPAYTYPE_CODE"", ""DIV_PAYMENT"", ""AVG_PAYMENT"", ""ETC_PAYMENT"", ""ITEM_PAYMENT"") VALUES (:COOP_ID, :PAYOUTSLIP_NO, :SEQ_NO, :METHPAYTYPE_CODE, :DIV_PAYMENT, :AVG_PAYMENT, :ETC_PAYMENT, :ITEM_PAYMENT)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("COOP_ID", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "COOP_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("PAYOUTSLIP_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "PAYOUTSLIP_NO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SEQ_NO", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "SEQ_NO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("METHPAYTYPE_CODE", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "METHPAYTYPE_CODE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("DIV_PAYMENT", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "DIV_PAYMENT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("AVG_PAYMENT", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "AVG_PAYMENT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ETC_PAYMENT", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ETC_PAYMENT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ITEM_PAYMENT", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ITEM_PAYMENT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""YRSLIPPAYOUTDET"" SET ""COOP_ID"" = :COOP_ID, ""PAYOUTSLIP_NO"" = :PAYOUTSLIP_NO, ""SEQ_NO"" = :SEQ_NO, ""METHPAYTYPE_CODE"" = :METHPAYTYPE_CODE, ""DIV_PAYMENT"" = :DIV_PAYMENT, ""AVG_PAYMENT"" = :AVG_PAYMENT, ""ETC_PAYMENT"" = :ETC_PAYMENT, ""ITEM_PAYMENT"" = :ITEM_PAYMENT WHERE ((""COOP_ID"" = :Original_COOP_ID) AND (""PAYOUTSLIP_NO"" = :Original_PAYOUTSLIP_NO) AND (""SEQ_NO"" = :Original_SEQ_NO))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("COOP_ID", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "COOP_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("PAYOUTSLIP_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "PAYOUTSLIP_NO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SEQ_NO", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "SEQ_NO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("METHPAYTYPE_CODE", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "METHPAYTYPE_CODE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("DIV_PAYMENT", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "DIV_PAYMENT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("AVG_PAYMENT", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "AVG_PAYMENT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ETC_PAYMENT", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ETC_PAYMENT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ITEM_PAYMENT", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ITEM_PAYMENT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_COOP_ID", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "COOP_ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_PAYOUTSLIP_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "PAYOUTSLIP_NO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_SEQ_NO", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "SEQ_NO", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.OracleClient.OracleConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["ConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OracleClient.OracleCommand[1];
            this._commandCollection[0] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"  SELECT ""YRSLIPPAYOUTDET"".""COOP_ID"",   
         ""YRSLIPPAYOUTDET"".""PAYOUTSLIP_NO"",   
         ""YRSLIPPAYOUTDET"".""SEQ_NO"",   
         ""YRSLIPPAYOUTDET"".""METHPAYTYPE_CODE"",   
         ""YRSLIPPAYOUTDET"".""DIV_PAYMENT"",   
         ""YRSLIPPAYOUTDET"".""AVG_PAYMENT"",   
         ""YRSLIPPAYOUTDET"".""ETC_PAYMENT"",   
         ""YRSLIPPAYOUTDET"".""ITEM_PAYMENT""  
    FROM ""YRSLIPPAYOUTDET""  
   WHERE ( yrslippayoutdet.coop_id = :as_coopid ) AND  
         ( yrslippayoutdet.payoutslip_no = :as_payoutno )    
";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("as_coopid", global::System.Data.OracleClient.OracleType.Char, 6, global::System.Data.ParameterDirection.Input, "COOP_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[0].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("as_payoutno", global::System.Data.OracleClient.OracleType.VarChar, 15, global::System.Data.ParameterDirection.Input, "PAYOUTSLIP_NO", global::System.Data.DataRowVersion.Current, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.DT_DETAILDataTable dataTable, string as_coopid, string as_payoutno) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((as_coopid == null)) {
                throw new global::System.ArgumentNullException("as_coopid");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(as_coopid));
            }
            if ((as_payoutno == null)) {
                throw new global::System.ArgumentNullException("as_payoutno");
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(as_payoutno));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.DT_DETAILDataTable GetData(string as_coopid, string as_payoutno) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((as_coopid == null)) {
                throw new global::System.ArgumentNullException("as_coopid");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(as_coopid));
            }
            if ((as_payoutno == null)) {
                throw new global::System.ArgumentNullException("as_payoutno");
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(as_payoutno));
            }
            DataSet1.DT_DETAILDataTable dataTable = new DataSet1.DT_DETAILDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.DT_DETAILDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "DT_DETAIL");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_COOP_ID, string Original_PAYOUTSLIP_NO, decimal Original_SEQ_NO) {
            if ((Original_COOP_ID == null)) {
                throw new global::System.ArgumentNullException("Original_COOP_ID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_COOP_ID));
            }
            if ((Original_PAYOUTSLIP_NO == null)) {
                throw new global::System.ArgumentNullException("Original_PAYOUTSLIP_NO");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_PAYOUTSLIP_NO));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((decimal)(Original_SEQ_NO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string COOP_ID, string PAYOUTSLIP_NO, decimal SEQ_NO, string METHPAYTYPE_CODE, global::System.Nullable<decimal> DIV_PAYMENT, global::System.Nullable<decimal> AVG_PAYMENT, global::System.Nullable<decimal> ETC_PAYMENT, global::System.Nullable<decimal> ITEM_PAYMENT) {
            if ((COOP_ID == null)) {
                throw new global::System.ArgumentNullException("COOP_ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(COOP_ID));
            }
            if ((PAYOUTSLIP_NO == null)) {
                throw new global::System.ArgumentNullException("PAYOUTSLIP_NO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(PAYOUTSLIP_NO));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(SEQ_NO));
            if ((METHPAYTYPE_CODE == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(METHPAYTYPE_CODE));
            }
            if ((DIV_PAYMENT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(DIV_PAYMENT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((AVG_PAYMENT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(AVG_PAYMENT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((ETC_PAYMENT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(ETC_PAYMENT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((ITEM_PAYMENT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((decimal)(ITEM_PAYMENT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string COOP_ID, string PAYOUTSLIP_NO, decimal SEQ_NO, string METHPAYTYPE_CODE, global::System.Nullable<decimal> DIV_PAYMENT, global::System.Nullable<decimal> AVG_PAYMENT, global::System.Nullable<decimal> ETC_PAYMENT, global::System.Nullable<decimal> ITEM_PAYMENT, string Original_COOP_ID, string Original_PAYOUTSLIP_NO, decimal Original_SEQ_NO) {
            if ((COOP_ID == null)) {
                throw new global::System.ArgumentNullException("COOP_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(COOP_ID));
            }
            if ((PAYOUTSLIP_NO == null)) {
                throw new global::System.ArgumentNullException("PAYOUTSLIP_NO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(PAYOUTSLIP_NO));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(SEQ_NO));
            if ((METHPAYTYPE_CODE == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(METHPAYTYPE_CODE));
            }
            if ((DIV_PAYMENT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(DIV_PAYMENT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((AVG_PAYMENT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(AVG_PAYMENT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((ETC_PAYMENT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(ETC_PAYMENT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((ITEM_PAYMENT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(ITEM_PAYMENT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Original_COOP_ID == null)) {
                throw new global::System.ArgumentNullException("Original_COOP_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_COOP_ID));
            }
            if ((Original_PAYOUTSLIP_NO == null)) {
                throw new global::System.ArgumentNullException("Original_PAYOUTSLIP_NO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_PAYOUTSLIP_NO));
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((decimal)(Original_SEQ_NO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string METHPAYTYPE_CODE, global::System.Nullable<decimal> DIV_PAYMENT, global::System.Nullable<decimal> AVG_PAYMENT, global::System.Nullable<decimal> ETC_PAYMENT, global::System.Nullable<decimal> ITEM_PAYMENT, string Original_COOP_ID, string Original_PAYOUTSLIP_NO, decimal Original_SEQ_NO) {
            return this.Update(Original_COOP_ID, Original_PAYOUTSLIP_NO, Original_SEQ_NO, METHPAYTYPE_CODE, DIV_PAYMENT, AVG_PAYMENT, ETC_PAYMENT, ITEM_PAYMENT, Original_COOP_ID, Original_PAYOUTSLIP_NO, Original_SEQ_NO);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private DT_LISTTableAdapter _dT_LISTTableAdapter;
        
        private DT_DETAILTableAdapter _dT_DETAILTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public DT_LISTTableAdapter DT_LISTTableAdapter {
            get {
                return this._dT_LISTTableAdapter;
            }
            set {
                this._dT_LISTTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public DT_DETAILTableAdapter DT_DETAILTableAdapter {
            get {
                return this._dT_DETAILTableAdapter;
            }
            set {
                this._dT_DETAILTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._dT_LISTTableAdapter != null) 
                            && (this._dT_LISTTableAdapter.Connection != null))) {
                    return this._dT_LISTTableAdapter.Connection;
                }
                if (((this._dT_DETAILTableAdapter != null) 
                            && (this._dT_DETAILTableAdapter.Connection != null))) {
                    return this._dT_DETAILTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._dT_LISTTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._dT_DETAILTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(DataSet1 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._dT_LISTTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.DT_LIST.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._dT_LISTTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._dT_DETAILTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.DT_DETAIL.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._dT_DETAILTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(DataSet1 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._dT_LISTTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.DT_LIST.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._dT_LISTTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._dT_DETAILTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.DT_DETAIL.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._dT_DETAILTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(DataSet1 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._dT_DETAILTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.DT_DETAIL.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._dT_DETAILTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._dT_LISTTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.DT_LIST.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._dT_LISTTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(DataSet1 dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._dT_LISTTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._dT_LISTTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._dT_DETAILTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._dT_DETAILTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._dT_LISTTableAdapter != null)) {
                    revertConnections.Add(this._dT_LISTTableAdapter, this._dT_LISTTableAdapter.Connection);
                    this._dT_LISTTableAdapter.Connection = ((global::System.Data.OracleClient.OracleConnection)(workConnection));
                    this._dT_LISTTableAdapter.Transaction = ((global::System.Data.OracleClient.OracleTransaction)(workTransaction));
                    if (this._dT_LISTTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._dT_LISTTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._dT_LISTTableAdapter.Adapter);
                    }
                }
                if ((this._dT_DETAILTableAdapter != null)) {
                    revertConnections.Add(this._dT_DETAILTableAdapter, this._dT_DETAILTableAdapter.Connection);
                    this._dT_DETAILTableAdapter.Connection = ((global::System.Data.OracleClient.OracleConnection)(workConnection));
                    this._dT_DETAILTableAdapter.Transaction = ((global::System.Data.OracleClient.OracleTransaction)(workTransaction));
                    if (this._dT_DETAILTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._dT_DETAILTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._dT_DETAILTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._dT_LISTTableAdapter != null)) {
                    this._dT_LISTTableAdapter.Connection = ((global::System.Data.OracleClient.OracleConnection)(revertConnections[this._dT_LISTTableAdapter]));
                    this._dT_LISTTableAdapter.Transaction = null;
                }
                if ((this._dT_DETAILTableAdapter != null)) {
                    this._dT_DETAILTableAdapter.Connection = ((global::System.Data.OracleClient.OracleConnection)(revertConnections[this._dT_DETAILTableAdapter]));
                    this._dT_DETAILTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591