//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Saving.Applications.shrlon.ws_sl_slip_pay_ctrl.w_dlg_sl_reprint_ctrl {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DataSet1")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DataSet1 : global::System.Data.DataSet {
        
        private SLSLIPPAYINDataTable tableSLSLIPPAYIN;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DataSet1() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
            this.InitExpressions();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected DataSet1(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.ExcludeSchema)) {
                    this.InitExpressions();
                }
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["SLSLIPPAYIN"] != null)) {
                    base.Tables.Add(new SLSLIPPAYINDataTable(ds.Tables["SLSLIPPAYIN"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                this.InitExpressions();
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SLSLIPPAYINDataTable SLSLIPPAYIN {
            get {
                return this.tableSLSLIPPAYIN;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            DataSet1 cln = ((DataSet1)(base.Clone()));
            cln.InitVars();
            cln.InitExpressions();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["SLSLIPPAYIN"] != null)) {
                    base.Tables.Add(new SLSLIPPAYINDataTable(ds.Tables["SLSLIPPAYIN"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableSLSLIPPAYIN = ((SLSLIPPAYINDataTable)(base.Tables["SLSLIPPAYIN"]));
            if ((initTable == true)) {
                if ((this.tableSLSLIPPAYIN != null)) {
                    this.tableSLSLIPPAYIN.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "DataSet1";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DataSet1.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableSLSLIPPAYIN = new SLSLIPPAYINDataTable(false);
            base.Tables.Add(this.tableSLSLIPPAYIN);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeSLSLIPPAYIN() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DataSet1 ds = new DataSet1();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitExpressions() {
            this.SLSLIPPAYIN.COMPUTE1Column.Expression = "prename_desc + memb_name +\'  \'+ memb_surname ";
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void SLSLIPPAYINRowChangeEventHandler(object sender, SLSLIPPAYINRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SLSLIPPAYINDataTable : global::System.Data.TypedTableBase<SLSLIPPAYINRow> {
            
            private global::System.Data.DataColumn columnCOOP_ID;
            
            private global::System.Data.DataColumn columnPAYINSLIP_NO;
            
            private global::System.Data.DataColumn columnMEMCOOP_ID;
            
            private global::System.Data.DataColumn columnMEMBER_NO;
            
            private global::System.Data.DataColumn columnDOCUMENT_NO;
            
            private global::System.Data.DataColumn columnSLIPTYPE_CODE;
            
            private global::System.Data.DataColumn columnSLIP_DATE;
            
            private global::System.Data.DataColumn columnOPERATE_DATE;
            
            private global::System.Data.DataColumn columnSHARESTKBF_VALUE;
            
            private global::System.Data.DataColumn columnSHARESTK_VALUE;
            
            private global::System.Data.DataColumn columnINTACCUM_AMT;
            
            private global::System.Data.DataColumn columnMONEYTYPE_CODE;
            
            private global::System.Data.DataColumn columnFINBANKACC_NO;
            
            private global::System.Data.DataColumn columnEXPENSE_BANK;
            
            private global::System.Data.DataColumn columnEXPENSE_BRANCH;
            
            private global::System.Data.DataColumn columnEXPENSE_ACCID;
            
            private global::System.Data.DataColumn columnACCID_FLAG;
            
            private global::System.Data.DataColumn columnTOFROM_ACCID;
            
            private global::System.Data.DataColumn columnREF_SYSTEM;
            
            private global::System.Data.DataColumn columnREF_SLIPNO;
            
            private global::System.Data.DataColumn columnREF_SLIPAMT;
            
            private global::System.Data.DataColumn columnSLIP_AMT;
            
            private global::System.Data.DataColumn columnSLIP_STATUS;
            
            private global::System.Data.DataColumn columnMEMBGROUP_CODE;
            
            private global::System.Data.DataColumn columnENTRY_ID;
            
            private global::System.Data.DataColumn columnENTRY_DATE;
            
            private global::System.Data.DataColumn columnCANCEL_ID;
            
            private global::System.Data.DataColumn columnCANCEL_DATE;
            
            private global::System.Data.DataColumn columnFINPOST_STATUS;
            
            private global::System.Data.DataColumn columnPOSTTOVC_FLAG;
            
            private global::System.Data.DataColumn columnVOUCHER_NO;
            
            private global::System.Data.DataColumn columnCANCELTOVC_FLAG;
            
            private global::System.Data.DataColumn columnCANCELVC_NO;
            
            private global::System.Data.DataColumn columnMEMBGROUP_DESC;
            
            private global::System.Data.DataColumn columnSLIP_DATE_S;
            
            private global::System.Data.DataColumn columnSLIP_DATE_E;
            
            private global::System.Data.DataColumn columnMEMB_NAME;
            
            private global::System.Data.DataColumn columnMEMB_SURNAME;
            
            private global::System.Data.DataColumn columnCOMPUTE1;
            
            private global::System.Data.DataColumn columnPRENAME_DESC;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SLSLIPPAYINDataTable() : 
                    this(false) {
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SLSLIPPAYINDataTable(bool initExpressions) {
                this.TableName = "SLSLIPPAYIN";
                this.BeginInit();
                this.InitClass();
                if ((initExpressions == true)) {
                    this.InitExpressions();
                }
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SLSLIPPAYINDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected SLSLIPPAYINDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn COOP_IDColumn {
                get {
                    return this.columnCOOP_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PAYINSLIP_NOColumn {
                get {
                    return this.columnPAYINSLIP_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MEMCOOP_IDColumn {
                get {
                    return this.columnMEMCOOP_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MEMBER_NOColumn {
                get {
                    return this.columnMEMBER_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DOCUMENT_NOColumn {
                get {
                    return this.columnDOCUMENT_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SLIPTYPE_CODEColumn {
                get {
                    return this.columnSLIPTYPE_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SLIP_DATEColumn {
                get {
                    return this.columnSLIP_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OPERATE_DATEColumn {
                get {
                    return this.columnOPERATE_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SHARESTKBF_VALUEColumn {
                get {
                    return this.columnSHARESTKBF_VALUE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SHARESTK_VALUEColumn {
                get {
                    return this.columnSHARESTK_VALUE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn INTACCUM_AMTColumn {
                get {
                    return this.columnINTACCUM_AMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MONEYTYPE_CODEColumn {
                get {
                    return this.columnMONEYTYPE_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FINBANKACC_NOColumn {
                get {
                    return this.columnFINBANKACC_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EXPENSE_BANKColumn {
                get {
                    return this.columnEXPENSE_BANK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EXPENSE_BRANCHColumn {
                get {
                    return this.columnEXPENSE_BRANCH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EXPENSE_ACCIDColumn {
                get {
                    return this.columnEXPENSE_ACCID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ACCID_FLAGColumn {
                get {
                    return this.columnACCID_FLAG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TOFROM_ACCIDColumn {
                get {
                    return this.columnTOFROM_ACCID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn REF_SYSTEMColumn {
                get {
                    return this.columnREF_SYSTEM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn REF_SLIPNOColumn {
                get {
                    return this.columnREF_SLIPNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn REF_SLIPAMTColumn {
                get {
                    return this.columnREF_SLIPAMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SLIP_AMTColumn {
                get {
                    return this.columnSLIP_AMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SLIP_STATUSColumn {
                get {
                    return this.columnSLIP_STATUS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MEMBGROUP_CODEColumn {
                get {
                    return this.columnMEMBGROUP_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ENTRY_IDColumn {
                get {
                    return this.columnENTRY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ENTRY_DATEColumn {
                get {
                    return this.columnENTRY_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CANCEL_IDColumn {
                get {
                    return this.columnCANCEL_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CANCEL_DATEColumn {
                get {
                    return this.columnCANCEL_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FINPOST_STATUSColumn {
                get {
                    return this.columnFINPOST_STATUS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn POSTTOVC_FLAGColumn {
                get {
                    return this.columnPOSTTOVC_FLAG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VOUCHER_NOColumn {
                get {
                    return this.columnVOUCHER_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CANCELTOVC_FLAGColumn {
                get {
                    return this.columnCANCELTOVC_FLAG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CANCELVC_NOColumn {
                get {
                    return this.columnCANCELVC_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MEMBGROUP_DESCColumn {
                get {
                    return this.columnMEMBGROUP_DESC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SLIP_DATE_SColumn {
                get {
                    return this.columnSLIP_DATE_S;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SLIP_DATE_EColumn {
                get {
                    return this.columnSLIP_DATE_E;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MEMB_NAMEColumn {
                get {
                    return this.columnMEMB_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MEMB_SURNAMEColumn {
                get {
                    return this.columnMEMB_SURNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn COMPUTE1Column {
                get {
                    return this.columnCOMPUTE1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PRENAME_DESCColumn {
                get {
                    return this.columnPRENAME_DESC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SLSLIPPAYINRow this[int index] {
                get {
                    return ((SLSLIPPAYINRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SLSLIPPAYINRowChangeEventHandler SLSLIPPAYINRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SLSLIPPAYINRowChangeEventHandler SLSLIPPAYINRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SLSLIPPAYINRowChangeEventHandler SLSLIPPAYINRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SLSLIPPAYINRowChangeEventHandler SLSLIPPAYINRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddSLSLIPPAYINRow(SLSLIPPAYINRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SLSLIPPAYINRow AddSLSLIPPAYINRow(
                        string COOP_ID, 
                        string PAYINSLIP_NO, 
                        string MEMCOOP_ID, 
                        string MEMBER_NO, 
                        string DOCUMENT_NO, 
                        string SLIPTYPE_CODE, 
                        System.DateTime SLIP_DATE, 
                        System.DateTime OPERATE_DATE, 
                        decimal SHARESTKBF_VALUE, 
                        decimal SHARESTK_VALUE, 
                        decimal INTACCUM_AMT, 
                        string MONEYTYPE_CODE, 
                        string FINBANKACC_NO, 
                        string EXPENSE_BANK, 
                        string EXPENSE_BRANCH, 
                        string EXPENSE_ACCID, 
                        decimal ACCID_FLAG, 
                        string TOFROM_ACCID, 
                        string REF_SYSTEM, 
                        string REF_SLIPNO, 
                        decimal REF_SLIPAMT, 
                        decimal SLIP_AMT, 
                        decimal SLIP_STATUS, 
                        string MEMBGROUP_CODE, 
                        string ENTRY_ID, 
                        System.DateTime ENTRY_DATE, 
                        string CANCEL_ID, 
                        System.DateTime CANCEL_DATE, 
                        decimal FINPOST_STATUS, 
                        decimal POSTTOVC_FLAG, 
                        string VOUCHER_NO, 
                        decimal CANCELTOVC_FLAG, 
                        string CANCELVC_NO, 
                        string MEMBGROUP_DESC, 
                        System.DateTime SLIP_DATE_S, 
                        System.DateTime SLIP_DATE_E, 
                        string MEMB_NAME, 
                        string MEMB_SURNAME, 
                        string COMPUTE1, 
                        string PRENAME_DESC) {
                SLSLIPPAYINRow rowSLSLIPPAYINRow = ((SLSLIPPAYINRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        COOP_ID,
                        PAYINSLIP_NO,
                        MEMCOOP_ID,
                        MEMBER_NO,
                        DOCUMENT_NO,
                        SLIPTYPE_CODE,
                        SLIP_DATE,
                        OPERATE_DATE,
                        SHARESTKBF_VALUE,
                        SHARESTK_VALUE,
                        INTACCUM_AMT,
                        MONEYTYPE_CODE,
                        FINBANKACC_NO,
                        EXPENSE_BANK,
                        EXPENSE_BRANCH,
                        EXPENSE_ACCID,
                        ACCID_FLAG,
                        TOFROM_ACCID,
                        REF_SYSTEM,
                        REF_SLIPNO,
                        REF_SLIPAMT,
                        SLIP_AMT,
                        SLIP_STATUS,
                        MEMBGROUP_CODE,
                        ENTRY_ID,
                        ENTRY_DATE,
                        CANCEL_ID,
                        CANCEL_DATE,
                        FINPOST_STATUS,
                        POSTTOVC_FLAG,
                        VOUCHER_NO,
                        CANCELTOVC_FLAG,
                        CANCELVC_NO,
                        MEMBGROUP_DESC,
                        SLIP_DATE_S,
                        SLIP_DATE_E,
                        MEMB_NAME,
                        MEMB_SURNAME,
                        COMPUTE1,
                        PRENAME_DESC};
                rowSLSLIPPAYINRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSLSLIPPAYINRow);
                return rowSLSLIPPAYINRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SLSLIPPAYINRow AddSLSLIPPAYINRow(
                        string COOP_ID, 
                        string PAYINSLIP_NO, 
                        string MEMCOOP_ID, 
                        string MEMBER_NO, 
                        string DOCUMENT_NO, 
                        string SLIPTYPE_CODE, 
                        System.DateTime SLIP_DATE, 
                        System.DateTime OPERATE_DATE, 
                        decimal SHARESTKBF_VALUE, 
                        decimal SHARESTK_VALUE, 
                        decimal INTACCUM_AMT, 
                        string MONEYTYPE_CODE, 
                        string FINBANKACC_NO, 
                        string EXPENSE_BANK, 
                        string EXPENSE_BRANCH, 
                        string EXPENSE_ACCID, 
                        decimal ACCID_FLAG, 
                        string TOFROM_ACCID, 
                        string REF_SYSTEM, 
                        string REF_SLIPNO, 
                        decimal REF_SLIPAMT, 
                        decimal SLIP_AMT, 
                        decimal SLIP_STATUS, 
                        string MEMBGROUP_CODE, 
                        string ENTRY_ID, 
                        System.DateTime ENTRY_DATE, 
                        string CANCEL_ID, 
                        System.DateTime CANCEL_DATE, 
                        decimal FINPOST_STATUS, 
                        decimal POSTTOVC_FLAG, 
                        string VOUCHER_NO, 
                        decimal CANCELTOVC_FLAG, 
                        string CANCELVC_NO, 
                        string MEMBGROUP_DESC, 
                        System.DateTime SLIP_DATE_S, 
                        System.DateTime SLIP_DATE_E, 
                        string MEMB_NAME, 
                        string MEMB_SURNAME, 
                        string PRENAME_DESC) {
                SLSLIPPAYINRow rowSLSLIPPAYINRow = ((SLSLIPPAYINRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        COOP_ID,
                        PAYINSLIP_NO,
                        MEMCOOP_ID,
                        MEMBER_NO,
                        DOCUMENT_NO,
                        SLIPTYPE_CODE,
                        SLIP_DATE,
                        OPERATE_DATE,
                        SHARESTKBF_VALUE,
                        SHARESTK_VALUE,
                        INTACCUM_AMT,
                        MONEYTYPE_CODE,
                        FINBANKACC_NO,
                        EXPENSE_BANK,
                        EXPENSE_BRANCH,
                        EXPENSE_ACCID,
                        ACCID_FLAG,
                        TOFROM_ACCID,
                        REF_SYSTEM,
                        REF_SLIPNO,
                        REF_SLIPAMT,
                        SLIP_AMT,
                        SLIP_STATUS,
                        MEMBGROUP_CODE,
                        ENTRY_ID,
                        ENTRY_DATE,
                        CANCEL_ID,
                        CANCEL_DATE,
                        FINPOST_STATUS,
                        POSTTOVC_FLAG,
                        VOUCHER_NO,
                        CANCELTOVC_FLAG,
                        CANCELVC_NO,
                        MEMBGROUP_DESC,
                        SLIP_DATE_S,
                        SLIP_DATE_E,
                        MEMB_NAME,
                        MEMB_SURNAME,
                        null,
                        PRENAME_DESC};
                rowSLSLIPPAYINRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSLSLIPPAYINRow);
                return rowSLSLIPPAYINRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SLSLIPPAYINRow FindByCOOP_IDPAYINSLIP_NO(string COOP_ID, string PAYINSLIP_NO) {
                return ((SLSLIPPAYINRow)(this.Rows.Find(new object[] {
                            COOP_ID,
                            PAYINSLIP_NO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SLSLIPPAYINDataTable cln = ((SLSLIPPAYINDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SLSLIPPAYINDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnCOOP_ID = base.Columns["COOP_ID"];
                this.columnPAYINSLIP_NO = base.Columns["PAYINSLIP_NO"];
                this.columnMEMCOOP_ID = base.Columns["MEMCOOP_ID"];
                this.columnMEMBER_NO = base.Columns["MEMBER_NO"];
                this.columnDOCUMENT_NO = base.Columns["DOCUMENT_NO"];
                this.columnSLIPTYPE_CODE = base.Columns["SLIPTYPE_CODE"];
                this.columnSLIP_DATE = base.Columns["SLIP_DATE"];
                this.columnOPERATE_DATE = base.Columns["OPERATE_DATE"];
                this.columnSHARESTKBF_VALUE = base.Columns["SHARESTKBF_VALUE"];
                this.columnSHARESTK_VALUE = base.Columns["SHARESTK_VALUE"];
                this.columnINTACCUM_AMT = base.Columns["INTACCUM_AMT"];
                this.columnMONEYTYPE_CODE = base.Columns["MONEYTYPE_CODE"];
                this.columnFINBANKACC_NO = base.Columns["FINBANKACC_NO"];
                this.columnEXPENSE_BANK = base.Columns["EXPENSE_BANK"];
                this.columnEXPENSE_BRANCH = base.Columns["EXPENSE_BRANCH"];
                this.columnEXPENSE_ACCID = base.Columns["EXPENSE_ACCID"];
                this.columnACCID_FLAG = base.Columns["ACCID_FLAG"];
                this.columnTOFROM_ACCID = base.Columns["TOFROM_ACCID"];
                this.columnREF_SYSTEM = base.Columns["REF_SYSTEM"];
                this.columnREF_SLIPNO = base.Columns["REF_SLIPNO"];
                this.columnREF_SLIPAMT = base.Columns["REF_SLIPAMT"];
                this.columnSLIP_AMT = base.Columns["SLIP_AMT"];
                this.columnSLIP_STATUS = base.Columns["SLIP_STATUS"];
                this.columnMEMBGROUP_CODE = base.Columns["MEMBGROUP_CODE"];
                this.columnENTRY_ID = base.Columns["ENTRY_ID"];
                this.columnENTRY_DATE = base.Columns["ENTRY_DATE"];
                this.columnCANCEL_ID = base.Columns["CANCEL_ID"];
                this.columnCANCEL_DATE = base.Columns["CANCEL_DATE"];
                this.columnFINPOST_STATUS = base.Columns["FINPOST_STATUS"];
                this.columnPOSTTOVC_FLAG = base.Columns["POSTTOVC_FLAG"];
                this.columnVOUCHER_NO = base.Columns["VOUCHER_NO"];
                this.columnCANCELTOVC_FLAG = base.Columns["CANCELTOVC_FLAG"];
                this.columnCANCELVC_NO = base.Columns["CANCELVC_NO"];
                this.columnMEMBGROUP_DESC = base.Columns["MEMBGROUP_DESC"];
                this.columnSLIP_DATE_S = base.Columns["SLIP_DATE_S"];
                this.columnSLIP_DATE_E = base.Columns["SLIP_DATE_E"];
                this.columnMEMB_NAME = base.Columns["MEMB_NAME"];
                this.columnMEMB_SURNAME = base.Columns["MEMB_SURNAME"];
                this.columnCOMPUTE1 = base.Columns["COMPUTE1"];
                this.columnPRENAME_DESC = base.Columns["PRENAME_DESC"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnCOOP_ID = new global::System.Data.DataColumn("COOP_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOOP_ID);
                this.columnPAYINSLIP_NO = new global::System.Data.DataColumn("PAYINSLIP_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPAYINSLIP_NO);
                this.columnMEMCOOP_ID = new global::System.Data.DataColumn("MEMCOOP_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMEMCOOP_ID);
                this.columnMEMBER_NO = new global::System.Data.DataColumn("MEMBER_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMEMBER_NO);
                this.columnDOCUMENT_NO = new global::System.Data.DataColumn("DOCUMENT_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDOCUMENT_NO);
                this.columnSLIPTYPE_CODE = new global::System.Data.DataColumn("SLIPTYPE_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSLIPTYPE_CODE);
                this.columnSLIP_DATE = new global::System.Data.DataColumn("SLIP_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSLIP_DATE);
                this.columnOPERATE_DATE = new global::System.Data.DataColumn("OPERATE_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOPERATE_DATE);
                this.columnSHARESTKBF_VALUE = new global::System.Data.DataColumn("SHARESTKBF_VALUE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHARESTKBF_VALUE);
                this.columnSHARESTK_VALUE = new global::System.Data.DataColumn("SHARESTK_VALUE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHARESTK_VALUE);
                this.columnINTACCUM_AMT = new global::System.Data.DataColumn("INTACCUM_AMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINTACCUM_AMT);
                this.columnMONEYTYPE_CODE = new global::System.Data.DataColumn("MONEYTYPE_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMONEYTYPE_CODE);
                this.columnFINBANKACC_NO = new global::System.Data.DataColumn("FINBANKACC_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFINBANKACC_NO);
                this.columnEXPENSE_BANK = new global::System.Data.DataColumn("EXPENSE_BANK", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXPENSE_BANK);
                this.columnEXPENSE_BRANCH = new global::System.Data.DataColumn("EXPENSE_BRANCH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXPENSE_BRANCH);
                this.columnEXPENSE_ACCID = new global::System.Data.DataColumn("EXPENSE_ACCID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXPENSE_ACCID);
                this.columnACCID_FLAG = new global::System.Data.DataColumn("ACCID_FLAG", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACCID_FLAG);
                this.columnTOFROM_ACCID = new global::System.Data.DataColumn("TOFROM_ACCID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTOFROM_ACCID);
                this.columnREF_SYSTEM = new global::System.Data.DataColumn("REF_SYSTEM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREF_SYSTEM);
                this.columnREF_SLIPNO = new global::System.Data.DataColumn("REF_SLIPNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREF_SLIPNO);
                this.columnREF_SLIPAMT = new global::System.Data.DataColumn("REF_SLIPAMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREF_SLIPAMT);
                this.columnSLIP_AMT = new global::System.Data.DataColumn("SLIP_AMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSLIP_AMT);
                this.columnSLIP_STATUS = new global::System.Data.DataColumn("SLIP_STATUS", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSLIP_STATUS);
                this.columnMEMBGROUP_CODE = new global::System.Data.DataColumn("MEMBGROUP_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMEMBGROUP_CODE);
                this.columnENTRY_ID = new global::System.Data.DataColumn("ENTRY_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnENTRY_ID);
                this.columnENTRY_DATE = new global::System.Data.DataColumn("ENTRY_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnENTRY_DATE);
                this.columnCANCEL_ID = new global::System.Data.DataColumn("CANCEL_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCANCEL_ID);
                this.columnCANCEL_DATE = new global::System.Data.DataColumn("CANCEL_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCANCEL_DATE);
                this.columnFINPOST_STATUS = new global::System.Data.DataColumn("FINPOST_STATUS", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFINPOST_STATUS);
                this.columnPOSTTOVC_FLAG = new global::System.Data.DataColumn("POSTTOVC_FLAG", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPOSTTOVC_FLAG);
                this.columnVOUCHER_NO = new global::System.Data.DataColumn("VOUCHER_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVOUCHER_NO);
                this.columnCANCELTOVC_FLAG = new global::System.Data.DataColumn("CANCELTOVC_FLAG", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCANCELTOVC_FLAG);
                this.columnCANCELVC_NO = new global::System.Data.DataColumn("CANCELVC_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCANCELVC_NO);
                this.columnMEMBGROUP_DESC = new global::System.Data.DataColumn("MEMBGROUP_DESC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMEMBGROUP_DESC);
                this.columnSLIP_DATE_S = new global::System.Data.DataColumn("SLIP_DATE_S", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSLIP_DATE_S);
                this.columnSLIP_DATE_E = new global::System.Data.DataColumn("SLIP_DATE_E", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSLIP_DATE_E);
                this.columnMEMB_NAME = new global::System.Data.DataColumn("MEMB_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMEMB_NAME);
                this.columnMEMB_SURNAME = new global::System.Data.DataColumn("MEMB_SURNAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMEMB_SURNAME);
                this.columnCOMPUTE1 = new global::System.Data.DataColumn("COMPUTE1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPUTE1);
                this.columnPRENAME_DESC = new global::System.Data.DataColumn("PRENAME_DESC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRENAME_DESC);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCOOP_ID,
                                this.columnPAYINSLIP_NO}, true));
                this.columnCOOP_ID.AllowDBNull = false;
                this.columnCOOP_ID.MaxLength = 6;
                this.columnPAYINSLIP_NO.AllowDBNull = false;
                this.columnPAYINSLIP_NO.MaxLength = 10;
                this.columnMEMCOOP_ID.MaxLength = 6;
                this.columnMEMBER_NO.MaxLength = 8;
                this.columnDOCUMENT_NO.MaxLength = 15;
                this.columnSLIPTYPE_CODE.MaxLength = 3;
                this.columnMONEYTYPE_CODE.MaxLength = 3;
                this.columnFINBANKACC_NO.MaxLength = 15;
                this.columnEXPENSE_BANK.MaxLength = 3;
                this.columnEXPENSE_BRANCH.MaxLength = 4;
                this.columnEXPENSE_ACCID.MaxLength = 15;
                this.columnTOFROM_ACCID.MaxLength = 15;
                this.columnREF_SYSTEM.MaxLength = 15;
                this.columnREF_SLIPNO.MaxLength = 15;
                this.columnMEMBGROUP_CODE.MaxLength = 8;
                this.columnENTRY_ID.MaxLength = 32;
                this.columnCANCEL_ID.MaxLength = 32;
                this.columnVOUCHER_NO.MaxLength = 15;
                this.columnCANCELVC_NO.MaxLength = 15;
                this.columnCOMPUTE1.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SLSLIPPAYINRow NewSLSLIPPAYINRow() {
                return ((SLSLIPPAYINRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SLSLIPPAYINRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SLSLIPPAYINRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitExpressions() {
                this.COMPUTE1Column.Expression = "prename_desc + memb_name +\'  \'+ memb_surname ";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SLSLIPPAYINRowChanged != null)) {
                    this.SLSLIPPAYINRowChanged(this, new SLSLIPPAYINRowChangeEvent(((SLSLIPPAYINRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SLSLIPPAYINRowChanging != null)) {
                    this.SLSLIPPAYINRowChanging(this, new SLSLIPPAYINRowChangeEvent(((SLSLIPPAYINRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SLSLIPPAYINRowDeleted != null)) {
                    this.SLSLIPPAYINRowDeleted(this, new SLSLIPPAYINRowChangeEvent(((SLSLIPPAYINRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SLSLIPPAYINRowDeleting != null)) {
                    this.SLSLIPPAYINRowDeleting(this, new SLSLIPPAYINRowChangeEvent(((SLSLIPPAYINRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveSLSLIPPAYINRow(SLSLIPPAYINRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SLSLIPPAYINDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SLSLIPPAYINRow : global::System.Data.DataRow {
            
            private SLSLIPPAYINDataTable tableSLSLIPPAYIN;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SLSLIPPAYINRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSLSLIPPAYIN = ((SLSLIPPAYINDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string COOP_ID {
                get {
                    return ((string)(this[this.tableSLSLIPPAYIN.COOP_IDColumn]));
                }
                set {
                    this[this.tableSLSLIPPAYIN.COOP_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PAYINSLIP_NO {
                get {
                    return ((string)(this[this.tableSLSLIPPAYIN.PAYINSLIP_NOColumn]));
                }
                set {
                    this[this.tableSLSLIPPAYIN.PAYINSLIP_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MEMCOOP_ID {
                get {
                    try {
                        return ((string)(this[this.tableSLSLIPPAYIN.MEMCOOP_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MEMCOOP_ID\' in table \'SLSLIPPAYIN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSLSLIPPAYIN.MEMCOOP_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MEMBER_NO {
                get {
                    try {
                        return ((string)(this[this.tableSLSLIPPAYIN.MEMBER_NOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MEMBER_NO\' in table \'SLSLIPPAYIN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSLSLIPPAYIN.MEMBER_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DOCUMENT_NO {
                get {
                    try {
                        return ((string)(this[this.tableSLSLIPPAYIN.DOCUMENT_NOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DOCUMENT_NO\' in table \'SLSLIPPAYIN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSLSLIPPAYIN.DOCUMENT_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SLIPTYPE_CODE {
                get {
                    try {
                        return ((string)(this[this.tableSLSLIPPAYIN.SLIPTYPE_CODEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SLIPTYPE_CODE\' in table \'SLSLIPPAYIN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSLSLIPPAYIN.SLIPTYPE_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime SLIP_DATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSLSLIPPAYIN.SLIP_DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SLIP_DATE\' in table \'SLSLIPPAYIN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSLSLIPPAYIN.SLIP_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime OPERATE_DATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSLSLIPPAYIN.OPERATE_DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OPERATE_DATE\' in table \'SLSLIPPAYIN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSLSLIPPAYIN.OPERATE_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal SHARESTKBF_VALUE {
                get {
                    try {
                        return ((decimal)(this[this.tableSLSLIPPAYIN.SHARESTKBF_VALUEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SHARESTKBF_VALUE\' in table \'SLSLIPPAYIN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSLSLIPPAYIN.SHARESTKBF_VALUEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal SHARESTK_VALUE {
                get {
                    try {
                        return ((decimal)(this[this.tableSLSLIPPAYIN.SHARESTK_VALUEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SHARESTK_VALUE\' in table \'SLSLIPPAYIN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSLSLIPPAYIN.SHARESTK_VALUEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal INTACCUM_AMT {
                get {
                    try {
                        return ((decimal)(this[this.tableSLSLIPPAYIN.INTACCUM_AMTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INTACCUM_AMT\' in table \'SLSLIPPAYIN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSLSLIPPAYIN.INTACCUM_AMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MONEYTYPE_CODE {
                get {
                    try {
                        return ((string)(this[this.tableSLSLIPPAYIN.MONEYTYPE_CODEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MONEYTYPE_CODE\' in table \'SLSLIPPAYIN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSLSLIPPAYIN.MONEYTYPE_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FINBANKACC_NO {
                get {
                    try {
                        return ((string)(this[this.tableSLSLIPPAYIN.FINBANKACC_NOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FINBANKACC_NO\' in table \'SLSLIPPAYIN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSLSLIPPAYIN.FINBANKACC_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EXPENSE_BANK {
                get {
                    try {
                        return ((string)(this[this.tableSLSLIPPAYIN.EXPENSE_BANKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EXPENSE_BANK\' in table \'SLSLIPPAYIN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSLSLIPPAYIN.EXPENSE_BANKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EXPENSE_BRANCH {
                get {
                    try {
                        return ((string)(this[this.tableSLSLIPPAYIN.EXPENSE_BRANCHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EXPENSE_BRANCH\' in table \'SLSLIPPAYIN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSLSLIPPAYIN.EXPENSE_BRANCHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EXPENSE_ACCID {
                get {
                    try {
                        return ((string)(this[this.tableSLSLIPPAYIN.EXPENSE_ACCIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EXPENSE_ACCID\' in table \'SLSLIPPAYIN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSLSLIPPAYIN.EXPENSE_ACCIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ACCID_FLAG {
                get {
                    try {
                        return ((decimal)(this[this.tableSLSLIPPAYIN.ACCID_FLAGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ACCID_FLAG\' in table \'SLSLIPPAYIN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSLSLIPPAYIN.ACCID_FLAGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TOFROM_ACCID {
                get {
                    try {
                        return ((string)(this[this.tableSLSLIPPAYIN.TOFROM_ACCIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TOFROM_ACCID\' in table \'SLSLIPPAYIN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSLSLIPPAYIN.TOFROM_ACCIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string REF_SYSTEM {
                get {
                    try {
                        return ((string)(this[this.tableSLSLIPPAYIN.REF_SYSTEMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'REF_SYSTEM\' in table \'SLSLIPPAYIN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSLSLIPPAYIN.REF_SYSTEMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string REF_SLIPNO {
                get {
                    try {
                        return ((string)(this[this.tableSLSLIPPAYIN.REF_SLIPNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'REF_SLIPNO\' in table \'SLSLIPPAYIN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSLSLIPPAYIN.REF_SLIPNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal REF_SLIPAMT {
                get {
                    try {
                        return ((decimal)(this[this.tableSLSLIPPAYIN.REF_SLIPAMTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'REF_SLIPAMT\' in table \'SLSLIPPAYIN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSLSLIPPAYIN.REF_SLIPAMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal SLIP_AMT {
                get {
                    try {
                        return ((decimal)(this[this.tableSLSLIPPAYIN.SLIP_AMTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SLIP_AMT\' in table \'SLSLIPPAYIN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSLSLIPPAYIN.SLIP_AMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal SLIP_STATUS {
                get {
                    try {
                        return ((decimal)(this[this.tableSLSLIPPAYIN.SLIP_STATUSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SLIP_STATUS\' in table \'SLSLIPPAYIN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSLSLIPPAYIN.SLIP_STATUSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MEMBGROUP_CODE {
                get {
                    try {
                        return ((string)(this[this.tableSLSLIPPAYIN.MEMBGROUP_CODEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MEMBGROUP_CODE\' in table \'SLSLIPPAYIN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSLSLIPPAYIN.MEMBGROUP_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ENTRY_ID {
                get {
                    try {
                        return ((string)(this[this.tableSLSLIPPAYIN.ENTRY_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ENTRY_ID\' in table \'SLSLIPPAYIN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSLSLIPPAYIN.ENTRY_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ENTRY_DATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSLSLIPPAYIN.ENTRY_DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ENTRY_DATE\' in table \'SLSLIPPAYIN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSLSLIPPAYIN.ENTRY_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CANCEL_ID {
                get {
                    try {
                        return ((string)(this[this.tableSLSLIPPAYIN.CANCEL_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CANCEL_ID\' in table \'SLSLIPPAYIN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSLSLIPPAYIN.CANCEL_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime CANCEL_DATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSLSLIPPAYIN.CANCEL_DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CANCEL_DATE\' in table \'SLSLIPPAYIN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSLSLIPPAYIN.CANCEL_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal FINPOST_STATUS {
                get {
                    try {
                        return ((decimal)(this[this.tableSLSLIPPAYIN.FINPOST_STATUSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FINPOST_STATUS\' in table \'SLSLIPPAYIN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSLSLIPPAYIN.FINPOST_STATUSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal POSTTOVC_FLAG {
                get {
                    try {
                        return ((decimal)(this[this.tableSLSLIPPAYIN.POSTTOVC_FLAGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'POSTTOVC_FLAG\' in table \'SLSLIPPAYIN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSLSLIPPAYIN.POSTTOVC_FLAGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string VOUCHER_NO {
                get {
                    try {
                        return ((string)(this[this.tableSLSLIPPAYIN.VOUCHER_NOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VOUCHER_NO\' in table \'SLSLIPPAYIN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSLSLIPPAYIN.VOUCHER_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CANCELTOVC_FLAG {
                get {
                    try {
                        return ((decimal)(this[this.tableSLSLIPPAYIN.CANCELTOVC_FLAGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CANCELTOVC_FLAG\' in table \'SLSLIPPAYIN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSLSLIPPAYIN.CANCELTOVC_FLAGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CANCELVC_NO {
                get {
                    try {
                        return ((string)(this[this.tableSLSLIPPAYIN.CANCELVC_NOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CANCELVC_NO\' in table \'SLSLIPPAYIN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSLSLIPPAYIN.CANCELVC_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MEMBGROUP_DESC {
                get {
                    try {
                        return ((string)(this[this.tableSLSLIPPAYIN.MEMBGROUP_DESCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MEMBGROUP_DESC\' in table \'SLSLIPPAYIN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSLSLIPPAYIN.MEMBGROUP_DESCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime SLIP_DATE_S {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSLSLIPPAYIN.SLIP_DATE_SColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SLIP_DATE_S\' in table \'SLSLIPPAYIN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSLSLIPPAYIN.SLIP_DATE_SColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime SLIP_DATE_E {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSLSLIPPAYIN.SLIP_DATE_EColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SLIP_DATE_E\' in table \'SLSLIPPAYIN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSLSLIPPAYIN.SLIP_DATE_EColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MEMB_NAME {
                get {
                    try {
                        return ((string)(this[this.tableSLSLIPPAYIN.MEMB_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MEMB_NAME\' in table \'SLSLIPPAYIN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSLSLIPPAYIN.MEMB_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MEMB_SURNAME {
                get {
                    try {
                        return ((string)(this[this.tableSLSLIPPAYIN.MEMB_SURNAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MEMB_SURNAME\' in table \'SLSLIPPAYIN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSLSLIPPAYIN.MEMB_SURNAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string COMPUTE1 {
                get {
                    try {
                        return ((string)(this[this.tableSLSLIPPAYIN.COMPUTE1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'COMPUTE1\' in table \'SLSLIPPAYIN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSLSLIPPAYIN.COMPUTE1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PRENAME_DESC {
                get {
                    try {
                        return ((string)(this[this.tableSLSLIPPAYIN.PRENAME_DESCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PRENAME_DESC\' in table \'SLSLIPPAYIN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSLSLIPPAYIN.PRENAME_DESCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMEMCOOP_IDNull() {
                return this.IsNull(this.tableSLSLIPPAYIN.MEMCOOP_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMEMCOOP_IDNull() {
                this[this.tableSLSLIPPAYIN.MEMCOOP_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMEMBER_NONull() {
                return this.IsNull(this.tableSLSLIPPAYIN.MEMBER_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMEMBER_NONull() {
                this[this.tableSLSLIPPAYIN.MEMBER_NOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDOCUMENT_NONull() {
                return this.IsNull(this.tableSLSLIPPAYIN.DOCUMENT_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDOCUMENT_NONull() {
                this[this.tableSLSLIPPAYIN.DOCUMENT_NOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSLIPTYPE_CODENull() {
                return this.IsNull(this.tableSLSLIPPAYIN.SLIPTYPE_CODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSLIPTYPE_CODENull() {
                this[this.tableSLSLIPPAYIN.SLIPTYPE_CODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSLIP_DATENull() {
                return this.IsNull(this.tableSLSLIPPAYIN.SLIP_DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSLIP_DATENull() {
                this[this.tableSLSLIPPAYIN.SLIP_DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOPERATE_DATENull() {
                return this.IsNull(this.tableSLSLIPPAYIN.OPERATE_DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOPERATE_DATENull() {
                this[this.tableSLSLIPPAYIN.OPERATE_DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSHARESTKBF_VALUENull() {
                return this.IsNull(this.tableSLSLIPPAYIN.SHARESTKBF_VALUEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSHARESTKBF_VALUENull() {
                this[this.tableSLSLIPPAYIN.SHARESTKBF_VALUEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSHARESTK_VALUENull() {
                return this.IsNull(this.tableSLSLIPPAYIN.SHARESTK_VALUEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSHARESTK_VALUENull() {
                this[this.tableSLSLIPPAYIN.SHARESTK_VALUEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsINTACCUM_AMTNull() {
                return this.IsNull(this.tableSLSLIPPAYIN.INTACCUM_AMTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetINTACCUM_AMTNull() {
                this[this.tableSLSLIPPAYIN.INTACCUM_AMTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMONEYTYPE_CODENull() {
                return this.IsNull(this.tableSLSLIPPAYIN.MONEYTYPE_CODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMONEYTYPE_CODENull() {
                this[this.tableSLSLIPPAYIN.MONEYTYPE_CODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFINBANKACC_NONull() {
                return this.IsNull(this.tableSLSLIPPAYIN.FINBANKACC_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFINBANKACC_NONull() {
                this[this.tableSLSLIPPAYIN.FINBANKACC_NOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEXPENSE_BANKNull() {
                return this.IsNull(this.tableSLSLIPPAYIN.EXPENSE_BANKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEXPENSE_BANKNull() {
                this[this.tableSLSLIPPAYIN.EXPENSE_BANKColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEXPENSE_BRANCHNull() {
                return this.IsNull(this.tableSLSLIPPAYIN.EXPENSE_BRANCHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEXPENSE_BRANCHNull() {
                this[this.tableSLSLIPPAYIN.EXPENSE_BRANCHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEXPENSE_ACCIDNull() {
                return this.IsNull(this.tableSLSLIPPAYIN.EXPENSE_ACCIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEXPENSE_ACCIDNull() {
                this[this.tableSLSLIPPAYIN.EXPENSE_ACCIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsACCID_FLAGNull() {
                return this.IsNull(this.tableSLSLIPPAYIN.ACCID_FLAGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetACCID_FLAGNull() {
                this[this.tableSLSLIPPAYIN.ACCID_FLAGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTOFROM_ACCIDNull() {
                return this.IsNull(this.tableSLSLIPPAYIN.TOFROM_ACCIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTOFROM_ACCIDNull() {
                this[this.tableSLSLIPPAYIN.TOFROM_ACCIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsREF_SYSTEMNull() {
                return this.IsNull(this.tableSLSLIPPAYIN.REF_SYSTEMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetREF_SYSTEMNull() {
                this[this.tableSLSLIPPAYIN.REF_SYSTEMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsREF_SLIPNONull() {
                return this.IsNull(this.tableSLSLIPPAYIN.REF_SLIPNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetREF_SLIPNONull() {
                this[this.tableSLSLIPPAYIN.REF_SLIPNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsREF_SLIPAMTNull() {
                return this.IsNull(this.tableSLSLIPPAYIN.REF_SLIPAMTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetREF_SLIPAMTNull() {
                this[this.tableSLSLIPPAYIN.REF_SLIPAMTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSLIP_AMTNull() {
                return this.IsNull(this.tableSLSLIPPAYIN.SLIP_AMTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSLIP_AMTNull() {
                this[this.tableSLSLIPPAYIN.SLIP_AMTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSLIP_STATUSNull() {
                return this.IsNull(this.tableSLSLIPPAYIN.SLIP_STATUSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSLIP_STATUSNull() {
                this[this.tableSLSLIPPAYIN.SLIP_STATUSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMEMBGROUP_CODENull() {
                return this.IsNull(this.tableSLSLIPPAYIN.MEMBGROUP_CODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMEMBGROUP_CODENull() {
                this[this.tableSLSLIPPAYIN.MEMBGROUP_CODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsENTRY_IDNull() {
                return this.IsNull(this.tableSLSLIPPAYIN.ENTRY_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetENTRY_IDNull() {
                this[this.tableSLSLIPPAYIN.ENTRY_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsENTRY_DATENull() {
                return this.IsNull(this.tableSLSLIPPAYIN.ENTRY_DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetENTRY_DATENull() {
                this[this.tableSLSLIPPAYIN.ENTRY_DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCANCEL_IDNull() {
                return this.IsNull(this.tableSLSLIPPAYIN.CANCEL_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCANCEL_IDNull() {
                this[this.tableSLSLIPPAYIN.CANCEL_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCANCEL_DATENull() {
                return this.IsNull(this.tableSLSLIPPAYIN.CANCEL_DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCANCEL_DATENull() {
                this[this.tableSLSLIPPAYIN.CANCEL_DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFINPOST_STATUSNull() {
                return this.IsNull(this.tableSLSLIPPAYIN.FINPOST_STATUSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFINPOST_STATUSNull() {
                this[this.tableSLSLIPPAYIN.FINPOST_STATUSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPOSTTOVC_FLAGNull() {
                return this.IsNull(this.tableSLSLIPPAYIN.POSTTOVC_FLAGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPOSTTOVC_FLAGNull() {
                this[this.tableSLSLIPPAYIN.POSTTOVC_FLAGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVOUCHER_NONull() {
                return this.IsNull(this.tableSLSLIPPAYIN.VOUCHER_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVOUCHER_NONull() {
                this[this.tableSLSLIPPAYIN.VOUCHER_NOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCANCELTOVC_FLAGNull() {
                return this.IsNull(this.tableSLSLIPPAYIN.CANCELTOVC_FLAGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCANCELTOVC_FLAGNull() {
                this[this.tableSLSLIPPAYIN.CANCELTOVC_FLAGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCANCELVC_NONull() {
                return this.IsNull(this.tableSLSLIPPAYIN.CANCELVC_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCANCELVC_NONull() {
                this[this.tableSLSLIPPAYIN.CANCELVC_NOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMEMBGROUP_DESCNull() {
                return this.IsNull(this.tableSLSLIPPAYIN.MEMBGROUP_DESCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMEMBGROUP_DESCNull() {
                this[this.tableSLSLIPPAYIN.MEMBGROUP_DESCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSLIP_DATE_SNull() {
                return this.IsNull(this.tableSLSLIPPAYIN.SLIP_DATE_SColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSLIP_DATE_SNull() {
                this[this.tableSLSLIPPAYIN.SLIP_DATE_SColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSLIP_DATE_ENull() {
                return this.IsNull(this.tableSLSLIPPAYIN.SLIP_DATE_EColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSLIP_DATE_ENull() {
                this[this.tableSLSLIPPAYIN.SLIP_DATE_EColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMEMB_NAMENull() {
                return this.IsNull(this.tableSLSLIPPAYIN.MEMB_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMEMB_NAMENull() {
                this[this.tableSLSLIPPAYIN.MEMB_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMEMB_SURNAMENull() {
                return this.IsNull(this.tableSLSLIPPAYIN.MEMB_SURNAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMEMB_SURNAMENull() {
                this[this.tableSLSLIPPAYIN.MEMB_SURNAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCOMPUTE1Null() {
                return this.IsNull(this.tableSLSLIPPAYIN.COMPUTE1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCOMPUTE1Null() {
                this[this.tableSLSLIPPAYIN.COMPUTE1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPRENAME_DESCNull() {
                return this.IsNull(this.tableSLSLIPPAYIN.PRENAME_DESCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPRENAME_DESCNull() {
                this[this.tableSLSLIPPAYIN.PRENAME_DESCColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class SLSLIPPAYINRowChangeEvent : global::System.EventArgs {
            
            private SLSLIPPAYINRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SLSLIPPAYINRowChangeEvent(SLSLIPPAYINRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SLSLIPPAYINRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace Saving.Applications.shrlon.ws_sl_slip_pay_ctrl.w_dlg_sl_reprint_ctrl.DataSet1TableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SLSLIPPAYINTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OracleClient.OracleDataAdapter _adapter;
        
        private global::System.Data.OracleClient.OracleConnection _connection;
        
        private global::System.Data.OracleClient.OracleTransaction _transaction;
        
        private global::System.Data.OracleClient.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public SLSLIPPAYINTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.OracleClient.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.OracleClient.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OracleClient.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.OracleClient.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.OracleClient.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OracleClient.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SLSLIPPAYIN";
            tableMapping.ColumnMappings.Add("COOP_ID", "COOP_ID");
            tableMapping.ColumnMappings.Add("PAYINSLIP_NO", "PAYINSLIP_NO");
            tableMapping.ColumnMappings.Add("MEMCOOP_ID", "MEMCOOP_ID");
            tableMapping.ColumnMappings.Add("MEMBER_NO", "MEMBER_NO");
            tableMapping.ColumnMappings.Add("DOCUMENT_NO", "DOCUMENT_NO");
            tableMapping.ColumnMappings.Add("SLIPTYPE_CODE", "SLIPTYPE_CODE");
            tableMapping.ColumnMappings.Add("SLIP_DATE", "SLIP_DATE");
            tableMapping.ColumnMappings.Add("OPERATE_DATE", "OPERATE_DATE");
            tableMapping.ColumnMappings.Add("SHARESTKBF_VALUE", "SHARESTKBF_VALUE");
            tableMapping.ColumnMappings.Add("SHARESTK_VALUE", "SHARESTK_VALUE");
            tableMapping.ColumnMappings.Add("INTACCUM_AMT", "INTACCUM_AMT");
            tableMapping.ColumnMappings.Add("MONEYTYPE_CODE", "MONEYTYPE_CODE");
            tableMapping.ColumnMappings.Add("FINBANKACC_NO", "FINBANKACC_NO");
            tableMapping.ColumnMappings.Add("EXPENSE_BANK", "EXPENSE_BANK");
            tableMapping.ColumnMappings.Add("EXPENSE_BRANCH", "EXPENSE_BRANCH");
            tableMapping.ColumnMappings.Add("EXPENSE_ACCID", "EXPENSE_ACCID");
            tableMapping.ColumnMappings.Add("ACCID_FLAG", "ACCID_FLAG");
            tableMapping.ColumnMappings.Add("TOFROM_ACCID", "TOFROM_ACCID");
            tableMapping.ColumnMappings.Add("REF_SYSTEM", "REF_SYSTEM");
            tableMapping.ColumnMappings.Add("REF_SLIPNO", "REF_SLIPNO");
            tableMapping.ColumnMappings.Add("REF_SLIPAMT", "REF_SLIPAMT");
            tableMapping.ColumnMappings.Add("SLIP_AMT", "SLIP_AMT");
            tableMapping.ColumnMappings.Add("SLIP_STATUS", "SLIP_STATUS");
            tableMapping.ColumnMappings.Add("MEMBGROUP_CODE", "MEMBGROUP_CODE");
            tableMapping.ColumnMappings.Add("ENTRY_ID", "ENTRY_ID");
            tableMapping.ColumnMappings.Add("ENTRY_DATE", "ENTRY_DATE");
            tableMapping.ColumnMappings.Add("CANCEL_ID", "CANCEL_ID");
            tableMapping.ColumnMappings.Add("CANCEL_DATE", "CANCEL_DATE");
            tableMapping.ColumnMappings.Add("FINPOST_STATUS", "FINPOST_STATUS");
            tableMapping.ColumnMappings.Add("POSTTOVC_FLAG", "POSTTOVC_FLAG");
            tableMapping.ColumnMappings.Add("VOUCHER_NO", "VOUCHER_NO");
            tableMapping.ColumnMappings.Add("CANCELTOVC_FLAG", "CANCELTOVC_FLAG");
            tableMapping.ColumnMappings.Add("CANCELVC_NO", "CANCELVC_NO");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM \"SLSLIPPAYIN\" WHERE ((\"COOP_ID\" = :Original_COOP_ID) AND (\"PAYINSLIP_" +
                "NO\" = :Original_PAYINSLIP_NO))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_COOP_ID", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "COOP_ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_PAYINSLIP_NO", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "PAYINSLIP_NO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO ""SLSLIPPAYIN"" (""COOP_ID"", ""PAYINSLIP_NO"", ""MEMCOOP_ID"", ""MEMBER_NO"", ""DOCUMENT_NO"", ""SLIPTYPE_CODE"", ""SLIP_DATE"", ""OPERATE_DATE"", ""SHARESTKBF_VALUE"", ""SHARESTK_VALUE"", ""INTACCUM_AMT"", ""MONEYTYPE_CODE"", ""FINBANKACC_NO"", ""EXPENSE_BANK"", ""EXPENSE_BRANCH"", ""EXPENSE_ACCID"", ""ACCID_FLAG"", ""TOFROM_ACCID"", ""REF_SYSTEM"", ""REF_SLIPNO"", ""REF_SLIPAMT"", ""SLIP_AMT"", ""SLIP_STATUS"", ""MEMBGROUP_CODE"", ""ENTRY_ID"", ""ENTRY_DATE"", ""CANCEL_ID"", ""CANCEL_DATE"", ""FINPOST_STATUS"", ""POSTTOVC_FLAG"", ""VOUCHER_NO"", ""CANCELTOVC_FLAG"", ""CANCELVC_NO"") VALUES (:COOP_ID, :PAYINSLIP_NO, :MEMCOOP_ID, :MEMBER_NO, :DOCUMENT_NO, :SLIPTYPE_CODE, :SLIP_DATE, :OPERATE_DATE, :SHARESTKBF_VALUE, :SHARESTK_VALUE, :INTACCUM_AMT, :MONEYTYPE_CODE, :FINBANKACC_NO, :EXPENSE_BANK, :EXPENSE_BRANCH, :EXPENSE_ACCID, :ACCID_FLAG, :TOFROM_ACCID, :REF_SYSTEM, :REF_SLIPNO, :REF_SLIPAMT, :SLIP_AMT, :SLIP_STATUS, :MEMBGROUP_CODE, :ENTRY_ID, :ENTRY_DATE, :CANCEL_ID, :CANCEL_DATE, :FINPOST_STATUS, :POSTTOVC_FLAG, :VOUCHER_NO, :CANCELTOVC_FLAG, :CANCELVC_NO)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("COOP_ID", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "COOP_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("PAYINSLIP_NO", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "PAYINSLIP_NO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MEMCOOP_ID", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "MEMCOOP_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MEMBER_NO", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "MEMBER_NO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("DOCUMENT_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "DOCUMENT_NO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SLIPTYPE_CODE", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "SLIPTYPE_CODE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SLIP_DATE", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "SLIP_DATE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("OPERATE_DATE", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "OPERATE_DATE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SHARESTKBF_VALUE", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "SHARESTKBF_VALUE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SHARESTK_VALUE", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "SHARESTK_VALUE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("INTACCUM_AMT", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "INTACCUM_AMT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MONEYTYPE_CODE", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "MONEYTYPE_CODE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FINBANKACC_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "FINBANKACC_NO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("EXPENSE_BANK", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "EXPENSE_BANK", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("EXPENSE_BRANCH", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "EXPENSE_BRANCH", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("EXPENSE_ACCID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "EXPENSE_ACCID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ACCID_FLAG", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ACCID_FLAG", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("TOFROM_ACCID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "TOFROM_ACCID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("REF_SYSTEM", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "REF_SYSTEM", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("REF_SLIPNO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "REF_SLIPNO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("REF_SLIPAMT", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "REF_SLIPAMT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SLIP_AMT", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "SLIP_AMT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SLIP_STATUS", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "SLIP_STATUS", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MEMBGROUP_CODE", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "MEMBGROUP_CODE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ENTRY_ID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "ENTRY_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ENTRY_DATE", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "ENTRY_DATE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CANCEL_ID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "CANCEL_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CANCEL_DATE", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "CANCEL_DATE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FINPOST_STATUS", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FINPOST_STATUS", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("POSTTOVC_FLAG", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "POSTTOVC_FLAG", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("VOUCHER_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "VOUCHER_NO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CANCELTOVC_FLAG", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "CANCELTOVC_FLAG", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CANCELVC_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "CANCELVC_NO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""SLSLIPPAYIN"" SET ""COOP_ID"" = :COOP_ID, ""PAYINSLIP_NO"" = :PAYINSLIP_NO, ""MEMCOOP_ID"" = :MEMCOOP_ID, ""MEMBER_NO"" = :MEMBER_NO, ""DOCUMENT_NO"" = :DOCUMENT_NO, ""SLIPTYPE_CODE"" = :SLIPTYPE_CODE, ""SLIP_DATE"" = :SLIP_DATE, ""OPERATE_DATE"" = :OPERATE_DATE, ""SHARESTKBF_VALUE"" = :SHARESTKBF_VALUE, ""SHARESTK_VALUE"" = :SHARESTK_VALUE, ""INTACCUM_AMT"" = :INTACCUM_AMT, ""MONEYTYPE_CODE"" = :MONEYTYPE_CODE, ""FINBANKACC_NO"" = :FINBANKACC_NO, ""EXPENSE_BANK"" = :EXPENSE_BANK, ""EXPENSE_BRANCH"" = :EXPENSE_BRANCH, ""EXPENSE_ACCID"" = :EXPENSE_ACCID, ""ACCID_FLAG"" = :ACCID_FLAG, ""TOFROM_ACCID"" = :TOFROM_ACCID, ""REF_SYSTEM"" = :REF_SYSTEM, ""REF_SLIPNO"" = :REF_SLIPNO, ""REF_SLIPAMT"" = :REF_SLIPAMT, ""SLIP_AMT"" = :SLIP_AMT, ""SLIP_STATUS"" = :SLIP_STATUS, ""MEMBGROUP_CODE"" = :MEMBGROUP_CODE, ""ENTRY_ID"" = :ENTRY_ID, ""ENTRY_DATE"" = :ENTRY_DATE, ""CANCEL_ID"" = :CANCEL_ID, ""CANCEL_DATE"" = :CANCEL_DATE, ""FINPOST_STATUS"" = :FINPOST_STATUS, ""POSTTOVC_FLAG"" = :POSTTOVC_FLAG, ""VOUCHER_NO"" = :VOUCHER_NO, ""CANCELTOVC_FLAG"" = :CANCELTOVC_FLAG, ""CANCELVC_NO"" = :CANCELVC_NO WHERE ((""COOP_ID"" = :Original_COOP_ID) AND (""PAYINSLIP_NO"" = :Original_PAYINSLIP_NO))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("COOP_ID", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "COOP_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("PAYINSLIP_NO", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "PAYINSLIP_NO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MEMCOOP_ID", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "MEMCOOP_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MEMBER_NO", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "MEMBER_NO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("DOCUMENT_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "DOCUMENT_NO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SLIPTYPE_CODE", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "SLIPTYPE_CODE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SLIP_DATE", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "SLIP_DATE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("OPERATE_DATE", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "OPERATE_DATE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SHARESTKBF_VALUE", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "SHARESTKBF_VALUE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SHARESTK_VALUE", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "SHARESTK_VALUE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("INTACCUM_AMT", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "INTACCUM_AMT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MONEYTYPE_CODE", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "MONEYTYPE_CODE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FINBANKACC_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "FINBANKACC_NO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("EXPENSE_BANK", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "EXPENSE_BANK", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("EXPENSE_BRANCH", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "EXPENSE_BRANCH", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("EXPENSE_ACCID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "EXPENSE_ACCID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ACCID_FLAG", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ACCID_FLAG", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("TOFROM_ACCID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "TOFROM_ACCID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("REF_SYSTEM", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "REF_SYSTEM", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("REF_SLIPNO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "REF_SLIPNO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("REF_SLIPAMT", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "REF_SLIPAMT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SLIP_AMT", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "SLIP_AMT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SLIP_STATUS", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "SLIP_STATUS", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MEMBGROUP_CODE", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "MEMBGROUP_CODE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ENTRY_ID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "ENTRY_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ENTRY_DATE", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "ENTRY_DATE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CANCEL_ID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "CANCEL_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CANCEL_DATE", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "CANCEL_DATE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FINPOST_STATUS", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FINPOST_STATUS", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("POSTTOVC_FLAG", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "POSTTOVC_FLAG", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("VOUCHER_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "VOUCHER_NO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CANCELTOVC_FLAG", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "CANCELTOVC_FLAG", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CANCELVC_NO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "CANCELVC_NO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_COOP_ID", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "COOP_ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_PAYINSLIP_NO", global::System.Data.OracleClient.OracleType.Char, 0, global::System.Data.ParameterDirection.Input, "PAYINSLIP_NO", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.OracleClient.OracleConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["ConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OracleClient.OracleCommand[1];
            this._commandCollection[0] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT COOP_ID, PAYINSLIP_NO, MEMCOOP_ID, MEMBER_NO, DOCUMENT_NO, SLIPTYPE_CODE, SLIP_DATE, OPERATE_DATE, SHARESTKBF_VALUE, SHARESTK_VALUE, INTACCUM_AMT, MONEYTYPE_CODE, FINBANKACC_NO, EXPENSE_BANK, EXPENSE_BRANCH, EXPENSE_ACCID, ACCID_FLAG, TOFROM_ACCID, REF_SYSTEM, REF_SLIPNO, REF_SLIPAMT, SLIP_AMT, SLIP_STATUS, MEMBGROUP_CODE, ENTRY_ID, ENTRY_DATE, ENTRY_BYCOOPID, CANCEL_ID, CANCEL_DATE, FINPOST_STATUS, POSTTOVC_FLAG, VOUCHER_NO, CANCELTOVC_FLAG, CANCELVC_NO FROM SLSLIPPAYIN";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.SLSLIPPAYINDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.SLSLIPPAYINDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.SLSLIPPAYINDataTable dataTable = new DataSet1.SLSLIPPAYINDataTable(true);
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.SLSLIPPAYINDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "SLSLIPPAYIN");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_COOP_ID, string Original_PAYINSLIP_NO) {
            if ((Original_COOP_ID == null)) {
                throw new global::System.ArgumentNullException("Original_COOP_ID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_COOP_ID));
            }
            if ((Original_PAYINSLIP_NO == null)) {
                throw new global::System.ArgumentNullException("Original_PAYINSLIP_NO");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_PAYINSLIP_NO));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string COOP_ID, 
                    string PAYINSLIP_NO, 
                    string MEMCOOP_ID, 
                    string MEMBER_NO, 
                    string DOCUMENT_NO, 
                    string SLIPTYPE_CODE, 
                    global::System.Nullable<global::System.DateTime> SLIP_DATE, 
                    global::System.Nullable<global::System.DateTime> OPERATE_DATE, 
                    global::System.Nullable<decimal> SHARESTKBF_VALUE, 
                    global::System.Nullable<decimal> SHARESTK_VALUE, 
                    global::System.Nullable<decimal> INTACCUM_AMT, 
                    string MONEYTYPE_CODE, 
                    string FINBANKACC_NO, 
                    string EXPENSE_BANK, 
                    string EXPENSE_BRANCH, 
                    string EXPENSE_ACCID, 
                    global::System.Nullable<decimal> ACCID_FLAG, 
                    string TOFROM_ACCID, 
                    string REF_SYSTEM, 
                    string REF_SLIPNO, 
                    global::System.Nullable<decimal> REF_SLIPAMT, 
                    global::System.Nullable<decimal> SLIP_AMT, 
                    global::System.Nullable<decimal> SLIP_STATUS, 
                    string MEMBGROUP_CODE, 
                    string ENTRY_ID, 
                    global::System.Nullable<global::System.DateTime> ENTRY_DATE, 
                    string CANCEL_ID, 
                    global::System.Nullable<global::System.DateTime> CANCEL_DATE, 
                    global::System.Nullable<decimal> FINPOST_STATUS, 
                    global::System.Nullable<decimal> POSTTOVC_FLAG, 
                    string VOUCHER_NO, 
                    global::System.Nullable<decimal> CANCELTOVC_FLAG, 
                    string CANCELVC_NO) {
            if ((COOP_ID == null)) {
                throw new global::System.ArgumentNullException("COOP_ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(COOP_ID));
            }
            if ((PAYINSLIP_NO == null)) {
                throw new global::System.ArgumentNullException("PAYINSLIP_NO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(PAYINSLIP_NO));
            }
            if ((MEMCOOP_ID == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(MEMCOOP_ID));
            }
            if ((MEMBER_NO == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(MEMBER_NO));
            }
            if ((DOCUMENT_NO == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(DOCUMENT_NO));
            }
            if ((SLIPTYPE_CODE == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(SLIPTYPE_CODE));
            }
            if ((SLIP_DATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((System.DateTime)(SLIP_DATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((OPERATE_DATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((System.DateTime)(OPERATE_DATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((SHARESTKBF_VALUE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((decimal)(SHARESTKBF_VALUE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((SHARESTK_VALUE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((decimal)(SHARESTK_VALUE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((INTACCUM_AMT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((decimal)(INTACCUM_AMT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((MONEYTYPE_CODE == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(MONEYTYPE_CODE));
            }
            if ((FINBANKACC_NO == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(FINBANKACC_NO));
            }
            if ((EXPENSE_BANK == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(EXPENSE_BANK));
            }
            if ((EXPENSE_BRANCH == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(EXPENSE_BRANCH));
            }
            if ((EXPENSE_ACCID == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(EXPENSE_ACCID));
            }
            if ((ACCID_FLAG.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((decimal)(ACCID_FLAG.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((TOFROM_ACCID == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(TOFROM_ACCID));
            }
            if ((REF_SYSTEM == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(REF_SYSTEM));
            }
            if ((REF_SLIPNO == null)) {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(REF_SLIPNO));
            }
            if ((REF_SLIPAMT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[20].Value = ((decimal)(REF_SLIPAMT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((SLIP_AMT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[21].Value = ((decimal)(SLIP_AMT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((SLIP_STATUS.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[22].Value = ((decimal)(SLIP_STATUS.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((MEMBGROUP_CODE == null)) {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(MEMBGROUP_CODE));
            }
            if ((ENTRY_ID == null)) {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(ENTRY_ID));
            }
            if ((ENTRY_DATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[25].Value = ((System.DateTime)(ENTRY_DATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((CANCEL_ID == null)) {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = ((string)(CANCEL_ID));
            }
            if ((CANCEL_DATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[27].Value = ((System.DateTime)(CANCEL_DATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((FINPOST_STATUS.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[28].Value = ((decimal)(FINPOST_STATUS.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((POSTTOVC_FLAG.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[29].Value = ((decimal)(POSTTOVC_FLAG.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((VOUCHER_NO == null)) {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = ((string)(VOUCHER_NO));
            }
            if ((CANCELTOVC_FLAG.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[31].Value = ((decimal)(CANCELTOVC_FLAG.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((CANCELVC_NO == null)) {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = ((string)(CANCELVC_NO));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string COOP_ID, 
                    string PAYINSLIP_NO, 
                    string MEMCOOP_ID, 
                    string MEMBER_NO, 
                    string DOCUMENT_NO, 
                    string SLIPTYPE_CODE, 
                    global::System.Nullable<global::System.DateTime> SLIP_DATE, 
                    global::System.Nullable<global::System.DateTime> OPERATE_DATE, 
                    global::System.Nullable<decimal> SHARESTKBF_VALUE, 
                    global::System.Nullable<decimal> SHARESTK_VALUE, 
                    global::System.Nullable<decimal> INTACCUM_AMT, 
                    string MONEYTYPE_CODE, 
                    string FINBANKACC_NO, 
                    string EXPENSE_BANK, 
                    string EXPENSE_BRANCH, 
                    string EXPENSE_ACCID, 
                    global::System.Nullable<decimal> ACCID_FLAG, 
                    string TOFROM_ACCID, 
                    string REF_SYSTEM, 
                    string REF_SLIPNO, 
                    global::System.Nullable<decimal> REF_SLIPAMT, 
                    global::System.Nullable<decimal> SLIP_AMT, 
                    global::System.Nullable<decimal> SLIP_STATUS, 
                    string MEMBGROUP_CODE, 
                    string ENTRY_ID, 
                    global::System.Nullable<global::System.DateTime> ENTRY_DATE, 
                    string CANCEL_ID, 
                    global::System.Nullable<global::System.DateTime> CANCEL_DATE, 
                    global::System.Nullable<decimal> FINPOST_STATUS, 
                    global::System.Nullable<decimal> POSTTOVC_FLAG, 
                    string VOUCHER_NO, 
                    global::System.Nullable<decimal> CANCELTOVC_FLAG, 
                    string CANCELVC_NO, 
                    string Original_COOP_ID, 
                    string Original_PAYINSLIP_NO) {
            if ((COOP_ID == null)) {
                throw new global::System.ArgumentNullException("COOP_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(COOP_ID));
            }
            if ((PAYINSLIP_NO == null)) {
                throw new global::System.ArgumentNullException("PAYINSLIP_NO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(PAYINSLIP_NO));
            }
            if ((MEMCOOP_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(MEMCOOP_ID));
            }
            if ((MEMBER_NO == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(MEMBER_NO));
            }
            if ((DOCUMENT_NO == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(DOCUMENT_NO));
            }
            if ((SLIPTYPE_CODE == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(SLIPTYPE_CODE));
            }
            if ((SLIP_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(SLIP_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((OPERATE_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTime)(OPERATE_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((SHARESTKBF_VALUE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(SHARESTKBF_VALUE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((SHARESTK_VALUE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(SHARESTK_VALUE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((INTACCUM_AMT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((decimal)(INTACCUM_AMT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((MONEYTYPE_CODE == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(MONEYTYPE_CODE));
            }
            if ((FINBANKACC_NO == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(FINBANKACC_NO));
            }
            if ((EXPENSE_BANK == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(EXPENSE_BANK));
            }
            if ((EXPENSE_BRANCH == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(EXPENSE_BRANCH));
            }
            if ((EXPENSE_ACCID == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(EXPENSE_ACCID));
            }
            if ((ACCID_FLAG.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((decimal)(ACCID_FLAG.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((TOFROM_ACCID == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(TOFROM_ACCID));
            }
            if ((REF_SYSTEM == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(REF_SYSTEM));
            }
            if ((REF_SLIPNO == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(REF_SLIPNO));
            }
            if ((REF_SLIPAMT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((decimal)(REF_SLIPAMT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((SLIP_AMT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((decimal)(SLIP_AMT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((SLIP_STATUS.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((decimal)(SLIP_STATUS.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((MEMBGROUP_CODE == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(MEMBGROUP_CODE));
            }
            if ((ENTRY_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(ENTRY_ID));
            }
            if ((ENTRY_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((System.DateTime)(ENTRY_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((CANCEL_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(CANCEL_ID));
            }
            if ((CANCEL_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((System.DateTime)(CANCEL_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((FINPOST_STATUS.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((decimal)(FINPOST_STATUS.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((POSTTOVC_FLAG.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((decimal)(POSTTOVC_FLAG.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((VOUCHER_NO == null)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(VOUCHER_NO));
            }
            if ((CANCELTOVC_FLAG.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((decimal)(CANCELTOVC_FLAG.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((CANCELVC_NO == null)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(CANCELVC_NO));
            }
            if ((Original_COOP_ID == null)) {
                throw new global::System.ArgumentNullException("Original_COOP_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(Original_COOP_ID));
            }
            if ((Original_PAYINSLIP_NO == null)) {
                throw new global::System.ArgumentNullException("Original_PAYINSLIP_NO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(Original_PAYINSLIP_NO));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string MEMCOOP_ID, 
                    string MEMBER_NO, 
                    string DOCUMENT_NO, 
                    string SLIPTYPE_CODE, 
                    global::System.Nullable<global::System.DateTime> SLIP_DATE, 
                    global::System.Nullable<global::System.DateTime> OPERATE_DATE, 
                    global::System.Nullable<decimal> SHARESTKBF_VALUE, 
                    global::System.Nullable<decimal> SHARESTK_VALUE, 
                    global::System.Nullable<decimal> INTACCUM_AMT, 
                    string MONEYTYPE_CODE, 
                    string FINBANKACC_NO, 
                    string EXPENSE_BANK, 
                    string EXPENSE_BRANCH, 
                    string EXPENSE_ACCID, 
                    global::System.Nullable<decimal> ACCID_FLAG, 
                    string TOFROM_ACCID, 
                    string REF_SYSTEM, 
                    string REF_SLIPNO, 
                    global::System.Nullable<decimal> REF_SLIPAMT, 
                    global::System.Nullable<decimal> SLIP_AMT, 
                    global::System.Nullable<decimal> SLIP_STATUS, 
                    string MEMBGROUP_CODE, 
                    string ENTRY_ID, 
                    global::System.Nullable<global::System.DateTime> ENTRY_DATE, 
                    string CANCEL_ID, 
                    global::System.Nullable<global::System.DateTime> CANCEL_DATE, 
                    global::System.Nullable<decimal> FINPOST_STATUS, 
                    global::System.Nullable<decimal> POSTTOVC_FLAG, 
                    string VOUCHER_NO, 
                    global::System.Nullable<decimal> CANCELTOVC_FLAG, 
                    string CANCELVC_NO, 
                    string Original_COOP_ID, 
                    string Original_PAYINSLIP_NO) {
            return this.Update(Original_COOP_ID, Original_PAYINSLIP_NO, MEMCOOP_ID, MEMBER_NO, DOCUMENT_NO, SLIPTYPE_CODE, SLIP_DATE, OPERATE_DATE, SHARESTKBF_VALUE, SHARESTK_VALUE, INTACCUM_AMT, MONEYTYPE_CODE, FINBANKACC_NO, EXPENSE_BANK, EXPENSE_BRANCH, EXPENSE_ACCID, ACCID_FLAG, TOFROM_ACCID, REF_SYSTEM, REF_SLIPNO, REF_SLIPAMT, SLIP_AMT, SLIP_STATUS, MEMBGROUP_CODE, ENTRY_ID, ENTRY_DATE, CANCEL_ID, CANCEL_DATE, FINPOST_STATUS, POSTTOVC_FLAG, VOUCHER_NO, CANCELTOVC_FLAG, CANCELVC_NO, Original_COOP_ID, Original_PAYINSLIP_NO);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private SLSLIPPAYINTableAdapter _sLSLIPPAYINTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public SLSLIPPAYINTableAdapter SLSLIPPAYINTableAdapter {
            get {
                return this._sLSLIPPAYINTableAdapter;
            }
            set {
                this._sLSLIPPAYINTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._sLSLIPPAYINTableAdapter != null) 
                            && (this._sLSLIPPAYINTableAdapter.Connection != null))) {
                    return this._sLSLIPPAYINTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._sLSLIPPAYINTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(DataSet1 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._sLSLIPPAYINTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.SLSLIPPAYIN.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._sLSLIPPAYINTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(DataSet1 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._sLSLIPPAYINTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.SLSLIPPAYIN.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._sLSLIPPAYINTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(DataSet1 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._sLSLIPPAYINTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.SLSLIPPAYIN.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._sLSLIPPAYINTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(DataSet1 dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._sLSLIPPAYINTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._sLSLIPPAYINTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._sLSLIPPAYINTableAdapter != null)) {
                    revertConnections.Add(this._sLSLIPPAYINTableAdapter, this._sLSLIPPAYINTableAdapter.Connection);
                    this._sLSLIPPAYINTableAdapter.Connection = ((global::System.Data.OracleClient.OracleConnection)(workConnection));
                    this._sLSLIPPAYINTableAdapter.Transaction = ((global::System.Data.OracleClient.OracleTransaction)(workTransaction));
                    if (this._sLSLIPPAYINTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._sLSLIPPAYINTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._sLSLIPPAYINTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._sLSLIPPAYINTableAdapter != null)) {
                    this._sLSLIPPAYINTableAdapter.Connection = ((global::System.Data.OracleClient.OracleConnection)(revertConnections[this._sLSLIPPAYINTableAdapter]));
                    this._sLSLIPPAYINTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591